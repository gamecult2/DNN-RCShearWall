from RCShearWall_V2.utils.functions import *

# import RCWall_Model as rcmodel
# import RCWall_Model_Simple as rcmodel
# import RCWall_Model_Shell as rcmodel
import RCWall_Model_SFI as rcmodel


# Redirect stderr to suppress error messages
# sys.stderr = open(os.devnull, 'w')


# ------------------------------ Selected Experiment for Validation Model ------------------------------

def Dazio_WSH2():
    # https://doi.org/10.1016/j.engstruct.2009.02.018
    global name
    name = 'Dazio_WSH2'

    # Wall Geometry
    tw = 150 * mm  # Wall thickness
    tb = tw  # Wall thickness
    hw = 4.25 * m  # Wall height
    lw = 2.00 * m  # Wall length
    lbe = 235 * mm  # Boundary element length
    lweb = lw - (2 * lbe)

    # Material proprieties
    fc = 40.5 * MPa    # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 583.1 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 484.9 * MPa  # Steel tension yield strength (+Tension, -Compression)

    fx = fyw

    # Reinforcement ratios
    # Y direction
    YbeNum = 6    # Y boundary
    YbeDiam = 10  # Y web
    YwebNum = 24  # X boundary
    YwebDiam = 6  # X web
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)     # Y boundary
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web
    print('rouYb', rouYb)
    print('rouYw', rouYw)

    # X direction
    XbeNum = 35 * 4  # BE long reinforcement diameter (mm)
    XbeDiam = 6.35  # BE long reinforcement diameter (mm)
    XwebNum = 20 * 2  # Web long reinforcement diameter (mm)
    XwebDiam = 6.35  # Web long reinforcement diameter (mm)
    rouXb = (rebarArea(XbeDiam) * XbeNum) / (hw * tw)     # X boundary
    rouXw = (rebarArea(XwebDiam) * XwebNum) / (hw * tw)   # X web
    print('rouXb', rouXb)
    print('rouXw', rouXw)

    loadF = 0.067  # Aload = 691 * kN

    displacement_step = [
        0, 1, 2, 3, 4, 5, 6, 7, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
        20, 21, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0,
        1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -21, -20, -19, -18,
        -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11,
        10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -31, -30, -29, -28, -27, -26, -25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11,
        -10, -9, -8, -7, -6, -5, -4, -3,
        -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10,
        -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -31, -30, -29, -28, -27, -26, -25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
        11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1,
        -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -41, -40, -39, -38, -37, -36, -35, -34, -33, -32, -31, -30, -29, -28, -27, -26, -25, -24, -23,
        -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 41, 40, 39, 38, 37, 36, 35,
        34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34,
        -35, -36, -37, -38, -39, -40, -41, -42, -41, -40, -39, -38, -37, -36, -35, -34, -33, -32, -31, -30, -29, -28, -27, -26, -25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
        16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18,
        17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48,
        -49, -50, -51, -52, -53, -52, -51, -50, -49, -48, -47, -46, -45, -44, -43, -42, -41, -40, -39, -38, -37, -36, -35, -34, -33, -32, -31, -30, -29, -28, -27, -26, -25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4,
        5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28,
        27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40,
        -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -52, -51, -50, -49, -48, -47, -46, -45, -44, -43, -42, -41, -40, -39, -38, -37, -36, -35, -34, -33, -32, -31, -30, -29, -28, -27, -26, -25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7,
        -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 62, 61, 60, 59, 58,
        57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16,
        -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -62, -61, -60, -59, -58, -57, -56, -55, -54, -53, -52,
        -51, -50, -49, -48, -47, -46, -45, -44, -43, -42, -41, -40, -39, -38, -37, -36, -35, -34, -33, -32, -31, -30, -29, -28, -27, -26, -25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,
        14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40,
        39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30,
        -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -62, -61, -60, -59, -58, -57, -56, -55, -54, -53, -52, -51, -50, -49, -48, -47, -46, -45, -44, -43, -42, -41, -40, -39, -38,
        -37, -36, -35, -34, -33, -32, -31, -30, -29, -28, -27, -26, -25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, ]  # Displacement steps For Dazio_WSH2
    displacement_step = [0.0, 0.21236, 0.17279, 1.15758, 3.17098, 5.17158, 7.14658, 5.67736, 4.46955, 2.98325, 1.78398, 0.60604, 0.24649, -0.99119, -1.37633, -2.30139, -4.05764, -6.62374, -8.06737, -10.59508, -11.69623, -13.33301, -11.31534, -8.71937, -5.84065, -4.36715, -2.92352, -1.9942,
                        0.69563, 1.59936, 2.76877, 4.7907, 2.33669, 0.54204, -0.65724, -3.29161, -5.33061, -6.79983, -9.63589, -13.04599, -10.42442, -7.85405, -4.04173, -2.24282, 0.41288, 4.21666, 5.97717, 9.45127, 12.28733, 15.10632, 17.91252, 17.86985, 17.21048, 14.04474, 10.59624, 7.73032,
                        4.86439, -0.6103, -6.17033, -9.65723, -11.96618, -15.09352, -17.89972, -19.86619, -19.24522, -16.34943, -13.45364, -9.74799, -7.13068, -4.53471, -1.09048, 8.0728, 9.57616, 12.42929, 14.18127, 15.89912, 11.71445, 6.57371, 3.982, 0.79493, -3.23187, -6.98446, -10.163, -14.43416,
                        -17.30008, -18.9966, -17.23182, -13.74065, -8.30436, -5.63585, -1.33057, 0.98692, 6.98872, 10.43722, 14.70837, 17.01733, 19.56637, 22.66812, 26.2927, 28.24637, 28.16957, 26.16044, 24.41699, 22.11657, 18.98069, 16.11477, 13.26591, 10.69127, 7.57246, 4.72787, 0.18249, -5.59203,
                        -9.86318, -12.46769, -17.27875, -20.42743, -24.90454, -29.6388, -27.88256, -25.27378, -21.55533, -17.27991, -13.00876, -9.58586, -5.02768, -2.16603, 1.85224, 6.15326, 20.32503, 26.81981, 28.21651, 26.99163, 23.82162, 19.25065, 14.40972, 11.26531, 5.87168, 1.86194, -3.54449,
                        -7.27148, -12.08254, -15.23975, -21.16049, -25.39325, -27.37251, -29.626, -27.28292, -24.37859, -18.66808, -12.41339, -7.29397, -3.29704, 2.10086, 5.82358, 9.5463, 14.9442, 20.03374, 22.87407, 27.37678, 32.14091, 36.05252, 37.72343, 38.51196, 36.47296, 33.34135, 30.75818,
                        26.78684, 23.92091, 19.94531, 17.09219, 13.68209, 9.4536, 4.38111, -1.26541, -10.33482, -11.4957, -15.47984, -18.05021, -21.45177, -27.08123, -37.175, -39.68137, -37.06833, -34.19387, -30.47969, -26.21707, -21.95018, -18.236, -14.53888, -9.45786, -5.24217, 5.52803, 9.77358,
                        17.42924, 20.81374, 24.49379, 28.15677, 31.53274, 34.62169, 37.14513, 38.25908, 37.5997, 33.89405, 30.46689, 27.60097, 23.07692, 19.64549, 15.96117, 8.02703, 2.40611, -3.82298, -9.51216, -15.16295, -19.99108, -27.587, -32.10251, -36.01838, -39.38155, -34.19387, -29.91845,
                        -26.76551, -23.35541, -19.94104, -16.79237, -12.27686, -7.76135, -3.25864, 3.54023, 8.63831, 14.03621, 19.42557, 24.23237, 30.9715, 34.90017, 39.37729, 43.56738, 47.1749, 47.10237, 44.77635, 41.91042, 38.19624, 28.87393, 24.88127, 19.22621, 12.48281, 5.74368, -6.36349,
                        -10.0734, -16.28543, -25.35911, -31.26279, -37.98486, -43.27609, -46.04389, -47.96769, -47.92076, -46.47286, -43.89822, -40.49666, -37.37358, -33.95495, -26.87333, -21.23961, -15.89718, -11.12025, -3.82841, 4.11, 10.35189, 16.55965, 25.58213, 30.07205, 34.56195, 40.97994,
                        44.32177, 48.21631, 45.92016, 43.32845, 40.49239, 36.79954, 34.2249, 30.26637, 24.03301, 19.79172, 11.66442, 6.30492, -4.41835, -14.84607, -21.05809, -30.62049, -37.0598, -42.08535, -45.42719, -47.65507, -45.0335, -41.31932, -36.22124, -30.81907, -25.15549, -14.73203,
                        -8.83263, -1.81074, 2.97899, 11.17028, 16.82533, 23.86855, 30.03791, 35.63324, 41.48998, 46.507, 53.20346, 55.07607, 52.48436, 47.39908, 44.26747, 37.21145, 31.28218, 27.91475, 19.5047, 9.92951, -0.74683, -7.24588, -18.50479, -23.56874, -32.54002, -41.7642, -48.4692,
                        -53.49048, -57.94626, -59.61718, -55.90726, -51.62331, -46.81224, -40.03471, -33.83122, -29.60273, -22.61071, -15.05319, 2.1094, 18.23057, 24.69121, 33.07993, 39.51071, 46.48993, 51.7897, 55.97979, 58.47763, 53.62817, 49.90546, 40.60022, 31.84769, 22.57231, 9.67662, -0.43421,
                        -12.854, -18.19643, -22.96483, -28.85144, -32.49309, -35.54364, -39.18103, -44.50213, -52.59956, -59.01328, -67.93336, -71.00098, -74.62556]
    displacement_step = generate_cyclic_loading(num_cycles=6, initial_displacement=7, max_displacement=64, num_points=50, repetition_cycles=2)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Dazio_WSH3():
    # https://doi.org/10.1016/j.engstruct.2009.02.018
    global name
    name = 'Dazio_WSH3'
    # Wall Geometry
    tw = 150 * mm  # Wall thickness
    tb = tw  # Wall thickness
    hw = 4.56 * m  # Wall height
    lw = 2.00 * m  # Wall length
    lbe = 355 * mm  # Boundary element length
    lweb = lw - (2 * lbe)

    # Material proprieties
    fc = 39.2 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 583.1 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 484.9 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fx = fyw
    fx = fyw

    # Reinforcement ratios
    # Y direction
    YbeNum = 6  # BE long reinforcement diameter (mm)
    YbeDiam = 12  # BE long reinforcement diameter (mm)
    YwebNum = 22  # Web long reinforcement diameter (mm)
    YwebDiam = 8  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web
    print('rouYb', rouYb)
    print('rouYw', rouYw)

    # X direction
    XbeNum = 35 * 4  # BE long reinforcement diameter (mm)
    XbeDiam = 6.35  # BE long reinforcement diameter (mm)
    XwebNum = 20 * 2  # Web long reinforcement diameter (mm)
    XwebDiam = 6.35  # Web long reinforcement diameter (mm)
    rouXb = (rebarArea(XbeDiam) * XbeNum) / (hw * tw)  # X boundary
    rouXw = (rebarArea(XwebDiam) * XwebNum) / (hw * tw)  # X web
    print('rouXb', rouXb)
    print('rouXw', rouXw)

    loadF = 0.108 / 0.85  # Aload = 691 * kN

    displacement_step = [0.0, 0.80601, 3.9977, 7.16897, 9.99861, 11.5434, 9.83013, 8.51465, 5.93475, 3.66075, 0.03552, -1.03532, -1.12722, -3.03917, -5.27744, -7.51571, -10.32492, -10.52871, -8.57081, -7.21449, -4.97622, -2.41164, -1.09106, 0.60179, 2.52906, 4.46143, 6.72012, 8.35171, 9.93734,
                        11.20687, 9.84545, 9.10602, 5.92454, 2.70732, 0.71879, -0.94343, -4.17596, -8.0356, -9.00945, -10.88056, -9.23366, -5.92454, -2.39632, -0.04574, 5.11917, 7.05665, 9.95266, 13.44514, 15.64257, 17.81447, 19.38479, 23.09127, 25.87496, 29.26533, 30.42765, 30.6876, 29.08154,
                        27.1849, 24.9517, -40.54262, -44.2542, -46.08958, -44.4631, -34.02139, -30.85012, -27.414, 21.46437, 18.32372, 15.79998, 13.26092, 11.03797, 6.64312, 3.79816, 1.85558, -0.10232, -6.10833, -11.21198, -14.09267, -17.83489, -23.10148, -26.80285, -30.50423, -29.77502,
                        -27.52143, -24.64074, -21.79579, -18.02294, -14.22456, -10.11518, 28.88796,
                        -3.81859, -0.96853, 3.13575, 8.46871, 12.9044, 16.68746, 20.1391, 23.59585, 25.78306, 27.66949, 30.74886, 30.0656, 28.42891, 25.56353, 22.07105, 16.73298, 12.62871, 9.44723, 4.71585, 0.60647, -5.34849, -10.39087, -14.47983, -17.60515, -20.75089, -23.28995, -27.34828,
                        -30.13707, -28.16896, -26.21106, -23.03468, -18.95594, -15.78977, -11.69571, -8.20323, -5.98538, -1.88111, 6.62312, 14.46961, 17.61536, 22.31611, 25.45164, 33.53765, 38.16693, 42.15378, 46.45163, 46.05384, 43.82578, 41.25609, 37.16713, 33.05265, 28.99943, 25.85369, 21.78004,
                        17.0844, 13.00055, 7.72886, -3.17148, -8.16281, -13.10308, -18.69599, -23.10616, -28.84712, -33.51723, -38.76851, -43.38757, -45.84494, -46.06405, -44.13168, -40.3333, -37.15692, -32.76207, -30.53401, -25.84348, -22.06552, -17.06398, -13.30134, -9.57444, -4.30274, -0.88174,
                        4.7367, 13.10308, 20.58241, 25.56353, 31.20239, 34.94971, 38.67151, 42.09251, 46.39037, 45.37057, 42.20951, 38.71703, 34.64849, 30.86543, 27.71458, 22.42757, 17.09461, 12.35813, 7.37191, 2.71711, -1.03532, -7.22981, -12.51171, -17.80894, -29.32107, -33.6955, -38.04951,
89, -22.70794, -18.93509, -14.87166, -10.19644, -4.60353, 2.21806, 9.64123, 15.87656, 22.42289, 28.67864, 34.57745, 38.95698, 43.91768, 49.78074, 53.78801, 58.68744, 61.13461, 61.05803, 59.75276, 55.6638,
                        50.93753, 46.8741, 42.47414, 38.0895, 33.07264, 28.65737, 22.15699, 14.42792, 9.46723, 2.98216, -2.59032, -14.01566, -21.14826, -27.10832, -33.34365, -38.30435, -44.49884, -51.92201, -56.86228, -59.62045, -61.76682, -60.09439, -57.88165, -55.34259, -53.43574, -50.2951,
                        -46.53246, 43.77473, -39.30287, -35.55044, -31.7929, -27.1279, -22.15188, -19.0623, -14.73382, -10.41044, -5.76585, -0.19847, 9.38639, 19.92978, 26.42506, 32.02307, 36.99398, 44.12146, 50.61674, 55.55191, 59.55918, 61.70045, 58.78912, 55.31706, 51.22811, 45.58925, 40.87829,
                        35.24454, 28.08132, 23.68647, 15.9574, 7.92243, -9.73823, -28.30127, -34.52129, -46.26273, -51.85053, -58.03481, -61.40987, -59.11544, -49.01537, -43.3663, -38.03844, -31.48701, -21.2342, -12.25092, -2.99237, 6.2917, 15.87656, 26.40464, 35.72955, 49.96921, 62.31224, 69.08788,
                        74.60931, 77.94864, 77.55595, 74.70589, 70.91772, 67.13977, 62.77044, 59.3188, 54.62827, 50.86052, 45.57351, 40.26608, 36.83997, 30.98711, 23.57415, 17.41029, 10.01265, -7.56123, -14.63767, -30.43744, -42.20951, -48.38868, -56.44917, -65.99319, -70.92326, -74.60421,
                        -77.96906, -75.72569, -72.84499, -68.76624, -64.38161, -59.99186, -56.5249, -50.88094, -46.50651, -41.50497, -34.70891, -29.76353, -24.51736, -17.11971, -11.87865, -4.48611, 1.06085, 11.22176, 19.87873, 29.1577, 37.82487, 44.94725, 53.5838, 60.99166, 68.72073, 73.95158,
                        77.93332, 75.03221, 70.5812, 64.00934, 59.32391, 56.16285, 51.18173, 47.14383, 43.36588, 35.60617, 28.805, 20.79556, 12.46492, 1.39142, -10.61508, -16.49346, -22.05573, -29.78991, -35.66318, -42.15846, -47.41994, -55.1337, -63.17377, -72.72289, -78.24943, -75.65932,
                        -64.02466, -59.02312, -53.71058, -47.76583, -42.16782, -36.88591, -31.60911, -6.64269, 1.99385, 11.5634, 20.51605, 31.64059, 38.13077, 46.47163, 54.50659, 61.92976, 72.07536, 80.69148, 87.46202, 92.04535, 91.97898, 90.37803, 87.19144, 84.04059, 78.41195, 73.3951, 69.01556,
                        63.09633, 55.32132, 50.01389, 45.07872, 35.19817, 26.88284, 17.34392, 9.04391, 1.03958, -12.50661, -21.12273, -28.8518, -34.71997, -40.90935, -46.78263, -54.50148, -63.14314, -73.61505, -81.60917, -86.82981, -90.2253, -92.06066, -92.61629, -90.98471, -87.19144, -82.78127,
                        -76.82631, -71.82988, -65.58434, -60.89891, -55.91269, -53.10347, -48.46399, -44.4414, -37.05907, -30.90543, -25.05768, -19.51582, -12.12839, -6.90264, 0.46948, 13.69445, 24.79858, 32.83355, 43.95809, 51.67184, 58.7687, 63.09208, 69.25594, 76.94926, 83.11312, 88.96087,
                        92.01982, 91.64756, 88.76687, 84.37712, 78.71274, 75.55679, 68.39355, 63.70302, 59.3388, 53.73568, 46.00661, 37.68107, 28.11152, 16.73213, 5.34764, -5.71565, -17.72215, -27.89838, -34.37834, -40.55751, -49.80074, -55.67401, -62.45987, -67.71114, -72.94199, -78.78464,
                        -82.4707]
    displacement_step = generate_cyclic_loading(num_cycles=6, initial_displacement=8, max_displacement=92, num_points=100, repetition_cycles=2)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Thomsen_and_Wallace_RW2():
    # https://sci-hub.st/10.1061/(asce)0733-9445(2004)130:4(618)
    global name
    name = 'Thomsen_and_Wallace_RW2'
    # Wall Geometry
    tw = 102 * mm  # Wall thickness
    tb = 102 * mm   # Wall thickness
    hw = 3.65 * m  # Wall height
    lw = 1.22 * m  # Wall length
    lbe = 190 * mm  # Boundary element length
    lweb = lw - (2 * lbe)

    # Material proprieties
    fc = 41.75 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 434 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 448 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fx = 448 * MPa  # Steel tension yield strength (+Tension, -Compression)

    # Reinforcement ratios
    # Y direction
    YbeNum = 8  # BE long reinforcement diameter (mm)
    YbeDiam = 9.53  # BE long reinforcement diameter (mm)
    YwebNum = 8  # Web long reinforcement diameter (mm)
    YwebDiam = 6.35  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tb)  # Y boundary        0.003
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web          0.0293

    # X direction
    XbeNum = 51 * 2  # BE long reinforcement diameter (mm)
    XbeDiam = 4.76  # BE long reinforcement diameter (mm)
    XwebNum = 20 * 2  # Web long reinforcement diameter (mm)
    XwebDiam = 6.35  # Web long reinforcement diameter (mm)
    rouXb = (rebarArea(XbeDiam) * XbeNum) / (hw * tb)  # Y boundary        0.01
    rouXw = (rebarArea(XwebDiam) * XwebNum) / (hw * tw)  # Y web          0.0033

    loadF = 0.0800

    displacement_step = [0, 1, 2, 3, 4, 5, 6, 7, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
                        14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2,
                        1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6,
                        5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
                        18, 19, 20, 21, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6,
                        -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3,
                        2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -33, -32, -31, -30, -29, -28, -27, -26, -25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13,
                        -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12,
                        11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -33, -32, -31, -30, -29, -28, -27, -26, -25, -24, -23, -22, -21, -20, -19,
                        -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
                        51, 52, 53, 54, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11,
                        -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -54, -53, -52, -51, -50, -49, -48, -47, -46, -45, -44,
                        -43, -42, -41, -40, -39, -38, -37, -36, -35, -34, -33, -32, -31, -30, -29, -28, -27, -26, -25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
                        20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22,
                        21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41,
                        -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -54, -53, -52, -51, -50, -49, -48, -47, -46, -45, -44, -43, -42, -41, -40, -39, -38, -37, -36, -35, -34, -33, -32, -31, -30, -29, -28, -27, -26, -25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14,
                        -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
                        57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15,
                        14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47,
                        -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70, -69, -68, -67, -66, -65, -64, -63, -62, -61, -60, -59, -58, -57, -56, -55, -54, -53, -52, -51, -50, -49, -48, -47, -46, -45, -44, -43, -42, -41, -40, -39, -38,
                        -37, -36, -35, -34, -33, -32, -31, -30, -29, -28, -27, -26, -25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
                        27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45,
                        44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23,
                        -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70, -69, -68, -67, -66, -65, -64, -63, -62,
                        -61, -60, -59, -58, -57, -56, -55, -54, -53, -52, -51, -50, -49, -48, -47, -46, -45, -44, -43, -42, -41, -40, -39, -38, -37, -36, -35, -34, -33, -32, -31, -30, -29, -28, -27, -26, -25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6,
                        -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
                        66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36,
                        35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30,
                        -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70, -71, -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -85,
                        -84, -83, -82, -81, -80, -79, -78, -77, -76, -75, -74, -73, -72, -71, -70, -69, -68, -67, -66, -65, -64, -63, -62, -61, -60, -59, -58, -57, -56, -55, -54, -53, -52, -51, -50, -49, -48, -47, -46, -45, -44, -43, -42, -41, -40, -39, -38, -37, -36, -35, -34, -33, -32, -31, -30,
                        -29, -28, -27, -26, -25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
                        37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65,
                        64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5, -6,
                        -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62,
                        -63, -64, -65, -66, -67, -68, -69, -70, -71, -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -85, -84, -83, -82, -81, -80, -79, -78, -77, -76, -75, -74, -73, -72, -71, -70, -69, -68, -67, -66, -65, -64, -63, -62, -61, -60, -59, -58, -57, -56, -55, -54, -53,
                        -52, -51, -50, -49, -48, -47, -46, -45, -44, -43, -42, -41, -40, -39, -38, -37, -36, -35, -34, -33, -32, -31, -30, -29, -28, -27, -26, -25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1,
                        0]  # Displacement steps For Thomsen_and_Wallace_RW2
    # displacement_step = [0.0, 1.03, 1.86, 2.69, 4.76, 5.17, 6.41, 6.83, 4.35, 2.28, -0.62, -2.28, -6.00, -5.59, -3.52, -1.45, 0.21, 2.69, 5.59, 6.00, 5.59, 2.69, 0.21, -1.86, -2.69, -5.17, -5.59, -6.41, -3.52, -1.03, 1.86, 3.93, 6.41, 8.90, 10.97, 13.45, 12.21, 10.55, 8.07, 4.35, 2.69, -0.21,
    #                     -2.28, -3.52, -6.00, -8.07, -9.31, -11.79, -13.04, -15.52, -14.69, -13.04, -8.48, -6.41, -3.10, 1.86, 6.83, 10.55, 13.45, 12.21, 8.90, 6.41, 4.76, 1.86, -0.62, -4.76, -8.90, -11.79, -13.04, -15.11, -12.21, -10.55, -8.90, -6.83, -3.10, 0.21, 3.52, 9.31, 13.04, 16.35, 19.66,
    #                     22.55, 21.31, 20.49, 18.00, 13.86, 10.55, 7.24, 3.93, -1.03, -3.93, -7.66, -10.97, -13.45, -16.35, -18.83, -21.31, -24.62, -22.97, -19.66, -16.35, -12.62, -8.48, -4.76, 0.21, 4.76, 9.31, 14.69, 18.00, 20.07, 23.38, 20.49, 19.66, 15.11, 11.38, 7.66, -1.45, -3.10, -8.07, -13.86, -16.35, -19.24, -21.31, -22.55, -16.76, -12.21, -8.90, -5.17, 0.62, 8.48, 16.35, 20.49, 24.21, 27.52, 29.18, 32.07, 30.83, 28.35, 24.21, 22.14, 18.83, 15.93, 10.55, 7.24, 4.35, 2.69, 0.62, -3.93, -11.79, -13.04, -17.59, -22.14, -24.21, -27.93, -30.83, -33.31, -31.25, -28.76, -24.62, -21.31, -17.59, -13.45, -9.73, -6.83, -2.69, 1.45, 8.07, 12.62, 18.00, 22.55, 25.87, 29.18, 30.83, 31.66, 29.59, 27.11, 23.80, 19.66, 13.86, 9.31, -3.93, -13.04, -19.24, -23.80, -28.35, -30.83, -30.42, -26.28, -22.97, -18.83, -14.69, -11.79, -7.66, -3.52, -0.21, 3.10, 10.55, 15.93, 20.49, 25.04, 29.59, 34.56, 40.76, 44.90, 48.63, 47.39, 44.07, 39.94, 37.45, 31.25, 25.45, 19.24, 14.69, 8.48, 2.28, -2.28, -7.66, -14.69, -20.49, -26.28, -30.42, -35.38, -42.42, -47.80, -50.28, -49.87, -45.73, -41.18, -36.63, -31.66, -27.11, -22.55, -16.35, -12.62, -5.17, 2.69, 23.38, 28.35, 34.14, 39.11, 42.42, 49.46, 47.80, 44.07, 40.35, 33.73, 30.00, 24.62, 18.83, 12.21, 6.00, -1.45, -16.76, -23.38, -30.83, -36.63, -42.83, -47.80, -47.39, -43.66, -39.52, -33.73, -29.59, -25.04, -20.90, -15.52, -7.66, 1.03, 6.00, 20.07, 25.87, 32.07, 38.28, 43.66, 49.87, 56.08, 62.28, 66.42, 62.70, 58.56, 55.66, 49.87, 43.66, 37.87, 30.83, 23.38, 19.24, 15.11, 8.48, 2.28, -6.41, -16.35, -22.14, -30.83, -39.94, -45.73, -52.77, -60.63, -65.59, -64.77, -61.04, -58.15, -54.84, -50.70, -44.07, -38.28, -32.49, -27.11, -20.90, -13.04, -6.00, 1.45, 9.73, 19.24, 25.45, 33.73, 41.18, 47.39, 54.42, 61.46, 67.25, 73.87, 80.08, 85.46, 82.98, 80.08, 76.77, 74.70, 69.73, 65.59, 61.04, 55.66, 50.28, 42.42, 32.07, 23.38, 15.11, 6.83, -2.69, -12.62, -24.21, -33.31, -43.66, -51.94, -61.04, -68.49, -78.42, -83.80, -80.49, -75.94, -70.56, -64.77, -57.73, -50.28, -40.76, -30.42, -20.90, -9.31, 0.21, 8.07, 14.28, 22.97, 33.31, 42.01, 49.46, 55.25, 63.94, 73.04, 80.08, 85.46, 82.56, 79.25, 75.11, 68.49, 63.11, 55.25, 48.63, 39.11, 28.35, 10.14, -3.93, -15.52, -26.28, -35.38, -43.66, -51.52, -62.28, -70.15, -76.36, -81.32, -84.22, -80.91, -77.18, -73.04, -67.66, -61.87, -53.18, -46.14, -37.87, -30.42, -21.73, -13.45, 1.03]

    displacement_step = generate_cyclic_loading_linear(num_cycles=8, max_displacement=86, num_points=50, repetition_cycles=2)

    # displacement_step = generate_strain_history(num_cycles=8, num_divisions=50, target_strain=86, scale_pos=1.0, scale_neg=1.0, repetitions_per_peak=2)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Thomsen_and_Wallace_RW1():
    # https://sci-hub.st/10.1061/(asce)0733-9445(2004)130:4(618)
    global name
    name = 'Thomsen_and_Wallace_RW1'
    # Wall Geometry ------------------------------------------------------------------
    tw = 102 * mm  # Wall thickness
    tb = 102 * mm   # Wall thickness
    hw = 3.65 * m  # Wall height
    lw = 1.22 * m  # Wall length
    lbe = 190 * mm  # Boundary element length
    lweb = lw - (2 * lbe)

    # Material proprieties -----------------------------------------------------------
    fc = 42.75 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 434 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 448 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fx = fyw

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    YbeNum = 8  # BE long reinforcement diameter (mm)
    YbeDiam = 9.53  # BE long reinforcement diameter (mm)
    YwebNum = 8  # Web long reinforcement diameter (mm)
    YwebDiam = 6.35  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary        0.003
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web          0.0293

    # ---- Steel in X direction (BE + Web) -------------------------------------------
    XbeNum = 35 * 4  # BE long reinforcement diameter (mm)
    XbeDiam = 6.35  # BE long reinforcement diameter (mm)
    XwebNum = 20 * 2  # Web long reinforcement diameter (mm)
    XwebDiam = 6.35  # Web long reinforcement diameter (mm)
    rouXb = (rebarArea(XbeDiam) * XbeNum) / (hw * tw)  # Y boundary        0.01
    rouXw = (rebarArea(XwebDiam) * XwebNum) / (hw * tw)  # Y web          0.0033

    loadF = 0.089

    displacement_step = [0.623316, 2.285492, 3.11658, 5.609844, 7.687564, 11.42746, 13.50518, 15.5829, 14.336268, 12.258548, 9.34974, 6.856476, 5.1943, 1.454404, -1.869948, -3.532124, -3.532124, -6.440932, -8.518652, -9.765284, -13.089636, -15.167356, -14.751812, -12.674092, -9.34974, -6.440932,
                        -3.947668, -0.207772, 3.532124, 7.27202, 9.34974, 12.258548, 15.998444, 16.829532, 13.50518, 11.42746, 8.518652, 5.1943, 1.454404, -2.701036, -4.778756, -7.687564, -10.180828, -12.674092, -14.751812, -13.920724, -9.34974, -5.609844, -3.11658, -0.207772, 5.609844, 10.596372,
                        13.089636, 15.5829, 18.491708, 19.73834, 20.984972, 24.724868, 23.89378, 20.984972, 19.322796, 16.413988, 13.920724, 11.42746, 8.518652, 6.025388, 3.11658, -1.03886, -5.1943, -7.27202, -12.258548, -14.336268, -16.413988, -18.907252, -21.81606, -24.309324, -23.062692,
                        -19.322796, -16.413988, -12.674092, -10.596372, -6.856476, -1.869948, 3.947668, 11.42746, 15.5829, 17.245076, 19.322796, 21.400516, 23.062692, 22.231604, 18.907252, 14.336268, 11.011916, 8.518652, 5.1943, -1.03886, -6.856476, -9.765284, -13.920724, -16.413988, -18.076164,
                        -20.984972, -23.89378, -19.73834, -17.245076, -13.50518, -6.856476, -2.701036, 2.285492, 7.687564, 12.258548, 17.245076, 21.400516, 25.140412, 26.38679, 29.295598, 33.035494, 33.451038, 30.957774, 28.880054, 25.971246, 23.062692, 19.322796, 15.998444, 13.089636, 10.180828,
                        8.103108, 6.025388, 2.285492, -3.11658, -7.687564, -11.843004, -14.751812, -18.076164, -23.478236, -26.38679, -28.048966, -31.788862, -30.957774, -27.633422, -23.062692, -18.076164, -13.50518, -8.518652, -3.532124, 1.03886, 9.34974, 13.50518, 17.66062, 21.81606, 22.231604,
                        25.555702, 28.880054, 31.788862, 30.54223, 28.880054, 24.724868, 20.569428, 16.829532, 10.596372, 5.609844, 0.207772, -3.532124, -6.856476, -11.011916, -15.998444, -18.076164, -22.647148, -25.140412, -28.46451, -30.957774, -27.633422, -24.724868, -19.73834, -15.5829,
                        -10.180828, -6.440932, -1.869948, 5.1943, 8.934196, 13.089636, 20.569428, 26.802334, 31.373318, 35.944302, 41.761918, 45.917358, 47.579534, 50.488342, 48.410622, 45.917358, 43.424094, 40.099742, 37.606478, 32.61995, 28.880054, 25.555702, 20.984972, 13.089636, 9.34974,
                        4.363212, 1.03886, -1.03886, -7.27202, -13.50518, -15.998444, -23.062692, -28.048966, -33.451038, -37.190934, -43.424094, -46.748446, -50.072798, -47.579534, -43.00855, -39.268654, -33.451038, -28.46451, -23.062692, -17.245076, -10.596372, -4.778756, 2.701036, 12.258548,
                        21.81606, 28.048966, 37.190934, 43.424094, 48.410622, 50.488342, 46.332902, 43.839638, 40.099742, 35.944302, 30.957774, 25.971246, 19.73834, 15.5829, 11.42746, 6.025388, -1.03886, -6.856476, -13.089636, -18.907252, -23.89378, -28.880054, -33.866582, -39.268654, -43.424094,
                        -45.08627, -47.995078, -44.255182, -40.099742, -35.113214, -30.126686, -24.724868, -18.491708, -15.998444, -12.258548, -8.518652, -0.207772, 8.103108, 13.089636, 21.400516, 28.46451, 36.77539, 42.593006, 47.995078, 52.981606, 57.55259, 64.616838, 69.603366, 68.356734,
                        64.201294, 60.876942, 57.968134, 53.812694, 48.826166, 43.839638, 37.606478, 27.633422, 16.413988, 8.103108, -1.454404, -10.180828, -17.66062, -22.231604, -27.633422, -31.788862, -39.268654, -45.08627, -50.903886, -56.721502, -61.70803, -67.94119, -64.616838, -60.461398,
                        -54.228238, -50.903886, -45.501814, -40.515286, -33.866582, -25.140412, -19.73834, -12.258548, -3.532124, 8.518652, 17.245076, 25.971246, 35.113214, 45.08627, 55.890414, 64.201294, 68.772278, 66.279014, 62.539118, 58.383678, 56.305958, 52.150518, 47.16399, 39.684198,
                        31.373318, 20.984972, 11.843004, 1.03886, -5.1943, -13.089636, -22.231604, -29.295598, -35.113214, -40.515286, -45.917358, -50.072798, -53.812694, -57.968134, -60.876942, -61.70803, -62.123574, -57.137046, -52.981606, -45.08627, -38.85311, -29.711142, -20.569428, -15.167356,
                        -8.518652, 0.623316, 8.934196, 19.322796, 28.048966, 37.606478, 46.748446, 54.643782, 62.539118, 70.01891, 76.66736, 79.576168, 81.238344, 82.90052, 84.97824, 87.05596, 89.13368, 90.380312, 92.042488]

    # displacement_step = generate_cyclic_load(duration=7, sampling_rate=100, max_displacement=86)
    # displacement_step = generate_cyclic_loading(num_cycles=7, initial_displacement=6, max_displacement=86, num_points=50, repetition_cycles=2)
    # displacement_step = generate_cyclic_loading_with_repetition(num_cycles=8, max_displacement=86, num_points=50, repetition_cycles=2)
    # displacement_step = generate_cyclic_loading_exponential(num_cycles=7, initial_displacement=7, max_displacement=86, num_points=50, repetition_cycles=2)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Tran_and_Wallace_A15P10S78():
    # https://www.iitk.ac.in/nicee/wcee/article/WCEE2012_3913.pdf
    global name
    name = 'Tran_S78'
    # Wall Geometry ------------------------------------------------------------------
    tw = 150 * mm  # Wall thickness
    hw = 1.828 * m  # Wall height
    lw = 1.220 * m  # Wall length
    lbe = 228.6 * mm  # Boundary element length
    lweb = lw - (2 * lbe)
    tb = tw  # Wall thickness

    # Material proprieties -----------------------------------------------------------
    fc = 55.78 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 473.66 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 473.66 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyXp = 402.72 * MPa
    fx = fyw

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    YbeNum = 8  # BE long reinforcement diameter (mm)
    YbeDiam = 18.95  # BE long reinforcement diameter (mm)
    YwebNum = 11  # Web long reinforcement diameter (mm)
    YwebDiam = 9.32  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary        0.003
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web             0.0293
    rouXw = 0.0073  # X web
    rouXb = 0.0082  # X boundary
    rouYb = 0.0587  # Y boundary
    rouYw = 0.0073  # Y web

    # print('rouYb = ', rouYb)
    # print('rouYw = ', rouYw)
    # ---- Steel in X direction (BE + Web) -------------------------------------------
    # XbeNum = 72  # BE long reinforcement diameter (mm)
    # XbeDiam = 6.35  # BE long reinforcement diameter (mm) #3=9.53
    # XwebNum = 28  # Web long reinforcement diameter (mm)
    # XwebDiam = 9.53  # Web long reinforcement diameter (mm) #4=12.7
    # rouXb = (rebarArea(XbeDiam) * XbeNum) / (hw * tw)  # X boundary        0.01
    # rouXw = (rebarArea(XwebDiam) * XwebNum) / (hw * tw)  # X web          0.0033
    # print('rouXb = ', rouXb)
    # print('rouXw = ', rouXw)

    loadF = 0.060 / 0.85

    displacement_step = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, -1, -2, -3,
                        -4, -5, -6, -7, -8, -9, -10, -11, -12, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15,
                        -16, -17, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15,
                        -16, -17, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, -1, -2,
                        -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
                        16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -25, -24, -23, -22, -21,
                        -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23,
                        22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -35, -34, -33, -32, -31, -30,
                        -29, -28, -27, -26, -25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 35, 34,
                        33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32,
                        -33, -34, -35, -35, -34, -33, -32, -31, -30, -29, -28, -27, -26, -25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
                        27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14,
                        13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48,
                        -49, -50, -51, -52, -53, -54, -54, -53, -52, -51, -50, -49, -48, -47, -46, -45, -44, -43, -42, -41, -40, -39, -38, -37, -36, -35, -34, -33, -32, -31, -30, -29, -28, -27, -26, -25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5,
                        -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42,
                        41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26,
                        -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -54, -53, -52, -51, -50, -49, -48, -47, -46, -45, -44, -43, -42, -41, -40, -39, -38, -37, -36, -35, -34, -33, -32, -31, -30, -29, -28,
                        -27, -26, -25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1]  # Displacement steps For Tran_and_Wallace_A15P10S78

    # displacement_step = generate_cyclic_loading(num_cycles=6, initial_displacement=15, max_displacement=75, num_points=50, repetition_cycles=2)
    # displacement_step = generate_cyclic_loading_exponential(num_cycles=7, initial_displacement=7, max_displacement=55, num_points=50, repetition_cycles=2)
    displacement_step = generate_cyclic_loading_linear(num_cycles=5, max_displacement=30, num_points=20, repetition_cycles=2)
    # displacement_step = generate_cyclic_tri(num_cycles=5, num_divisions=100, target_strain=54, scale_pos=1.0, scale_neg=1.0, repetition_cycles=2)
    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Tran_and_Wallace_A20P10S38():
    # https://www.iitk.ac.in/nicee/wcee/article/WCEE2012_3913.pdf
    global name
    name = 'A20P10S38'
    # Wall Geometry ------------------------------------------------------------------
    tw = 152.5 * mm  # Wall thickness
    hw = 2.440 * m  # Wall height
    lw = 1.220 * m  # Wall length
    lbe = 210 * mm  # Boundary element length
    lweb = lw - (2 * lbe)
    tb = tw  # Wall thickness

    # Material proprieties -----------------------------------------------------------
    fc = 48 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 429.78 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 409.71 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyX = 469.93 * MPa
    fx = fyw

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    YbeNum = 8  # BE long reinforcement diameter (mm)
    YbeDiam = 12.7  # BE long reinforcement diameter (mm)
    YwebNum = 12  # Web long reinforcement diameter (mm)
    YwebDiam = 6  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary        0.003
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web             0.0293
    # rouXw = 0.0074  # X web
    # rouXb = 0.0082  # X boundary
    # rouYw = 0.0074  # Y web
    # rouYb = 0.0587  # Y boundary
    # print('rouYb = ', rouYb)
    # print('rouYw = ', rouYw)
    # ---- Steel in X direction (BE + Web) -------------------------------------------
    XbeNum = 48 * 2  # BE long reinforcement diameter (mm)
    XbeDiam = 6.33  # BE long reinforcement diameter (mm) #3=9.53
    XwebNum = 17 * 2  # Web long reinforcement diameter (mm)
    XwebDiam = 6  # Web long reinforcement diameter (mm) #4=12.7
    rouXb = (rebarArea(XbeDiam) * XbeNum) / (hw * tw)  # X boundary        0.01
    rouXw = (rebarArea(XwebDiam) * XwebNum) / (hw * tw)  # X web          0.0033
    # print('rouXb = ', rouXb)
    # print('rouXw = ', rouXw)

    loadF = 0.075 / 0.85

    displacement_step = [0.585496317, 0.784571078, 2.347398175, 4.105089993, 5.670924261, 7.231044903, 8.402939688, 10.35218834, 11.91291042, 10.93588035, 10.34767758, 9.172775625, 6.249504083, 5.073098541, 3.706639752, 2.533542099, 1.555609885, 0.386421555, -0.9794358, -1.377585324,
                         -2.941615289, -4.112307205, -6.060954422, -7.038886636, -9.377263296, -11.13164723, -11.9108054, -10.93197103, -10.14950497, -6.836503985, -6.05373721, -4.882744577, -4.100579236, -3.125052759, -3.117835547, -1.752880344, 0.197270459, 1.759796838, 3.710549075, 5.660098443, 7.418391696, 9.174279211, 10.54404589, 12.30173771, 14.05521949, 16.19903214, 17.76065637, 17.94830388, 16.58244652, 15.21628845, 12.48848307, 11.12052069, 9.560099331, 8.194241977, 6.051331473, 5.072797824, 3.119940567, 1.751677475, 0.192458984, -1.370368112, -1.761601141, -5.46222655, -5.473954519, -6.841616177, -8.790263394, -11.32621123, -12.69267002, -14.05762522, -15.80960341, -18.33983762, -17.9486046, -17.35980039, -15.60421359, -13.07007006, -10.92535525, -9.168565585, -7.412978787, -6.630212012, -4.679159057, -3.313000986, -1.945038611, 0.588503488, 1.757691818, 4.484294336, 7.806617553, 8.783647616, 10.92896386, 14.05040801, 17.16914571, 19.11839436, 22.22991485, 24.75623973, 23.00215652, 22.6076156, 21.82364596, 21.03907488, 19.28258593, 18.10948828, 14.99135201, 13.62519394, 10.50405051, 8.942426278, 6.213418023, 3.485913354, 2.123363888, -2.937405249, -4.885451031, -6.444669522, -12.67913775, -14.23865695, -17.16042491, -17.16884499, -19.31055263, -22.6163364, -24.55836784, -24.16202262, -21.81943592, -19.47564635, -17.71645095, -14.79287869, -11.287118, -8.947237753, -6.994079779, -2.321837216, 0.210201297, 4.689082724, 8.390911001, 11.89306308, 13.84411604, 16.37976316, 18.13414709, 20.66588488, 23.97287152, 28.05721203, 30.58353692, 33.69174952, 33.10414818, 32.51594541, 30.17486229, 28.22260647, 25.10026017, 21.00359026, 15.55218952, 14.76701701, 12.23618137, 9.509278131, 6.59111878, 4.450614014, 2.504071817, 0.363867767, -4.499330194, -8.197850583, -10.92355095, -15.20696622, -17.15771846, -18.52417725, -20.86044889, -23.19672053, -28.25027245, -31.36089079, -36.80116498, -36.2144658, -35.62115084, -32.50090955, -29.96165383, -25.48397527, -22.75195984, -16.71476208, -11.8443469, -7.176615097, -1.341198547, 4.692089895, 13.06044711, 17.73268967, 19.09884774, 22.79706742, 25.52216635, 29.21677741, 33.30141864, 37.18878941, 36.4054212, 34.45496968, 33.28187202, 30.74472132, 29.1815935, 27.03778085, 23.91934387, 20.80060617, 19.43414738, 16.90391317, 12.62530937, 10.09447373, 6.201690054, 1.728522253, -1.1914414, -3.723179196, -6.253714123, -12.67492771, -16.17828266, -20.65295404, -22.79345881, -26.10224976, -29.80107086, -32.52436549, -36.60539811, -35.62716518, -33.08941304, -31.72175138, -27.82144978, -23.52991514, -18.46613883, -14.18182141, -11.06669232, -6.008930353, 0.994170941, 3.135577859, 8.582768551, 11.30666461, 14.61425269, 17.72817891, 22.01039132, 24.93215927, 28.24034878, 31.54703471, 35.04708177, 39.13021941, 43.60038004, 47.29228465, 49.62314338, 48.84218091, 47.28055668, 44.35427797, 38.50141982, 34.21469666, 28.95455205, 26.03308481, 22.7266996, 17.28161393, 11.06338443, 7.365766192, 4.642471564, -0.801711957, -5.859173205, -9.364633175, -11.50754368, -13.64925131, -17.53962925, -22.9877221, -29.21377024, -31.35337286, -34.46459263, -36.99121823, -41.07164942, -43.59917717, -46.70829192, -47.87447308, -48.65152623, -48.8385723, -45.52075984, -41.03857053, -36.16394531, -32.26484658, -26.81073939, -20.20127686, -15.53534936, -10.87092545, -5.036711764, -1.143326654, 3.525006586, 7.610549963, 11.50122862, 14.61455341, 19.08802193, 24.34064861, 27.64823669, 34.45767613, 43.01157583, 46.12189345, 51.56457339, 53.70297313, 58.55985603, 63.22397923, 68.85881744, 73.71539962, 73.12900115, 70.20482746, 67.27824803, 65.32268432, 62.39941277, 59.67070524, 55.5788468, 53.04590613, 48.18120459, 43.51647995, 34.18853427, 26.22163447, 21.16838326, 16.69641833, 10.08304648, 0.943650458, -1.974208176, -4.114712942, -6.838007571, -14.42419944, -16.76107252, -22.40042148, -26.48355912, -31.53861463, -37.95591889, -44.37171956, -52.53318337, -56.22568941, -64.58051436, -69.05067499, -72.93624145, -72.73626454, -69.02932407, -65.51784975, -60.45106627, -56.16374168, -49.93438565, -42.93098364, -32.43595464, -22.71767808, -14.55380854, -5.414111804, 1.002290305, 7.614459286, 16.94751716, 25.89535635, 39.30944684, 44.55996851, 51.94648418, 56.41754696, 62.6363779, 69.2437354, 72.54260268, 68.83656437, 65.52205979, 61.03566044, 57.52809545, 50.51837838, 48.56882901, 43.12374334, 31.07671307, 24.46905484, 14.35954525, 9.305391894, 4.250937817, -0.417094705, -3.140389334, -12.08552207, -16.16926114, -21.61554968, -27.44886121, -37.75263409, -42.02943358, -51.16191311, -54.27132857, -56.98259451, -56.78291832, -57.7515283, -61.8286516, -64.93265415, -69.00496598, -71.72074268, -73.46369935, -70.73709684, -64.89867312, -60.0327687, -52.25411784, -42.73100672, -32.62570717, -24.07481464, -17.66081827, -10.07883644, -3.275712057, 2.362133316, 5.862180377, 11.11059702, 14.41668152, 18.88654143, 23.16183733, 27.63019366, 31.12572996, 33.25991967, 37.13796821, 41.0187232, 44.31819191, 48.58987921, 54.99936482, 57.5220811, 58.292135, 57.12513445, 54.20757653, 50.51386762, 46.81955727, 43.12434477, 35.1562421, 27.76882427, 22.32584362, 17.85417941, 13.57377131, 9.294566076, 4.820496124, -0.234559387, -4.319200613, -5.679945776]  # Displacement steps For Tran_and_Wallace_A15P10S78

    # displacement_step = generate_cyclic_loading(num_cycles=6, initial_displacement=15, max_displacement=76, num_points=100, repetition_cycles=2)
    # displacement_step = generate_cyclic_loading_exponential(num_cycles=6, initial_displacement=7, max_displacement=86, num_points=50, repetition_cycles=2)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Tran_and_Wallace_A20P10S63():
    # https://www.iitk.ac.in/nicee/wcee/article/WCEE2012_3913.pdf
    global name
    name = 'Tran_A20P10S63'
    # Wall Geometry ------------------------------------------------------------------
    tw = 152.5 * mm  # Wall thickness
    tb = tw # Wall thickness
    hw = 2.440 * m  # Wall height
    lw = 1.220 * m  # Wall length
    lbe = 210 * mm  # Boundary element length
    lweb = lw - (2 * lbe)


    # Material proprieties -----------------------------------------------------------
    fc = 48 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 477.78 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 443.71 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyX = 469.93 * MPa
    fx = fyw

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    YbeNum = 8  # BE long reinforcement diameter (mm)
    YbeDiam = 19.05 # BE long reinforcement diameter (mm)
    YwebNum = 10  # Web long reinforcement diameter (mm)
    YwebDiam = 9.52  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web

    # ---- Steel in X direction (BE + Web) -------------------------------------------
    XbeNum = 48 * 2  # BE long reinforcement diameter (mm)
    XbeDiam = 6.33  # BE long reinforcement diameter (mm)
    XwebNum = 17 * 2  # Web long reinforcement diameter (mm)
    XwebDiam = 9.52  # Web long reinforcement diameter (mm)
    rouXb = (rebarArea(XbeDiam) * XbeNum) / (hw * tw)  # X boundary
    rouXw = (rebarArea(XwebDiam) * XwebNum) / (hw * tw)  # X web

    loadF = 0.080 / 0.85

    # displacement_step = [0.585496317, 0.784571078, 2.347398175, 4.105089993, 5.670924261, 7.231044903, 8.402939688, 10.35218834, 11.91291042, 10.93588035, 10.34767758, 9.172775625, 6.249504083, 5.073098541, 3.706639752, 2.533542099, 1.555609885, 0.386421555, -0.9794358, -1.377585324,
    #                     -2.941615289, -4.112307205, -6.060954422, -7.038886636, -9.377263296, -11.13164723, -11.9108054, -10.93197103, -10.14950497, -6.836503985, -6.05373721, -4.882744577, -4.100579236, -3.125052759, -3.117835547, -1.752880344, 0.197270459, 1.759796838, 3.710549075, 5.660098443, 7.418391696, 9.174279211, 10.54404589, 12.30173771, 14.05521949, 16.19903214, 17.76065637, 17.94830388, 16.58244652, 15.21628845, 12.48848307, 11.12052069, 9.560099331, 8.194241977, 6.051331473, 5.072797824, 3.119940567, 1.751677475, 0.192458984, -1.370368112, -1.761601141, -5.46222655, -5.473954519, -6.841616177, -8.790263394, -11.32621123, -12.69267002, -14.05762522, -15.80960341, -18.33983762, -17.9486046, -17.35980039, -15.60421359, -13.07007006, -10.92535525, -9.168565585, -7.412978787, -6.630212012, -4.679159057, -3.313000986, -1.945038611, 0.588503488, 1.757691818, 4.484294336, 7.806617553, 8.783647616, 10.92896386, 14.05040801, 17.16914571, 19.11839436, 22.22991485, 24.75623973, 23.00215652, 22.6076156, 21.82364596, 21.03907488, 19.28258593, 18.10948828, 14.99135201, 13.62519394, 10.50405051, 8.942426278, 6.213418023, 3.485913354, 2.123363888, -2.937405249, -4.885451031, -6.444669522, -12.67913775, -14.23865695, -17.16042491, -17.16884499, -19.31055263, -22.6163364, -24.55836784, -24.16202262, -21.81943592, -19.47564635, -17.71645095, -14.79287869, -11.287118, -8.947237753, -6.994079779, -2.321837216, 0.210201297, 4.689082724, 8.390911001, 11.89306308, 13.84411604, 16.37976316, 18.13414709, 20.66588488, 23.97287152, 28.05721203, 30.58353692, 33.69174952, 33.10414818, 32.51594541, 30.17486229, 28.22260647, 25.10026017, 21.00359026, 15.55218952, 14.76701701, 12.23618137, 9.509278131, 6.59111878, 4.450614014, 2.504071817, 0.363867767, -4.499330194, -8.197850583, -10.92355095, -15.20696622, -17.15771846, -18.52417725, -20.86044889, -23.19672053, -28.25027245, -31.36089079, -36.80116498, -36.2144658, -35.62115084, -32.50090955, -29.96165383, -25.48397527, -22.75195984, -16.71476208, -11.8443469, -7.176615097, -1.341198547, 4.692089895, 13.06044711, 17.73268967, 19.09884774, 22.79706742, 25.52216635, 29.21677741, 33.30141864, 37.18878941, 36.4054212, 34.45496968, 33.28187202, 30.74472132, 29.1815935, 27.03778085, 23.91934387, 20.80060617, 19.43414738, 16.90391317, 12.62530937, 10.09447373, 6.201690054, 1.728522253, -1.1914414, -3.723179196, -6.253714123, -12.67492771, -16.17828266, -20.65295404, -22.79345881, -26.10224976, -29.80107086, -32.52436549, -36.60539811, -35.62716518, -33.08941304, -31.72175138, -27.82144978, -23.52991514, -18.46613883, -14.18182141, -11.06669232, -6.008930353, 0.994170941, 3.135577859, 8.582768551, 11.30666461, 14.61425269, 17.72817891, 22.01039132, 24.93215927, 28.24034878, 31.54703471, 35.04708177, 39.13021941, 43.60038004, 47.29228465, 49.62314338, 48.84218091, 47.28055668, 44.35427797, 38.50141982, 34.21469666, 28.95455205, 26.03308481, 22.7266996, 17.28161393, 11.06338443, 7.365766192, 4.642471564, -0.801711957, -5.859173205, -9.364633175, -11.50754368, -13.64925131, -17.53962925, -22.9877221, -29.21377024, -31.35337286, -34.46459263, -36.99121823, -41.07164942, -43.59917717, -46.70829192, -47.87447308, -48.65152623, -48.8385723, -45.52075984, -41.03857053, -36.16394531, -32.26484658, -26.81073939, -20.20127686, -15.53534936, -10.87092545, -5.036711764, -1.143326654, 3.525006586, 7.610549963, 11.50122862, 14.61455341, 19.08802193, 24.34064861, 27.64823669, 34.45767613, 43.01157583, 46.12189345, 51.56457339, 53.70297313, 58.55985603, 63.22397923, 68.85881744, 73.71539962, 73.12900115, 70.20482746, 67.27824803, 65.32268432, 62.39941277, 59.67070524, 55.5788468, 53.04590613, 48.18120459, 43.51647995, 34.18853427, 26.22163447, 21.16838326, 16.69641833, 10.08304648, 0.943650458, -1.974208176, -4.114712942, -6.838007571, -14.42419944, -16.76107252, -22.40042148, -26.48355912, -31.53861463, -37.95591889, -44.37171956, -52.53318337, -56.22568941, -64.58051436, -69.05067499, -72.93624145, -72.73626454, -69.02932407, -65.51784975, -60.45106627, -56.16374168, -49.93438565, -42.93098364, -32.43595464, -22.71767808, -14.55380854, -5.414111804, 1.002290305, 7.614459286, 16.94751716, 25.89535635, 39.30944684, 44.55996851, 51.94648418, 56.41754696, 62.6363779, 69.2437354, 72.54260268, 68.83656437, 65.52205979, 61.03566044, 57.52809545, 50.51837838, 48.56882901, 43.12374334, 31.07671307, 24.46905484, 14.35954525, 9.305391894, 4.250937817, -0.417094705, -3.140389334, -12.08552207, -16.16926114, -21.61554968, -27.44886121, -37.75263409, -42.02943358, -51.16191311, -54.27132857, -56.98259451, -56.78291832, -57.7515283, -61.8286516, -64.93265415, -69.00496598, -71.72074268, -73.46369935, -70.73709684, -64.89867312, -60.0327687, -52.25411784, -42.73100672, -32.62570717, -24.07481464, -17.66081827, -10.07883644, -3.275712057, 2.362133316, 5.862180377, 11.11059702, 14.41668152, 18.88654143, 23.16183733, 27.63019366, 31.12572996, 33.25991967, 37.13796821, 41.0187232, 44.31819191, 48.58987921, 54.99936482, 57.5220811, 58.292135, 57.12513445, 54.20757653, 50.51386762, 46.81955727, 43.12434477, 35.1562421, 27.76882427, 22.32584362, 17.85417941, 13.57377131, 9.294566076, 4.820496124, -0.234559387, -4.319200613, -5.679945776]  # Displacement steps For Tran_and_Wallace_A15P10S78

    displacement_step = generate_cyclic_loading(num_cycles=6, initial_displacement=15, max_displacement=76, num_points=100, repetition_cycles=2)
    # displacement_step = generate_cyclic_loading_exponential(num_cycles=6, initial_displacement=7, max_displacement=86, num_points=50, repetition_cycles=2)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Greifenhagen_M3():
    # https://www.sciencedirect.com/science/article/pii/S014102960500249X#sec3
    global name;
    name = 'Greifenhagen_M3'
    # Wall Geometry
    tw = 80 * mm  # Wall thickness
    tb = tw
    hw = 600 * mm  # Wall height
    lw = 900 * mm  # Wall length
    lbe = 300 * mm  # Boundary element length
    lweb = lw - (2 * lbe)

    # Material proprieties
    fc = 24 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 504 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 504 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fx = 745 * MPa

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    rouYb = 0.003
    rouYw = 0.003
    rouXb = 0.003
    rouXw = 0.003
    print('rouYb = ', rouYb)
    print('rouYw = ', rouYw)
    print('rouXb = ', rouYb)
    print('rouXw = ', rouYw)
    loadF = 0.130

    # displacement_step = [0.02188, 0.0129, 0.08966, 0.25216, 0.37328, 0.53877, 0.66289, 0.6275, 0.55134, 0.51416, 0.43381, 0.3091, 0.27251, 0.23653, 0.15558, 0.03027, -0.13403, -0.25216, -0.46022, -0.62331, -0.70845, -0.63289, -0.51596, -0.3085, -0.14241, 0.10642, 0.43501, 0.55134, 0.66947, 0.7912, 0.95908, 1.13116, 1.01363, 1.02381, 0.86251, 0.69941, 0.53392, 0.2797, 0.07403, -0.3079, -0.4662, -0.58912, -0.66768, -0.7912, -0.95908, -1.17313, -1.14014, -1.02321, -0.7354, -0.53033, -0.28149, -0.03266, 0.1736, 0.54835, 0.66588, 0.7882, 1.04482, 1.30204, 1.60362, 1.6144, 1.49567, 1.28641, 1.12212, 0.91346, 0.7042, 0.53452, 0.32406, 0.16097, -0.04949, -0.38885, -0.59691, -0.8919, -1.01602, -1.13834, -1.39376, -1.43514, -1.73552, -1.95077, -2.21038, -2.29671, -2.30569, -2.06105, -1.76845, -1.56338, -1.14247, -0.89065, -0.63642, -0.25389, 0.12984, 0.37927, 0.7606, 1.26965, 1.43454, 1.73133, 2.03411, 2.38245, 2.4346, 2.35425, 2.14559, 1.89616, 1.6875, 1.47884, 1.09691, 0.80132, 0.59026, 0.20474, -0.26653, -0.56392, -0.90029, -1.19768, -1.40993, -1.62038, -1.91837, -2.04429, -2.21397, -2.51615, -2.44358, -2.24091, -1.94651, -1.47765, -1.18325, -0.93022, -0.6766, -0.50991, -0.21372, 0.16941, 0.55613, 0.94046, 1.40514, 1.70193, 2.04429, 2.25235, 2.50956, 2.81354, 3.11512, 3.37593, 3.72428, 3.77343, 3.69368, 3.61453, 3.44964, 3.24158, 2.98915, 2.73732, 2.4825, 2.14254, 1.76001, 1.46022, 1.0741, 0.55488, 0.25389, -0.64786, -0.85891, -1.37275, -1.75588, -2.05506, -2.52453, -2.78055, -3.34234, -3.73086, -4.25368, -4.1835, -3.97844, -3.64147, -3.3045, -3.00831, -2.49567, -2.06878, -1.63888, -1.12026, -0.56146, -0.04284, 0.7312, 1.20187, 1.75767, 2.1402, 2.48136, 2.82432, 3.34234, 3.94671, 4.08878, 3.83875, 3.71703, 3.38066, 3.0425, 2.7463, 2.40634, 1.97944, 1.37808, 0.77312, 0.12678, -0.60589, -1.03638, -1.64014, -2.06884, -2.4094, -2.75115, -3.22361, -3.6541, -3.95569, -4.38677, -4.1853, -3.93587, -3.68284, -3.34647, -2.8782, -2.36736, -1.98244, -1.59691, -0.94998, -0.38879, 0.21498, 0.77677, 1.24923, 1.63715, 2.06704, 2.58207, 3.01136, 3.39928, 4.17812, 4.56963, 4.91977, 5.26691, 5.65902, 5.75255, 5.58885, 5.16555, 4.95689, 4.53119, 4.14686, 3.6756, 3.20433, 2.64374, 1.99202, 1.4704, 0.81748, 0.38759, -0.08906, -0.73659, -1.12451, -2.71457, -3.05872, -3.31833, -3.4934, -3.62051, -3.83576, -4.1841, -4.31121, -4.65836, -5.13741, -5.52832, -5.83469, -6.228, -6.15124, -5.98635, -5.86343, -5.70034, -5.35918, -4.88672, -4.54496, -4.0725, -3.5119, -3.03705, -2.51663, -2.16888, -1.64427, -1.64787, -1.38586, -0.99555, -0.56206, 0.08727, 0.82173, 1.42729, 1.98669, 2.72176, 3.36809, 3.88551, 4.3178, 4.92396, 5.40301, 5.88265, 5.88804, 5.72255, 5.60203, 5.08999, 4.66608, 4.23619, 3.89324, 3.55148, 2.85898, 2.20906, 1.51477, 0.60224, -0.00392, -0.69642, -1.38652, -1.94711, -2.42496, -2.68757, -2.59644, -2.98496, -3.45862, -3.93347, -4.23745, -4.49706, -4.79984, -5.10442, -5.27889, -5.49413, -5.79931, -6.14586, -6.4948, -6.3323, -6.12783, -5.79206, -5.3214, -4.98024, -4.50718, -4.03352, -3.42976, -2.73606, -2.25881, -1.7366, -0.99555, -0.34382, 0.47878, 1.03877, 1.77144, 2.37521, 3.06411, 3.79918, 4.40294, 5.22853, 5.84008, 6.3623, 6.97384, 7.23465, 7.80124, 8.02426, 8.16395, 7.99606, 7.78681, 7.23519, 6.89343, 6.3778, 5.81721, 5.08095, 4.47419, 3.69057, 3.03825, 2.12212, 1.03333, 0.21132, -0.48177, -1.73905, -2.42975, -2.94838, -3.38006, -3.68105, -4.07016, -4.45988, -4.89336, -5.54449, -6.02114, -6.84913, -7.41571, -7.89895, -8.21191, -8.30363, -8.09378, -7.71184, -7.45882, -7.2046, -6.90361, -6.51629, -6.0864, -5.65591, -5.13549, -4.4394, -3.52328, -2.9573, -2.43628, -1.52135, -0.38879, 0.43561, 1.21744, 1.91233, 2.60482, 3.08147, 3.68823, 4.16429, 4.98928, 5.55167, 6.37547, 7.02839, 7.59497, 7.85758, 7.90673, 7.78501, 7.44505, 7.19262, 6.63562, 6.03245, 5.30098, 4.39204, 3.61022, 2.51842, 1.34089, -0.14121, -1.05554, -1.6623, -2.18271, -2.70373, -3.31289, -3.87528, -4.6565, -5.04622, -5.78428, -6.39283, -6.95582, -7.43367, -7.95409, -8.30363, -8.73771, -8.7461, -8.53864, -8.15491, -7.72921, -7.12784, -6.52348, -5.83038, -4.74158, -3.65339, -2.52022, -1.47639, -0.47513, 0.74318, 1.56877, 2.30683, 3.1738, 3.73859, 4.30337, 4.99886, 5.82266, 6.38625, 7.21184, 7.73525, 8.0812, 8.34381, 8.73532, 9.34687, 10.04894, 10.27616, 10.63409, 11.16648, 11.3943, 11.00817, 10.62205, 10.06205, 9.67473, 9.24245, 8.59132, 7.63323, 6.71771, 5.80098, 4.66602, 3.83564, 2.65631, 2.1353, 1.52495, 0.47692, -0.65684, -1.91772, -2.78648, -3.5695, -4.61393, -5.31002, -6.09424, -6.9648, -7.87674, -8.57342, -9.53391, -10.54236, -11.24503, -11.60116, -11.86736, -11.91891, -11.79359, -11.3655, -10.76353, -10.1154, -9.20407, -8.50858, -7.72256, -6.71771, -5.66908, -4.14081, -3.00466, -2.17667, -0.69576, 0.78994, 1.74803, 2.92616, 3.84229, 4.89031, 6.24531, 7.29632, 8.21604, 8.96128, 9.79406, 10.23353, 10.32526, 10.02487, 9.41872, 8.15964, 7.06964, 6.11035, 5.41187, 4.49634, 3.18691, 2.26959, 0.74013, -0.65744, -1.7912, -2.83983, -4.06172, -5.15471, -6.55347, -8.08114, -8.91033, -10.13642, -10.92363, -11.01416, -11.40807, -11.93567, -12.37514, -12.73067, -12.99747, -13.3512]  # Displacement steps For Greifenhagen_M3

    # displacement_step = generate_cyclic_loading(num_cycles=7, initial_displacement=1, max_displacement=8, num_points=50, repetition_cycles=2)
    displacement_step = generate_cyclic_loading_linear(num_cycles=6, max_displacement=12, num_points=80, repetition_cycles=2)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Greifenhagen_M4():
    # https://www.sciencedirect.com/science/article/pii/S014102960500249X#sec3
    global name;
    name = 'Greifenhagen_M4'
    # Wall Geometry
    tw = 80 * mm  # Wall thickness
    tb = tw
    hw = 600 * mm  # Wall height
    lw = 900 * mm  # Wall length
    lbe = 300 * mm  # Boundary element length
    lweb = lw - (2 * lbe)

    # Material proprieties
    fc = 24.4 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 504 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 504 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fx = 745 * MPa

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    rouYb = 0.003
    rouYw = 0.003
    rouXb = 0.003
    rouXw = 0.003
    print('rouYb = ', rouYb)
    print('rouYw = ', rouYw)
    print('rouXb = ', rouYb)
    print('rouXw = ', rouYw)
    loadF = 0.135

    # displacement_step = [0.02188, 0.0129, 0.08966, 0.25216, 0.37328, 0.53877, 0.66289, 0.6275, 0.55134, 0.51416, 0.43381, 0.3091, 0.27251, 0.23653, 0.15558, 0.03027, -0.13403, -0.25216, -0.46022, -0.62331, -0.70845, -0.63289, -0.51596, -0.3085, -0.14241, 0.10642, 0.43501, 0.55134, 0.66947, 0.7912, 0.95908, 1.13116, 1.01363, 1.02381, 0.86251, 0.69941, 0.53392, 0.2797, 0.07403, -0.3079, -0.4662, -0.58912, -0.66768, -0.7912, -0.95908, -1.17313, -1.14014, -1.02321, -0.7354, -0.53033, -0.28149, -0.03266, 0.1736, 0.54835, 0.66588, 0.7882, 1.04482, 1.30204, 1.60362, 1.6144, 1.49567, 1.28641, 1.12212, 0.91346, 0.7042, 0.53452, 0.32406, 0.16097, -0.04949, -0.38885, -0.59691, -0.8919, -1.01602, -1.13834, -1.39376, -1.43514, -1.73552, -1.95077, -2.21038, -2.29671, -2.30569, -2.06105, -1.76845, -1.56338, -1.14247, -0.89065, -0.63642, -0.25389, 0.12984, 0.37927, 0.7606, 1.26965, 1.43454, 1.73133, 2.03411, 2.38245, 2.4346, 2.35425, 2.14559, 1.89616, 1.6875, 1.47884, 1.09691, 0.80132, 0.59026, 0.20474, -0.26653, -0.56392, -0.90029, -1.19768, -1.40993, -1.62038, -1.91837, -2.04429, -2.21397, -2.51615, -2.44358, -2.24091, -1.94651, -1.47765, -1.18325, -0.93022, -0.6766, -0.50991, -0.21372, 0.16941, 0.55613, 0.94046, 1.40514, 1.70193, 2.04429, 2.25235, 2.50956, 2.81354, 3.11512, 3.37593, 3.72428, 3.77343, 3.69368, 3.61453, 3.44964, 3.24158, 2.98915, 2.73732, 2.4825, 2.14254, 1.76001, 1.46022, 1.0741, 0.55488, 0.25389, -0.64786, -0.85891, -1.37275, -1.75588, -2.05506, -2.52453, -2.78055, -3.34234, -3.73086, -4.25368, -4.1835, -3.97844, -3.64147, -3.3045, -3.00831, -2.49567, -2.06878, -1.63888, -1.12026, -0.56146, -0.04284, 0.7312, 1.20187, 1.75767, 2.1402, 2.48136, 2.82432, 3.34234, 3.94671, 4.08878, 3.83875, 3.71703, 3.38066, 3.0425, 2.7463, 2.40634, 1.97944, 1.37808, 0.77312, 0.12678, -0.60589, -1.03638, -1.64014, -2.06884, -2.4094, -2.75115, -3.22361, -3.6541, -3.95569, -4.38677, -4.1853, -3.93587, -3.68284, -3.34647, -2.8782, -2.36736, -1.98244, -1.59691, -0.94998, -0.38879, 0.21498, 0.77677, 1.24923, 1.63715, 2.06704, 2.58207, 3.01136, 3.39928, 4.17812, 4.56963, 4.91977, 5.26691, 5.65902, 5.75255, 5.58885, 5.16555, 4.95689, 4.53119, 4.14686, 3.6756, 3.20433, 2.64374, 1.99202, 1.4704, 0.81748, 0.38759, -0.08906, -0.73659, -1.12451, -2.71457, -3.05872, -3.31833, -3.4934, -3.62051, -3.83576, -4.1841, -4.31121, -4.65836, -5.13741, -5.52832, -5.83469, -6.228, -6.15124, -5.98635, -5.86343, -5.70034, -5.35918, -4.88672, -4.54496, -4.0725, -3.5119, -3.03705, -2.51663, -2.16888, -1.64427, -1.64787, -1.38586, -0.99555, -0.56206, 0.08727, 0.82173, 1.42729, 1.98669, 2.72176, 3.36809, 3.88551, 4.3178, 4.92396, 5.40301, 5.88265, 5.88804, 5.72255, 5.60203, 5.08999, 4.66608, 4.23619, 3.89324, 3.55148, 2.85898, 2.20906, 1.51477, 0.60224, -0.00392, -0.69642, -1.38652, -1.94711, -2.42496, -2.68757, -2.59644, -2.98496, -3.45862, -3.93347, -4.23745, -4.49706, -4.79984, -5.10442, -5.27889, -5.49413, -5.79931, -6.14586, -6.4948, -6.3323, -6.12783, -5.79206, -5.3214, -4.98024, -4.50718, -4.03352, -3.42976, -2.73606, -2.25881, -1.7366, -0.99555, -0.34382, 0.47878, 1.03877, 1.77144, 2.37521, 3.06411, 3.79918, 4.40294, 5.22853, 5.84008, 6.3623, 6.97384, 7.23465, 7.80124, 8.02426, 8.16395, 7.99606, 7.78681, 7.23519, 6.89343, 6.3778, 5.81721, 5.08095, 4.47419, 3.69057, 3.03825, 2.12212, 1.03333, 0.21132, -0.48177, -1.73905, -2.42975, -2.94838, -3.38006, -3.68105, -4.07016, -4.45988, -4.89336, -5.54449, -6.02114, -6.84913, -7.41571, -7.89895, -8.21191, -8.30363, -8.09378, -7.71184, -7.45882, -7.2046, -6.90361, -6.51629, -6.0864, -5.65591, -5.13549, -4.4394, -3.52328, -2.9573, -2.43628, -1.52135, -0.38879, 0.43561, 1.21744, 1.91233, 2.60482, 3.08147, 3.68823, 4.16429, 4.98928, 5.55167, 6.37547, 7.02839, 7.59497, 7.85758, 7.90673, 7.78501, 7.44505, 7.19262, 6.63562, 6.03245, 5.30098, 4.39204, 3.61022, 2.51842, 1.34089, -0.14121, -1.05554, -1.6623, -2.18271, -2.70373, -3.31289, -3.87528, -4.6565, -5.04622, -5.78428, -6.39283, -6.95582, -7.43367, -7.95409, -8.30363, -8.73771, -8.7461, -8.53864, -8.15491, -7.72921, -7.12784, -6.52348, -5.83038, -4.74158, -3.65339, -2.52022, -1.47639, -0.47513, 0.74318, 1.56877, 2.30683, 3.1738, 3.73859, 4.30337, 4.99886, 5.82266, 6.38625, 7.21184, 7.73525, 8.0812, 8.34381, 8.73532, 9.34687, 10.04894, 10.27616, 10.63409, 11.16648, 11.3943, 11.00817, 10.62205, 10.06205, 9.67473, 9.24245, 8.59132, 7.63323, 6.71771, 5.80098, 4.66602, 3.83564, 2.65631, 2.1353, 1.52495, 0.47692, -0.65684, -1.91772, -2.78648, -3.5695, -4.61393, -5.31002, -6.09424, -6.9648, -7.87674, -8.57342, -9.53391, -10.54236, -11.24503, -11.60116, -11.86736, -11.91891, -11.79359, -11.3655, -10.76353, -10.1154, -9.20407, -8.50858, -7.72256, -6.71771, -5.66908, -4.14081, -3.00466, -2.17667, -0.69576, 0.78994, 1.74803, 2.92616, 3.84229, 4.89031, 6.24531, 7.29632, 8.21604, 8.96128, 9.79406, 10.23353, 10.32526, 10.02487, 9.41872, 8.15964, 7.06964, 6.11035, 5.41187, 4.49634, 3.18691, 2.26959, 0.74013, -0.65744, -1.7912, -2.83983, -4.06172, -5.15471, -6.55347, -8.08114, -8.91033, -10.13642, -10.92363, -11.01416, -11.40807, -11.93567, -12.37514, -12.73067, -12.99747, -13.3512]  # Displacement steps For Greifenhagen_M3

    # displacement_step = generate_cyclic_loading(num_cycles=7, initial_displacement=1, max_displacement=8, num_points=50, repetition_cycles=2)
    displacement_step = generate_cyclic_loading_linear(num_cycles=6, max_displacement=12, num_points=80, repetition_cycles=2)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Lu_SW11():
    # https://sci-hub.st/10.1061/(asce)0733-9445(2004)130:4(618)
    global name
    name = 'Lu_SW11'
    # Wall Geometry
    tw = 125 * mm  # Wall thickness
    hw = 2.00 * m  # Wall height
    lw = 1.00 * m  # Wall length
    lbe = 200 * mm  # Boundary element length
    lweb = lw - (2 * lbe)
    tb = tw  # Wall thickness

    # Material proprieties
    fc = 20.7 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 379 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 392 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fx = fyw

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    YbeNum = 6  # BE long reinforcement diameter (mm)
    YbeDiam = 10  # BE long reinforcement diameter (mm)
    YwebNum = 10  # Web long reinforcement diameter (mm)
    YwebDiam = 6  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary        0.0188496
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web             0.00376992
    print('rouYb = ', rouYb)
    print('rouYw = ', rouYw)
    rouXb = 0.030
    rouXw = 0.0030
    loadF = 0.12

    # displacement_step = generate_cyclic_load(duration=24, sampling_rate=50, max_displacement=20)
    # displacement_step = generate_cyclic_loading_with_repetition(num_cycles=11, max_displacement=20, num_points=50, repetition_cycles=1)
    displacement_step = generate_cyclic_loading(num_cycles=12, initial_displacement=3.5, max_displacement=20, num_points=100, repetition_cycles=2)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Test():
    # https://sci-hub.st/10.1061/(asce)0733-9445(2004)130:4(618)
    global name
    name = 'W1_SR'
    # Wall Geometry
    #                            (tw,    hw,     lw,    lbe,   fc,   fyb,  fyw,   rouYb,  rouYw, loadF)

    # 102.0, 4572.0, 1905.0, 140.0, 45.6, 463.7, 463.7, 0.0435, 0.0031, 0.08
    tw = 100 * mm  # Wall thickness
    hw = 2.1 * m  # Wall height
    lw = 1.0 * m  # Wall length
    lbe = 110 * mm  # Boundary element length
    lweb = lw - (2 * lbe)
    tb = tw  # Wall thickness

    # Material proprieties
    fc = 27.0 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 490 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 338 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fx = fyw

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    YbeNum = 4  # BE long reinforcement diameter (mm)
    YbeDiam = 9.53  # BE long reinforcement diameter (mm)
    YwebNum = 14  # Web long reinforcement diameter (mm)
    YwebDiam = 6.35  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary        0.0188496
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web             0.00376992
    print('rouYb', rouYb)
    print('rouYw', rouYw)

    # ---- Steel in X direction (BE + Web) -------------------------------------------
    XbeNum = 72  # BE long reinforcement diameter (mm)
    XbeDiam = 6.35  # BE long reinforcement diameter (mm) #3 = 9.53
    XwebNum = 28  # Web long reinforcement diameter (mm)
    XwebDiam = 9.53  # Web long reinforcement diameter (mm) #4 = 12.7
    rouXb = (rebarArea(XbeDiam) * XbeNum) / (hw * tw)  # X boundary        0.00282744
    rouXw = (rebarArea(XwebDiam) * XwebNum) / (hw * tw)  # X web             0.0018095616

    loadF = 0.103

    # displacement_step = generate_cyclic_load(duration=7, sampling_rate=100, max_displacement=86)
    # displacement_step = generate_cyclic_loading(num_cycles=10, initial_displacement=5, max_displacement=86, num_points=50, repetition_cycles=2)
    displacement_step = generate_cyclic_loading_linear(num_cycles=12, max_displacement=70, num_points=36, repetition_cycles=3)
    # displacement_step = generate_cyclic_loading_exponential(num_cycles=6, initial_displacement=8, max_displacement=36, num_points=50, repetition_cycles=3)

    # displacement_step = generate_cyclic_load(duration=24, sampling_rate=50, max_displacement=50)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Lefas_SW22():
    # https://sci-hub.st/10.1061/(asce)0733-9445(2004)130:4(618)
    global name
    name = 'Lefas_SW22'
    # Wall Geometry
    #                            (tw,    hw,     lw,    lbe,   fc,   fyb,  fyw,   rouYb,  rouYw, loadF)

    # 102.0, 4572.0, 1905.0, 140.0, 45.6, 463.7, 463.7, 0.0435, 0.0031, 0.08
    tw = 65 * mm  # Wall thickness
    hw = 1.350 * m  # Wall height
    lw = 0.650 * m  # Wall length
    lbe = 140 * mm  # Boundary element length
    lweb = lw - (2 * lbe)
    tb = tw  # Wall thickness
    tb = tw  # Wall thickness

    # Material proprieties
    fc = 50.6 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 470 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 470 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fx = fyw

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    YbeNum = 6  # BE long reinforcement diameter (mm)
    YbeDiam = 8  # BE long reinforcement diameter (mm)
    YwebNum = 10  # Web long reinforcement diameter (mm)
    YwebDiam = 8  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary        0.0188496
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web             0.00376992
    print('rouYb', rouYb)
    print('rouYw', rouYw)
    rouXb = 0.030
    rouXw = 0.003

    # ---- Steel in X direction (BE + Web) -------------------------------------------
    XbeNum = 72  # BE long reinforcement diameter (mm)
    XbeDiam = 6.35  # BE long reinforcement diameter (mm) #3 = 9.53
    XwebNum = 28  # Web long reinforcement diameter (mm)
    XwebDiam = 9.53  # Web long reinforcement diameter (mm) #4 = 12.7
    rouXb = (rebarArea(XbeDiam) * XbeNum) / (hw * tw)  # X boundary        0.00282744
    rouXw = (rebarArea(XwebDiam) * XwebNum) / (hw * tw)  # X web             0.0018095616

    loadF = 0.1

    # displacement_step = generate_cyclic_load(duration=7, sampling_rate=100, max_displacement=86)
    # displacement_step = generate_cyclic_loading(num_cycles=10, initial_displacement=5, max_displacement=86, num_points=50, repetition_cycles=2)
    displacement_step = generate_cyclic_loading_linear(num_cycles=12, max_displacement=18, num_points=36, repetition_cycles=3)

    # displacement_step = generate_cyclic_loading_exponential(num_cycles=6, initial_displacement=8, max_displacement=36, num_points=50, repetition_cycles=3)

    # displacement_step = generate_cyclic_load(duration=24, sampling_rate=50, max_displacement=50)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Zhang_SW12():
    # https://sci-hub.st/10.1061/(asce)0733-9445(2004)130:4(618)
    global name
    name = 'Zhang_SW12'
    # Wall Geometry
    # 102.0, 4572.0, 1905.0, 140.0, 45.6, 463.7, 463.7, 0.0435, 0.0031, 0.08
    tw = 125 * mm  # Wall thickness
    hw = 2.0 * m  # Wall height
    lw = 1.0 * m  # Wall length
    lbe = 200 * mm  # Boundary element length
    lweb = lw - (2 * lbe)
    tb = tw  # Wall thickness

    # Material proprieties
    fc = 20 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 352 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 379 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fx = fyw

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    YbeNum = 6  # BE long reinforcement diameter (mm)
    YbeDiam = 9.45  # BE long reinforcement diameter (mm)
    YwebNum = 10  # Web long reinforcement diameter (mm)
    YwebDiam = 10  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary        0.0188496
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web             0.00376992
    print('rouYb', rouYb)
    print('rouYw', rouYw)
    rouXb = 0.019
    rouXw = 0.004
    loadF = 0.27

    # displacement_step = [0.03896, 0.35013, 0.58328, 0.81715, 1.05071, 1.44133, 2.06725, 2.92427, 0.19562, 0.04141, -0.34748, -0.5023, -0.89211, -1.2039, -1.59462, -1.28355, -1.12924, -0.81847, -0.5073, -0.03927, 0.42785, 0.89507, 1.20665, 1.59656, 1.98708, 1.67621, 1.13128, 0.82041, 0.19715,
    # -0.3482, -0.738, -0.50159, -1.2041, -1.67244, -2.21901, -0.3533, -2.76537, -2.76721, -2.45665, -1.83338, -1.28783, -0.74208, -0.7429, 0.50597, 1.20696, 1.59615, 2.29907, 2.61157, 2.37913, 1.36535, 0.97717, 0.27588, -0.19042, -0.73647, -1.67295, -2.68755, -2.68898, -2.37842, -1.44347, -0.89864, 2.14445, 1.90957, 3.39251, 4.09533, 4.72094, 4.33215, 3.62984, 2.84962, 2.22543, 1.7576, 0.11963, -0.66018, -1.12669, -1.90681, -2.92182, -3.31163, -3.85871, -3.93867, -3.62852, -2.77108, -1.83563, -1.21185, 0.03692, 1.36423, 3.6277, 4.40803, 5.50178, 5.8924, 6.20571, 5.50412, 4.64587, 3.94397, 3.3201, 3.08705, 2.30621, 1.60411, 1.05795, 0.43346, -0.50302, -1.12638, -2.06296, -2.99995, -3.62434, -4.32756, -4.87474, -4.79876, -4.64536, -4.33398, -3.71021, 3.31714, -1.91487, 0.89588, 4.01873, 3.94132, 4.72196, 5.5028, 5.97154, 4.95755, 4.49054, 3.55447, 2.69653, 2.07255, 1.13668, 0.27803, -0.97064, -2.29795, -3.23483, -4.17233, -4.79753, -4.95378, -4.79998, -4.64587, -4.02251, -3.24177, -2.22717, -1.05621, 0.27089, 3.08215, 5.5028, 5.97144, 6.43989, 7.29966, 7.6141, 6.91231, 5.97644, 5.35246, 4.41497, 3.2433, 2.30652, 1.29253, -0.58777, -1.59707, -2.53344, -3.31337, -4.25086, -5.0317, -5.42192, -6.20327, -6.28313, -5.89505, -5.27128, -4.49105, -2.77384, -1.60319, -0.66671, 0.89486, 2.14415, 3.62862, 5.03435, 6.28476, 6.90955, 7.3784, 7.30232, 6.44437, 5.19519, 4.41497, 3.24371, 2.15027, 1.21369, 0.66855, -0.65876, -1.90824, -3.00168, -3.86105, -4.6422, -5.34542, -5.8922, -6.36074, -6.05089, -5.42732, -4.96, -4.02312, -3.00821, -2.22757, -1.36912, -0.19817, 1.44194, 2.53538, 3.86309, 5.19132, 6.36278, 7.45653, 8.08152, 8.86328, 9.17588, 9.17833, 7.69467, 6.68038, 5.97828, 5.11931, 4.18192, 3.40098, 2.77649, 1.99514, 1.05795, -0.34799, -1.28528, -2.45624, -3.6276, -4.79876, -5.50137, -6.20439, -6.75116, -7.14148, -7.61033, -8.15781, -8.15914, -7.9267, -7.14688, -5.81968, -4.49248, -2.85216, -1.44663, -0.11953, 1.91089, 4.02036, 5.42671, 9.41138, 8.08285, 8.78597, 9.25503, 8.86583, 8.00728, 7.46112, 6.36798, 5.74431, 4.49452, 3.32316, 1.99504, 0.82347, -0.19154, -1.44092, -2.61269, -3.62801, -4.40895, -5.18958, -6.04896, -6.59573, -7.37728, -8.15894, -7.77035, -7.06815, -6.13147, -4.88218, -3.55447, -2.46175, -1.44704, -0.19807, 1.52007, 4.56673, 5.81693, 6.75473, 8.23971, 9.95815, 10.4271, 10.7396, 10.81956, 10.82119, 10.19671, 8.94742, 8.16669, 6.99502, 5.82335, 4.96408, 3.47961, 2.22951, 0.66702, -0.19154, -1.51915, -3.23759, -4.40895, -5.34624, -6.28333, -6.90812, -7.92415, -8.62728, -9.40893, -9.95631, -9.87952, -9.4126, -8.78913, -7.53975, -6.21204, -4.88382, -3.71205, -2.69724, -1.36912, 0.81776, 2.77037, 4.64506, 5.6617, 0.50546, 8.39657, 9.56855, 10.50625, 11.05322, 10.35163, 9.96233, 9.18159, 8.32273, 6.99451, 6.13606, 4.96429, 3.87023, 3.01076, 2.07398, 0.74545, -0.19164, -1.44143, -3.00372, -4.25392, -5.89454, -6.67538, -7.53475, -8.15955, -8.70652, -9.33172, -9.8789, -9.80251, -9.10072, -8.24257, -6.68058, -5.35226, -3.94683, -2.85349, -1.68172, 0.2715, 2.45807, 4.09818, 7.14617, 8.47419, 10.42782, 11.52166, 12.61653, 12.69639, 12.15084, 11.37072, 0.98013, 8.87113, 7.30884, 6.13697, 4.49605, 2.93315, 1.76127, 0.51199, -2.06653, -3.62903, -5.1134, -6.28506, -7.30048, -8.316, -9.01882, -9.95662, -10.73838, -11.20753, -11.13104, -10.97612, -10.27422, -9.41576, -8.16597, -7.15045, -6.05701, -4.57234, -3.1663, -1.44755, 3.86462, 7.14688, 8.55343, 9.72541, 10.89748, 11.83549, 12.4609, 12.7737, 12.697, 12.07343, 11.2928, 10.43404, 9.26227, 8.16822, 6.29281, 4.9649, 3.55814, 1.99544, -0.03488, -1.83236, -3.47257, -5.26965, -6.6762, -7.76974, -8.70744, -9.72347, -10.7396, -11.20845, -10.97642, -10.43016, -9.25941, -8.47857, -7.15035, -6.13473, -5.11931, -3.79089, -2.30621, 1.13087, 2.53681, 4.48993, 6.05263, 7.85001, 9.02218, 10.27228, 11.36644, 12.30434, 13.08589, 14.024, 14.57159, 14.88552, 14.73049, 14.26266, -2.22309, 12.31005, 11.37276, 10.35734, 9.34172, 8.24787, 6.76299, 5.90352, 4.10604, 3.16854, 1.91844, -1.36341, -3.31663, -5.50371, -7.37932, -8.47286, -10.03607, -10.89575, -11.28627, -12.06782, -12.77166, -13.00756, -12.61867, -11.91678, -10.90228, -9.7304, -8.55853, 4.56867, -5.98042, -4.49574, -3.32397, -1.99555, -0.43224, 5.03721, 9.33519, 11.5234, 13.71211, 14.41565, 14.88501, 14.96435, 14.49663, 14.10661, 13.404, 12.46661, 11.13808, 10.20099, 9.2637, 8.09142, 6.45008, 5.66904, 4.49676, 2.85614, 1.91875, 0.1998, -1.05071, -3.94255, -6.83275, -8.31743, -9.72459, -10.9752, -11.67822, -12.45988, -13.16361, -12.77431, -12.38481, -11.13594, -9.72969, -8.32385, -7.38666, -5.90229, -4.26147, 7.85133, -1.5268, 0.42663, 2.38056, 8.71019, 11.99306, 13.39972, 14.49408, 15.43208, 16.05759, 16.52715, 16.21619, 15.98293, 15.12417, 13.9522, 13.0147, 11.60887, 10.437, 8.63992, 7.85857, 6.45161, 5.04506, 3.40342, 1.99677, 1.05927, -0.58104, -2.61279, -5.34777, -7.37993, -8.55211, -9.80292, -10.81864, -12.38216, -13.78912, -14.41473, -14.41605, -14.57414, -13.63756, -12.31005, -10.9037, -9.41933, -7.93507, -6.21622, -4.73124, -3.0898, -1.5269, 0.34962, 1.52098, 3.08399, 5.2724, 7.46071, 9.80537, 12.15044, 13.94792, 15.1203, 15.98028, 16.37121, 16.37254, 15.51439, 14.2649, 13.09324, 11.68699, 9.65514, 7.38901, 5.82672, 3.09082, 0.8248, -1.12853, -3.55131, -5.03619, -6.99012, -8.55323, -10.11695, -11.44538, -12.4612, -13.0862, -13.86806, -14.49367, -14.72988, -14.1061, -13.09109, -12.07598, -10.90381, -9.57569, -8.79495, -7.23194, -5.90362, -4.41864, -3.0898, -1.91712, -0.19745, 1.13118, 2.85012, 4.80375, 6.5227, 8.16403, 9.72714, 11.52503, 13.63542, 15.1205, 16.05851, 16.76214, 17.46567, 17.77848, 18.17032, 18.17175, 17.62569, 16.84496, 16.14204, 15.36079, 14.18892, 13.09497, 12.2358, 11.06342, 9.81332, 8.25042, 6.60909, 4.57672, 3.09164, 1.4502, 0.04386, -1.3629, -2.9255, -4.41048, -6.52097, -8.16281, -9.64789, -10.82017, -12.38318, -13.55566, -14.49367, -15.1972, -16.21404, -16.21568, -15.98263, -15.28042, -14.10876, -12.85866, -11.53074, -10.35877, -9.03024, -7.62359, -5.82641, -3.9504, -2.54344, -1.68397, -0.19858, 1.52078, 2.92723, 5.81968, 6.60123, 8.32079, 10.58764, 12.54218, 14.80933, 16.52868, 17.38857, 17.85752, 17.93738, 17.07913, 16.2988, 14.89245, 13.79871, 12.15768, 10.36081, 8.64104, 6.9221, 4.96786, 3.24799, 1.21562, -0.34728, -2.53579, -4.17682, -5.81784, -7.77198, -9.41342, -11.05547, -12.30597, -13.40013, -14.65084, -15.43269, -16.05861, -15.98212, -15.35794, -14.65563, -13.17105, -11.76501, -10.12429, -8.79587, -7.07641, -4.73175, -2.93437, -0.98064, 1.44245, 3.86544, 6.75769, 8.86818, 10.66607, 12.3077, 17.54543, 18.79614, 19.5781, 19.89111, 20.20524, 19.89356, 18.87814, 17.55073, 16.53521, 14.73783, 13.33128, 11.5338, 9.81414, 8.17311, 6.21928, 4.49962, 2.85788, 1.13821, -0.26875, -1.83134, -4.7242, -6.52178, -8.39708, -10.586, -13.08752, -14.72906, -16.13643, -17.30932, -17.54502, -17.31258, -17.0011, -15.67309, -14.65787, -13.09538, -11.84508, -10.20374, -8.48459, -6.92159, -4.88943, -3.63882, -1.99697, -0.74667, 0.97299, 3.1616, 5.2722, 7.14821, 8.6335, 10.04046, 11.60387, 16.29441, 18.32698, 19.8905, 20.28296, 19.81564, 19.19084, 18.01917, 16.76918, 15.98824, 14.89419, 13.48733, 11.29922, 9.57987, 7.07896, 5.20294, 3.87462, 1.92018, 0.27854, -1.9882, -5.66221, -7.53812, -9.023, -10.42975, -11.99347, -14.1827, -15.35518, -16.68453, -17.62325, -17.54706, -16.84506, -15.59496, -14.03257, -12.70486, -11.37633, -9.65677, -6.29628, -4.73307, -3.24799, -1.68488, 1.28539, 4.17784, 7.46112, 9.96254, 11.60377, 13.47998, 15.35651, 17.07637, 18.56166, 19.81268, 20.51631, 20.98557, 21.53316, 22.2376, 21.92674, 20.99046, 19.66224, 18.64672, 17.24038, 15.91174, 14.19208, 12.62969, 11.22273, 9.26859, 7.93986, 6.37645, 5.12594, 3.09327, 1.29518, -1.0502, -3.39537, -5.50565, -7.61614, -11.05536, -13.08783, -14.57353, -16.2937, -17.31014, -18.48303, -19.50028, -19.11108, -18.48701, -17.54981, -16.37835, -14.81545, -13.56555, -12.00306, -10.51798, -8.25124, -6.45365, -4.49931, -3.01392, -0.1996, 4.49095, 6.36706, 8.24338, 9.80659, 11.13563, 12.62112, 14.10661, 15.43575, 16.53011, 17.7028, 18.64101, 19.34444, 20.1264, 21.06482, 21.84698, 22.16101, 21.30256, 20.83503, 18.95953, 17.70974, 16.61579, 14.89612, 13.33342, 10.91023, 9.73754, 8.17423, 5.36001, 3.64055, 1.45153, -1.0502, -3.08297, -4.7243, -6.67875, -8.78944, -10.58753, -11.9948, -13.40227, -15.20016, -16.21649, -18.01459, -19.57871, -19.34658, -18.56635, -17.70698, -16.61324, -15.44116, -14.03512, -12.70659, -10.59641, -8.87685, -7.15698, -5.90627, -3.95183, -0.35533, 4.56928, 6.4456, 7.85266, 9.25941, 10.66658, 12.30832, 14.18474, 15.67043, 17.0778, 18.40715, 19.42338, 20.67439, 22.00405, 22.16193, 20.99057, 19.35005, 17.86598, 16.6936, 15.52153, 13.95873, 11.92647, 10.36315, 9.19057, 6.61113, 3.71837, 0.98156, -1.0506, -3.23942, -5.74135, -7.93007, -9.96264, -12.07384, -12.93393, -14.18443, -15.5919, -16.60793, -17.38969, -18.3281, -19.57994, -18.87814, -17.4721, -16.22271, -14.50387, -12.70618, -11.22181, -8.79872, -6.6099]
    # displacement_step = generate_cyclic_load(duration=7, sampling_rate=100, max_displacement=86)
    # displacement_step = generate_cyclic_loading(num_cycles=10, initial_displacement=5, max_displacement=86, num_points=50, repetition_cycles=2)
    displacement_step = generate_cyclic_loading_linear(num_cycles=6, max_displacement=21, num_points=20, repetition_cycles=1)

    # displacement_step = generate_cyclic_loading_exponential(num_cycles=6, initial_displacement=8, max_displacement=36, num_points=50, repetition_cycles=3)

    # displacement_step = generate_cyclic_loading_with_repetition(duration=24, sampling_rate=50, max_displacement=21)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Oesterle_R2():
    # https://sci-hub.st/10.1061/(asce)0733-9445(2004)130:4(618)
    global name
    name = 'Oesterle_R2'
    # Wall Geometry
    # 102.0, 4572.0, 1905.0, 140.0, 45.6, 463.7, 463.7, 0.0435, 0.0031, 0.08
    tw = 102 * mm  # Wall thickness
    hw = 4.572 * m  # Wall height
    lw = 1.91 * m  # Wall length
    lbe = 100 * mm  # Boundary element length
    lweb = lw - (2 * lbe)
    tb = tw  # Wall thickness

    # Material proprieties
    fc = 46.4 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 449.7 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 520.9 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fx = fyw

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    YbeNum = 8  # BE long reinforcement diameter (mm)
    YbeDiam = 11.5  # BE long reinforcement diameter (mm)
    YwebNum = 8  # Web long reinforcement diameter (mm)
    YwebDiam = 8.5  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary        0.0188496
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web             0.00376992
    print('rouYb', rouYb)
    print('rouYw', rouYw)

    loadF = 0.001
    displacement_step = [3.29E-01, 7.47E-01, 2.10E+00, 2.79E+00, 3.16E+00, 4.84E+00, 6.85E+00, 6.89E+00, 7.91E+00, 8.60E+00, 9.28E+00, 1.06E+01, 1.23E+01, 1.33E+01, 1.46E+01, 1.49E+01, 1.32E+01, 1.22E+01, 1.15E+01, 1.05E+01, 8.13E+00, 5.46E+00, 4.75E+00, 3.73E+00, 9.71E-01, 1.34E+00, 6.10E-01,
                        -1.08E+00, -2.44E+00, -3.79E+00, -4.17E+00, -5.18E+00, -5.89E+00, -8.22E+00, -1.02E+01, -1.09E+01, -1.26E+01, -1.36E+01, -1.43E+01, -1.56E+01, -1.35E+01, -1.19E+01, -9.84E+00, -8.48E+00, -6.80E+00, -6.11E+00, -4.76E+00, -2.74E+00, -1.72E+00, -6.99E-01, 3.18E-01, 2.04E+00,
                        3.74E+00, 5.10E+00, 6.12E+00, 7.15E+00, 7.84E+00, 1.02E+01, 1.16E+01, 1.26E+01, 1.33E+01, 1.49E+01, 1.35E+01, 1.22E+01, 7.82E+00, 5.13E+00, 5.73E+00, 3.06E+00, 2.04E+00, -1.05E+00, -3.41E+00, -3.12E+00, -6.14E+00, -8.50E+00, -8.53E+00, -9.55E+00, -1.06E+01, -1.22E+01,
                        -1.32E+01, -1.52E+01, -1.35E+01, -1.12E+01, -9.16E+00, -7.13E+00, -5.43E+00, -4.39E+00, -2.72E+00, -1.05E+00, -2.00E-02, 6.65E-01, 1.31E+00, 1.68E+00, 3.04E+00, 4.74E+00, 7.11E+00, 9.15E+00, 1.12E+01, 1.22E+01, 1.36E+01, 1.49E+01, 1.66E+01, 1.96E+01, 2.13E+01, 2.36E+01,
                        2.53E+01, 2.69E+01, 2.65E+01, 2.35E+01, 2.18E+01, 2.14E+01, 2.01E+01, 1.91E+01, 1.87E+01, 1.77E+01, 1.54E+01, 1.37E+01, 1.04E+01, 8.37E+00, 7.69E+00, 5.37E+00, 3.71E+00, 2.36E+00, 3.52E-01, 6.43E-01, 2.47E-01, -2.41E+00, -2.78E+00, -4.13E+00, -4.83E+00, -4.20E+00, -5.54E+00,
                        -7.55E+00, -8.24E+00, -9.59E+00, -1.16E+01, -1.29E+01, -1.46E+01, -1.46E+01, -1.39E+01, -1.22E+01, -1.05E+01, -8.81E+00, -7.78E+00, -6.77E+00, -5.73E+00, -4.06E+00, -2.05E+00, -1.36E+00, 3.25E-01, 3.00E+00, 4.06E+00, 5.77E+00, 9.46E+00, 1.18E+01, 1.42E+01, 1.55E+01, 1.79E+01,
                        1.99E+01, 2.22E+01, 2.32E+01, 2.42E+01, 2.79E+01, 2.75E+01, -7.43E+00, 2.42E+01, 2.31E+01, 2.14E+01, 2.08E+01, 1.94E+01, 1.84E+01, 1.77E+01, 1.40E+01, 1.07E+01, 7.68E+00, 5.69E+00, 3.68E+00, 2.65E+00, 3.03E-01, -3.04E+00, -4.74E+00, -4.46E+00, -6.15E+00, -7.49E+00, -7.53E+00,
                        -8.89E+00, -9.58E+00, -1.12E+01, -1.49E+01, -1.32E+01, -1.12E+01, -8.14E+00, -3.71E+00, -3.43E-01, 6.57E-01, -5.92E+00, -3.58E+00, -9.13E-01, 3.07E+00, 4.77E+00, 6.80E+00, 8.16E+00, 9.84E+00, 1.28E+01, 1.52E+01, 1.72E+01, 1.99E+01, 2.09E+01, 2.29E+01, 2.49E+01, 2.66E+01,
                        3.09E+01, 3.42E+01, 3.91E+01, 4.21E+01, 4.50E+01, 4.80E+01, 5.06E+01, 5.19E+01, 5.09E+01, 5.12E+01, 5.01E+01, 4.85E+01, 4.64E+01, 4.41E+01, 4.24E+01, 4.11E+01, 3.90E+01, 3.80E+01, 3.64E+01, 3.40E+01, 3.13E+01, 2.90E+01, 2.70E+01, 2.43E+01, 2.20E+01, 1.87E+01, 1.50E+01,
                        1.10E+01, 8.02E+00, 5.69E+00, 2.04E+00, -9.54E-01, -5.92E+00, -8.59E+00, -1.16E+01, -1.46E+01, -1.89E+01, -2.16E+01, -2.39E+01, -2.85E+01, -3.22E+01, -3.48E+01, -3.84E+01, -4.21E+01, -4.57E+01, -4.96E+01, -5.06E+01, -5.05E+01, -4.98E+01, -4.88E+01, -4.84E+01, -4.67E+01,
                        -4.44E+01, -4.27E+01, -4.00E+01, -3.74E+01, -3.57E+01, -3.33E+01, -3.10E+01, -2.87E+01, -2.67E+01, -2.43E+01, -2.30E+01, -2.00E+01, -1.60E+01, -1.21E+01, -8.74E+00, -6.08E+00, -1.78E+00, 1.21E+00, 5.18E+00, 9.50E+00, 1.51E+01, 2.08E+01, 2.44E+01, 2.84E+01, 3.27E+01, 3.70E+01,
                        4.06E+01, 4.40E+01, 4.73E+01, 5.06E+01, 5.16E+01, 5.09E+01, 5.08E+01, 4.88E+01, 4.61E+01, 4.44E+01, 4.31E+01, 4.11E+01, 3.94E+01, 3.67E+01, 3.40E+01, 3.20E+01, 3.03E+01, 2.73E+01, 2.47E+01, 2.24E+01, 1.87E+01, 1.44E+01, 1.01E+01, 6.78E+00, 4.77E+00, -2.02E-01, -3.57E+01,
                        -6.18E+00, -9.82E+00, -1.31E+01, -1.78E+01, -2.24E+01, -2.44E+01, -2.94E+01, -3.34E+01, -3.54E+01, -3.83E+01, -4.10E+01, -4.53E+01, -4.73E+01, -4.99E+01, -5.09E+01, -4.99E+01, -4.88E+01, -4.84E+01, -4.74E+01, -4.54E+01, -4.27E+01, -4.10E+01, -3.84E+01, -3.67E+01, -3.37E+01,
                        -3.17E+01, -2.93E+01, -2.70E+01, -2.66E+01, -2.13E+01, -1.80E+01, -1.44E+01, -1.10E+01, -8.06E+00, -4.08E+00, -4.26E-01, 3.21E+00, 6.85E+00, 9.51E+00, 1.65E+01, 2.01E+01, 2.44E+01, 2.78E+01, 3.27E+01, 3.64E+01, 4.10E+01, 4.46E+01, 4.73E+01, 5.16E+01, 5.15E+01, 4.95E+01,
                        4.85E+01, 4.64E+01, 4.38E+01, 4.21E+01, 3.94E+01, 3.84E+01, 3.67E+01, 3.27E+01, 3.04E+01, 2.37E+01, 2.00E+01, 1.64E+01, 1.24E+01, 9.09E+00, 2.46E+00, -3.19E+00, -1.31E+01, -1.55E+01, -2.01E+01, -2.47E+01, -2.74E+01, -3.00E+01, -3.34E+01, -3.96E+01, -4.30E+01, -4.53E+01,
                        -4.83E+01, -5.06E+01, -4.88E+01, -4.88E+01, -4.61E+01, -4.34E+01, -4.10E+01, -3.80E+01, -3.40E+01, -3.13E+01, -2.97E+01, -2.70E+01, -2.60E+01, -2.37E+01, -2.17E+01, -1.97E+01, -1.64E+01, -1.31E+01, -9.41E+00, -5.10E+00, -2.44E+00, 8.74E-01, 4.54E+00, 8.84E+00, 1.48E+01,
                        1.84E+01, 2.18E+01, 2.61E+01, 3.37E+01, 3.96E+01, 4.39E+01, 4.69E+01, 4.92E+01, 5.25E+01, 5.62E+01, 6.05E+01, 6.48E+01, 6.80E+01, 7.27E+01, 7.66E+01, 7.79E+01, 7.72E+01, 7.62E+01, 7.55E+01, 7.38E+01, 7.31E+01, 7.18E+01, 6.98E+01, 6.84E+01, 6.64E+01, 6.54E+01, 6.37E+01,
                        6.17E+01, 5.91E+01, 5.61E+01, 5.34E+01, 5.11E+01, 4.81E+01, 4.44E+01, 4.08E+01, 3.81E+01, 3.25E+01, 2.95E+01, 2.46E+01, 2.03E+01, 1.56E+01, 1.10E+01, 5.39E+00, -8.83E-01, -4.86E+00, -7.52E+00, -1.15E+01, -1.64E+01, -2.01E+01, -2.31E+01, -2.74E+01, -2.97E+01, -3.43E+01,
                        -3.73E+01, -4.13E+01, -4.46E+01, -4.89E+01, -5.06E+01, -5.05E+01, -5.32E+01, -5.52E+01, -5.85E+01, -6.24E+01, -6.54E+01, -6.87E+01, -6.90E+01, -7.13E+01, -7.37E+01, -7.56E+01, -7.69E+01, -7.69E+01, -7.62E+01, -7.51E+01, -7.35E+01, -7.14E+01, -6.97E+01, -6.74E+01, -6.60E+01,
                        -6.37E+01, -6.04E+01, -5.77E+01, -5.53E+01, -5.30E+01, -4.80E+01, -4.57E+01, -4.34E+01, -3.81E+01, -3.25E+01, -2.75E+01, -2.22E+01, -1.70E+01, -1.23E+01, -5.39E+00, -9.73E-02, 5.54E+00, 1.21E+01, 1.78E+01, 2.08E+01, 2.97E+01, 3.60E+01, 4.16E+01, 4.69E+01, 5.22E+01, 5.68E+01,
                        6.11E+01, 6.64E+01, 7.10E+01, 7.39E+01, 7.72E+01, 7.69E+01, 7.51E+01, 7.25E+01, 7.05E+01, 6.91E+01, 6.64E+01, 6.38E+01, 6.04E+01, 5.81E+01, 5.57E+01, 5.20E+01, 5.07E+01, 4.80E+01, 4.44E+01, 4.11E+01, 3.78E+01, 3.28E+01, 2.85E+01, 2.42E+01, 1.96E+01, 1.63E+01, 1.33E+01,
                        8.33E+00, 5.33E+00, 3.73E-01, -7.55E+00, -1.28E+01, -1.71E+01, -2.47E+01, -3.00E+01, -3.53E+01, -4.09E+01, -4.52E+01, -4.92E+01, -5.38E+01, -5.91E+01, -6.30E+01, -6.64E+01, -6.93E+01, -7.26E+01, -7.63E+01, -7.55E+01, -7.52E+01, -7.35E+01, -7.18E+01, -6.94E+01, -6.84E+01,
                        -6.51E+01, -6.10E+01, -5.87E+01, -5.54E+01, -5.30E+01, -4.94E+01, -4.64E+01, -4.34E+01, -4.27E+01, -3.61E+01, -3.05E+01, -2.32E+01, -1.70E+01, -1.17E+01, -5.72E+00, -1.74E+00, 5.19E+00, 9.83E+00, 1.35E+01, 1.71E+01, 2.31E+01, 2.97E+01, 3.59E+01, 3.93E+01, 4.65E+01, 5.05E+01,
                        5.11E+01, 5.14E+01, 5.28E+01, 5.54E+01, 5.81E+01, 6.30E+01, 6.93E+01, 7.59E+01, 7.75E+01, 7.95E+01, 8.32E+01, 8.71E+01, 9.17E+01, 9.57E+01, 1.02E+02, 1.03E+02, 1.03E+02, 1.03E+02, 1.01E+02, 1.00E+02, 9.94E+01, 9.74E+01, 9.64E+01, 9.41E+01, 9.24E+01, 9.17E+01, 8.87E+01,
                        8.64E+01, 8.27E+01, 7.91E+01, 7.71E+01, 7.14E+01, 7.08E+01, 6.71E+01, 6.38E+01, 6.02E+01, 5.68E+01, 4.43E+01, 3.64E+01, 2.42E+01, 1.79E+01, 9.38E+00, 5.08E+00, -8.65E-01, -4.51E+00, -7.82E+00, -1.35E+01, -1.97E+01, -2.44E+01, -3.00E+01, -3.59E+01, -4.09E+01, -4.49E+01,
                        -4.82E+01, -5.41E+01, -6.20E+01, -6.67E+01, -7.19E+01, -7.62E+01, -7.85E+01, -8.15E+01, -8.61E+01, -9.24E+01, -9.77E+01, -1.02E+02, -1.02E+02, -1.02E+02, -1.01E+02, -9.95E+01, -9.74E+01, -9.48E+01, -9.31E+01, -9.01E+01, -8.67E+01, -8.47E+01, -8.14E+01, -7.71E+01, -7.44E+01,
                        -6.78E+01, -6.41E+01, -5.98E+01, -5.49E+01, -4.93E+01, -4.27E+01, -3.61E+01, -3.15E+01, -2.45E+01, -1.93E+01, -1.46E+01, -8.36E+00, -3.07E+00, 2.88E+00, 8.83E+00, 1.18E+01, 1.68E+01, 2.14E+01, 2.83E+01, 3.30E+01, 3.83E+01, 4.35E+01, 4.72E+01, 5.41E+01, 5.84E+01, 6.27E+01,
                        6.66E+01, 7.32E+01, 7.95E+01, 8.51E+01, 8.97E+01, 9.30E+01, 9.73E+01, 1.01E+02, 1.02E+02, 1.02E+02, 9.92E+01, 9.78E+01, 9.71E+01, 9.45E+01, 9.25E+01, 9.08E+01, 8.94E+01, 8.84E+01, 8.58E+01, 8.41E+01, 8.14E+01, 7.81E+01, 7.44E+01, 6.55E+01, 6.15E+01, 5.92E+01, 5.42E+01,
                        4.73E+01, 4.47E+01, 3.77E+01, 2.79E+01, 2.22E+01, 1.60E+01, 9.71E+00, 9.05E+00, 4.75E+00, -1.21E+00, -7.82E+00, -1.34E+01, -1.84E+01, -2.23E+01, -2.56E+01, -3.16E+01, -3.72E+01, -4.31E+01, -4.84E+01, -5.21E+01, -5.60E+01, -5.93E+01, -6.40E+01, -6.83E+01, -7.39E+01, -7.95E+01,
                        -8.71E+01, -9.43E+01, -1.03E+02, -1.01E+02, -1.01E+02, -9.94E+01, -9.77E+01, -9.57E+01, -9.17E+01, -8.87E+01, -8.60E+01, -8.27E+01, -7.90E+01, -7.50E+01, -7.07E+01, -6.61E+01, -6.15E+01, -5.81E+01, -5.19E+01, -4.82E+01, -4.36E+01, -3.74E+01, -3.04E+01, -2.35E+01, -1.69E+01,
                        -1.04E+01, -5.40E+00, -4.50E-01, 2.21E+00, 5.51E+00, 1.54E+01, 2.10E+01, 2.53E+01, 2.50E+01, 2.79E+01, 2.99E+01, 3.49E+01, 4.05E+01, 4.48E+01, 5.01E+01, 5.07E+01, 5.40E+01, 5.80E+01, 6.16E+01, 6.49E+01, 6.79E+01, 7.22E+01, 7.58E+01, 7.71E+01, 7.88E+01, 8.28E+01, 8.64E+01,
                        9.07E+01, 9.56E+01, 1.01E+02, 1.03E+02, 1.03E+02, 1.06E+02, 1.10E+02, 1.15E+02, 1.21E+02, 1.26E+02, 1.28E+02, 1.28E+02, 1.26E+02, 1.25E+02, 1.23E+02, 1.22E+02, 1.20E+02, 1.18E+02, 1.16E+02, 1.14E+02, 1.11E+02, 1.09E+02, 1.07E+02, 1.04E+02, 1.02E+02, 9.91E+01, 9.54E+01,
                        9.21E+01, 8.91E+01, 8.55E+01, 8.02E+01, 7.29E+01, 6.70E+01, 5.62E+01, 4.92E+01, 4.27E+01, 2.88E+01, 2.13E+01, 1.07E+01, 3.45E+00, -3.50E+00, -9.11E+00, -1.51E+01, -2.27E+01, -2.96E+01, -3.62E+01, -4.38E+01, -4.81E+01, -5.04E+01, -5.04E+01, -5.37E+01, -5.57E+01, -5.87E+01,
                        -6.23E+01, -6.63E+01, -7.02E+01, -7.42E+01, -7.65E+01, -7.68E+01, -7.81E+01, -8.08E+01, -8.54E+01, -8.94E+01, -9.40E+01, -9.89E+01, -1.02E+02, -9.91E+01, -9.61E+01, -9.41E+01, -9.21E+01, -8.94E+01, -8.67E+01, -8.44E+01, -8.17E+01, -7.87E+01, -7.57E+01, -7.21E+01, -6.81E+01,
                        -6.38E+01, -5.92E+01, -8.87E+01, -8.28E+01, -7.69E+01, -6.99E+01, -6.34E+01, -5.71E+01, -5.22E+01, -4.56E+01, -3.84E+01, -3.11E+01, -2.42E+01, -1.60E+01, -9.73E+00, -3.14E+00, 3.11E+00, 1.07E+01, 1.63E+01, 2.12E+01, 2.81E+01, 3.44E+01, 4.03E+01, 4.76E+01, 5.15E+01, 5.35E+01,
                        5.91E+01, 6.31E+01, 6.77E+01, 7.40E+01, 8.19E+01, 8.82E+01, 9.31E+01, 9.80E+01, 1.01E+02, 1.02E+02, 1.05E+02, 1.09E+02, 1.09E+02, 1.10E+02, 1.13E+02, 1.17E+02, 1.23E+02, 1.27E+02, 1.28E+02, 1.31E+02, 1.33E+02, 1.37E+02, 1.42E+02, 1.44E+02, 1.51E+02, 1.53E+02, 1.53E+02,
                        1.53E+02, 1.52E+02, 1.50E+02, 1.48E+02, 1.46E+02, 1.43E+02, 1.40E+02, 1.37E+02, 1.34E+02, 1.30E+02, 1.26E+02, 1.24E+02, 1.20E+02, 1.16E+02, 1.10E+02, 1.04E+02, 9.60E+01, 8.64E+01, 8.02E+01, 6.97E+01, 5.58E+01, 4.47E+01, 3.18E+01, 2.43E+01, 1.54E+01, 8.45E+00, -1.09E+00,
                        -1.16E+01, -2.02E+01, -2.74E+01, -3.83E+01, -4.52E+01, -5.05E+01, -5.21E+01, -5.35E+01, -5.68E+01, -6.07E+01, -6.73E+01, -7.46E+01, -8.05E+01, -8.61E+01, -9.20E+01, -9.63E+01, -1.01E+02, -1.02E+02, -1.04E+02, -1.09E+02, -1.11E+02, -1.12E+02, -1.13E+02, -1.16E+02, -1.22E+02,
                        -1.26E+02, -1.27E+02, -1.28E+02, -1.28E+02, -1.30E+02, -1.33E+02, -1.38E+02, -1.45E+02, -1.51E+02, -1.54E+02, -1.54E+02, -1.52E+02, -1.50E+02, -1.47E+02, -1.44E+02, -1.41E+02, -1.38E+02, -1.34E+02, -1.30E+02, -1.27E+02, -1.22E+02, -1.16E+02, -1.12E+02, -1.09E+02, -1.04E+02,
                        -9.79E+01, -9.13E+01, -8.47E+01, -7.82E+01, -7.16E+01, -6.30E+01, -5.61E+01, -4.92E+01, -4.10E+01, -3.34E+01, -1.66E+01, -7.44E+00, 1.28E-01, 6.71E+00, 1.26E+01, 1.76E+01, 2.35E+01, 2.97E+01, 3.57E+01, 4.13E+01, 4.75E+01, 5.51E+01, 6.33E+01, 6.92E+01, 7.52E+01, 1.01E+02,
                        9.10E+01, 1.08E+02, 1.16E+02, 1.24E+02, 1.32E+02, 1.38E+02, 1.45E+02, 1.51E+02, 1.54E+02, 1.55E+02, 1.55E+02, 1.53E+02, 1.52E+02, 1.49E+02, 1.47E+02, 1.44E+02, 1.42E+02, 1.39E+02, 1.35E+02, 1.29E+02, 1.24E+02, 1.18E+02, 1.08E+02, 9.79E+01, 8.91E+01, 7.72E+01, 6.18E+01,
                        5.62E+01, 4.73E+01, 3.61E+01, 2.69E+01, 1.57E+01, 6.86E+00, -3.76E-01, -7.94E+00, -1.58E+01, -2.21E+01, -3.13E+01, -3.89E+01, -4.74E+01, -5.46E+01, -6.06E+01, -6.62E+01, -7.14E+01, -7.74E+01, -8.33E+01, -8.92E+01, -9.71E+01, -1.03E+02, -1.12E+02, -1.16E+02, -1.16E+02,
                        -1.18E+02, -1.21E+02, -1.26E+02, -1.32E+02, -1.37E+02, -1.43E+02, -1.51E+02, -1.54E+02, -1.54E+02, -1.52E+02, -1.48E+02, -1.45E+02, -1.41E+02, -1.37E+02, -1.32E+02, -1.28E+02, -1.22E+02, -1.17E+02, -1.09E+02, -1.03E+02, -9.43E+01, -8.77E+01, -7.92E+01, -6.01E+01, -5.15E+01,
                        -4.46E+01, -3.54E+01, -2.79E+01, -2.03E+01, -1.47E+01, -9.46E+00, -2.23E+00, 5.67E+00, 1.52E+01, 2.28E+01, 2.97E+01, 3.82E+01, 4.71E+01, 5.50E+01, 6.45E+01, 7.37E+01, 8.13E+01, 8.59E+01, 9.05E+01, 9.78E+01, 1.05E+02, 1.12E+02, 1.19E+02, 1.25E+02, 1.30E+02, 1.36E+02, 1.38E+02,
                        1.37E+02, 1.38E+02, 1.38E+02, 1.40E+02, 1.44E+02, 1.47E+02, 1.50E+02, 1.54E+02, 1.57E+02, 1.55E+02, 1.52E+02, 1.48E+02, 1.44E+02, 1.40E+02, 1.34E+02, 1.24E+02, 1.15E+02, 1.05E+02, 9.17E+01, 7.66E+01, 6.44E+01, 4.86E+01, 3.91E+01, 2.86E+01, 1.77E+01, 7.87E+00, -6.79E-01,
                        -1.12E+01, -1.88E+01, -2.53E+01, -3.39E+01, -4.28E+01, -5.23E+01, -5.99E+01, -6.74E+01, -7.53E+01, -8.48E+01, -9.14E+01, -1.01E+02, -1.11E+02, -1.21E+02, -1.31E+02, -1.42E+02, -1.48E+02, -1.52E+02, -1.55E+02, -1.53E+02, -1.49E+02, -1.43E+02, -1.36E+02, -1.31E+02, -1.27E+02,
                        -1.22E+02]

    # displacement_step = [0.03896, 0.35013, 0.58328, 0.81715, 1.05071, 1.44133, 2.06725, 2.92427, 0.19562, 0.04141, -0.34748, -0.5023, -0.89211, -1.2039, -1.59462, -1.28355, -1.12924, -0.81847, -0.5073, -0.03927, 0.42785, 0.89507, 1.20665, 1.59656, 1.98708, 1.67621, 1.13128, 0.82041, 0.19715,
    # -0.3482, -0.738, -0.50159, -1.2041, -1.67244, -2.21901, -0.3533, -2.76537, -2.76721, -2.45665, -1.83338, -1.28783, -0.74208, -0.7429, 0.50597, 1.20696, 1.59615, 2.29907, 2.61157, 2.37913, 1.36535, 0.97717, 0.27588, -0.19042, -0.73647, -1.67295, -2.68755, -2.68898, -2.37842, -1.44347, -0.89864, 2.14445, 1.90957, 3.39251, 4.09533, 4.72094, 4.33215, 3.62984, 2.84962, 2.22543, 1.7576, 0.11963, -0.66018, -1.12669, -1.90681, -2.92182, -3.31163, -3.85871, -3.93867, -3.62852, -2.77108, -1.83563, -1.21185, 0.03692, 1.36423, 3.6277, 4.40803, 5.50178, 5.8924, 6.20571, 5.50412, 4.64587, 3.94397, 3.3201, 3.08705, 2.30621, 1.60411, 1.05795, 0.43346, -0.50302, -1.12638, -2.06296, -2.99995, -3.62434, -4.32756, -4.87474, -4.79876, -4.64536, -4.33398, -3.71021, 3.31714, -1.91487, 0.89588, 4.01873, 3.94132, 4.72196, 5.5028, 5.97154, 4.95755, 4.49054, 3.55447, 2.69653, 2.07255, 1.13668, 0.27803, -0.97064, -2.29795, -3.23483, -4.17233, -4.79753, -4.95378, -4.79998, -4.64587, -4.02251, -3.24177, -2.22717, -1.05621, 0.27089, 3.08215, 5.5028, 5.97144, 6.43989, 7.29966, 7.6141, 6.91231, 5.97644, 5.35246, 4.41497, 3.2433, 2.30652, 1.29253, -0.58777, -1.59707, -2.53344, -3.31337, -4.25086, -5.0317, -5.42192, -6.20327, -6.28313, -5.89505, -5.27128, -4.49105, -2.77384, -1.60319, -0.66671, 0.89486, 2.14415, 3.62862, 5.03435, 6.28476, 6.90955, 7.3784, 7.30232, 6.44437, 5.19519, 4.41497, 3.24371, 2.15027, 1.21369, 0.66855, -0.65876, -1.90824, -3.00168, -3.86105, -4.6422, -5.34542, -5.8922, -6.36074, -6.05089, -5.42732, -4.96, -4.02312, -3.00821, -2.22757, -1.36912, -0.19817, 1.44194, 2.53538, 3.86309, 5.19132, 6.36278, 7.45653, 8.08152, 8.86328, 9.17588, 9.17833, 7.69467, 6.68038, 5.97828, 5.11931, 4.18192, 3.40098, 2.77649, 1.99514, 1.05795, -0.34799, -1.28528, -2.45624, -3.6276, -4.79876, -5.50137, -6.20439, -6.75116, -7.14148, -7.61033, -8.15781, -8.15914, -7.9267, -7.14688, -5.81968, -4.49248, -2.85216, -1.44663, -0.11953, 1.91089, 4.02036, 5.42671, 9.41138, 8.08285, 8.78597, 9.25503, 8.86583, 8.00728, 7.46112, 6.36798, 5.74431, 4.49452, 3.32316, 1.99504, 0.82347, -0.19154, -1.44092, -2.61269, -3.62801, -4.40895, -5.18958, -6.04896, -6.59573, -7.37728, -8.15894, -7.77035, -7.06815, -6.13147, -4.88218, -3.55447, -2.46175, -1.44704, -0.19807, 1.52007, 4.56673, 5.81693, 6.75473, 8.23971, 9.95815, 10.4271, 10.7396, 10.81956, 10.82119, 10.19671, 8.94742, 8.16669, 6.99502, 5.82335, 4.96408, 3.47961, 2.22951, 0.66702, -0.19154, -1.51915, -3.23759, -4.40895, -5.34624, -6.28333, -6.90812, -7.92415, -8.62728, -9.40893, -9.95631, -9.87952, -9.4126, -8.78913, -7.53975, -6.21204, -4.88382, -3.71205, -2.69724, -1.36912, 0.81776, 2.77037, 4.64506, 5.6617, 0.50546, 8.39657, 9.56855, 10.50625, 11.05322, 10.35163, 9.96233, 9.18159, 8.32273, 6.99451, 6.13606, 4.96429, 3.87023, 3.01076, 2.07398, 0.74545, -0.19164, -1.44143, -3.00372, -4.25392, -5.89454, -6.67538, -7.53475, -8.15955, -8.70652, -9.33172, -9.8789, -9.80251, -9.10072, -8.24257, -6.68058, -5.35226, -3.94683, -2.85349, -1.68172, 0.2715, 2.45807, 4.09818, 7.14617, 8.47419, 10.42782, 11.52166, 12.61653, 12.69639, 12.15084, 11.37072, 0.98013, 8.87113, 7.30884, 6.13697, 4.49605, 2.93315, 1.76127, 0.51199, -2.06653, -3.62903, -5.1134, -6.28506, -7.30048, -8.316, -9.01882, -9.95662, -10.73838, -11.20753, -11.13104, -10.97612, -10.27422, -9.41576, -8.16597, -7.15045, -6.05701, -4.57234, -3.1663, -1.44755, 3.86462, 7.14688, 8.55343, 9.72541, 10.89748, 11.83549, 12.4609, 12.7737, 12.697, 12.07343, 11.2928, 10.43404, 9.26227, 8.16822, 6.29281, 4.9649, 3.55814, 1.99544, -0.03488, -1.83236, -3.47257, -5.26965, -6.6762, -7.76974, -8.70744, -9.72347, -10.7396, -11.20845, -10.97642, -10.43016, -9.25941, -8.47857, -7.15035, -6.13473, -5.11931, -3.79089, -2.30621, 1.13087, 2.53681, 4.48993, 6.05263, 7.85001, 9.02218, 10.27228, 11.36644, 12.30434, 13.08589, 14.024, 14.57159, 14.88552, 14.73049, 14.26266, -2.22309, 12.31005, 11.37276, 10.35734, 9.34172, 8.24787, 6.76299, 5.90352, 4.10604, 3.16854, 1.91844, -1.36341, -3.31663, -5.50371, -7.37932, -8.47286, -10.03607, -10.89575, -11.28627, -12.06782, -12.77166, -13.00756, -12.61867, -11.91678, -10.90228, -9.7304, -8.55853, 4.56867, -5.98042, -4.49574, -3.32397, -1.99555, -0.43224, 5.03721, 9.33519, 11.5234, 13.71211, 14.41565, 14.88501, 14.96435, 14.49663, 14.10661, 13.404, 12.46661, 11.13808, 10.20099, 9.2637, 8.09142, 6.45008, 5.66904, 4.49676, 2.85614, 1.91875, 0.1998, -1.05071, -3.94255, -6.83275, -8.31743, -9.72459, -10.9752, -11.67822, -12.45988, -13.16361, -12.77431, -12.38481, -11.13594, -9.72969, -8.32385, -7.38666, -5.90229, -4.26147, 7.85133, -1.5268, 0.42663, 2.38056, 8.71019, 11.99306, 13.39972, 14.49408, 15.43208, 16.05759, 16.52715, 16.21619, 15.98293, 15.12417, 13.9522, 13.0147, 11.60887, 10.437, 8.63992, 7.85857, 6.45161, 5.04506, 3.40342, 1.99677, 1.05927, -0.58104, -2.61279, -5.34777, -7.37993, -8.55211, -9.80292, -10.81864, -12.38216, -13.78912, -14.41473, -14.41605, -14.57414, -13.63756, -12.31005, -10.9037, -9.41933, -7.93507, -6.21622, -4.73124, -3.0898, -1.5269, 0.34962, 1.52098, 3.08399, 5.2724, 7.46071, 9.80537, 12.15044, 13.94792, 15.1203, 15.98028, 16.37121, 16.37254, 15.51439, 14.2649, 13.09324, 11.68699, 9.65514, 7.38901, 5.82672, 3.09082, 0.8248, -1.12853, -3.55131, -5.03619, -6.99012, -8.55323, -10.11695, -11.44538, -12.4612, -13.0862, -13.86806, -14.49367, -14.72988, -14.1061, -13.09109, -12.07598, -10.90381, -9.57569, -8.79495, -7.23194, -5.90362, -4.41864, -3.0898, -1.91712, -0.19745, 1.13118, 2.85012, 4.80375, 6.5227, 8.16403, 9.72714, 11.52503, 13.63542, 15.1205, 16.05851, 16.76214, 17.46567, 17.77848, 18.17032, 18.17175, 17.62569, 16.84496, 16.14204, 15.36079, 14.18892, 13.09497, 12.2358, 11.06342, 9.81332, 8.25042, 6.60909, 4.57672, 3.09164, 1.4502, 0.04386, -1.3629, -2.9255, -4.41048, -6.52097, -8.16281, -9.64789, -10.82017, -12.38318, -13.55566, -14.49367, -15.1972, -16.21404, -16.21568, -15.98263, -15.28042, -14.10876, -12.85866, -11.53074, -10.35877, -9.03024, -7.62359, -5.82641, -3.9504, -2.54344, -1.68397, -0.19858, 1.52078, 2.92723, 5.81968, 6.60123, 8.32079, 10.58764, 12.54218, 14.80933, 16.52868, 17.38857, 17.85752, 17.93738, 17.07913, 16.2988, 14.89245, 13.79871, 12.15768, 10.36081, 8.64104, 6.9221, 4.96786, 3.24799, 1.21562, -0.34728, -2.53579, -4.17682, -5.81784, -7.77198, -9.41342, -11.05547, -12.30597, -13.40013, -14.65084, -15.43269, -16.05861, -15.98212, -15.35794, -14.65563, -13.17105, -11.76501, -10.12429, -8.79587, -7.07641, -4.73175, -2.93437, -0.98064, 1.44245, 3.86544, 6.75769, 8.86818, 10.66607, 12.3077, 17.54543, 18.79614, 19.5781, 19.89111, 20.20524, 19.89356, 18.87814, 17.55073, 16.53521, 14.73783, 13.33128, 11.5338, 9.81414, 8.17311, 6.21928, 4.49962, 2.85788, 1.13821, -0.26875, -1.83134, -4.7242, -6.52178, -8.39708, -10.586, -13.08752, -14.72906, -16.13643, -17.30932, -17.54502, -17.31258, -17.0011, -15.67309, -14.65787, -13.09538, -11.84508, -10.20374, -8.48459, -6.92159, -4.88943, -3.63882, -1.99697, -0.74667, 0.97299, 3.1616, 5.2722, 7.14821, 8.6335, 10.04046, 11.60387, 16.29441, 18.32698, 19.8905, 20.28296, 19.81564, 19.19084, 18.01917, 16.76918, 15.98824, 14.89419, 13.48733, 11.29922, 9.57987, 7.07896, 5.20294, 3.87462, 1.92018, 0.27854, -1.9882, -5.66221, -7.53812, -9.023, -10.42975, -11.99347, -14.1827, -15.35518, -16.68453, -17.62325, -17.54706, -16.84506, -15.59496, -14.03257, -12.70486, -11.37633, -9.65677, -6.29628, -4.73307, -3.24799, -1.68488, 1.28539, 4.17784, 7.46112, 9.96254, 11.60377, 13.47998, 15.35651, 17.07637, 18.56166, 19.81268, 20.51631, 20.98557, 21.53316, 22.2376, 21.92674, 20.99046, 19.66224, 18.64672, 17.24038, 15.91174, 14.19208, 12.62969, 11.22273, 9.26859, 7.93986, 6.37645, 5.12594, 3.09327, 1.29518, -1.0502, -3.39537, -5.50565, -7.61614, -11.05536, -13.08783, -14.57353, -16.2937, -17.31014, -18.48303, -19.50028, -19.11108, -18.48701, -17.54981, -16.37835, -14.81545, -13.56555, -12.00306, -10.51798, -8.25124, -6.45365, -4.49931, -3.01392, -0.1996, 4.49095, 6.36706, 8.24338, 9.80659, 11.13563, 12.62112, 14.10661, 15.43575, 16.53011, 17.7028, 18.64101, 19.34444, 20.1264, 21.06482, 21.84698, 22.16101, 21.30256, 20.83503, 18.95953, 17.70974, 16.61579, 14.89612, 13.33342, 10.91023, 9.73754, 8.17423, 5.36001, 3.64055, 1.45153, -1.0502, -3.08297, -4.7243, -6.67875, -8.78944, -10.58753, -11.9948, -13.40227, -15.20016, -16.21649, -18.01459, -19.57871, -19.34658, -18.56635, -17.70698, -16.61324, -15.44116, -14.03512, -12.70659, -10.59641, -8.87685, -7.15698, -5.90627, -3.95183, -0.35533, 4.56928, 6.4456, 7.85266, 9.25941, 10.66658, 12.30832, 14.18474, 15.67043, 17.0778, 18.40715, 19.42338, 20.67439, 22.00405, 22.16193, 20.99057, 19.35005, 17.86598, 16.6936, 15.52153, 13.95873, 11.92647, 10.36315, 9.19057, 6.61113, 3.71837, 0.98156, -1.0506, -3.23942, -5.74135, -7.93007, -9.96264, -12.07384, -12.93393, -14.18443, -15.5919, -16.60793, -17.38969, -18.3281, -19.57994, -18.87814, -17.4721, -16.22271, -14.50387, -12.70618, -11.22181, -8.79872, -6.6099]
    # displacement_step = generate_cyclic_load(duration=7, sampling_rate=100, max_displacement=86)
    # displacement_step = generate_cyclic_loading(num_cycles=10, initial_displacement=5, max_displacement=86, num_points=50, repetition_cycles=2)
    # displacement_step = generate_cyclic_loading_with_repetition(num_cycles=12, max_displacement=21, num_points=36, repetition_cycles=3)
    displacement_step = generate_cyclic_loading_exponential(num_cycles=7, initial_displacement=20, max_displacement=156, num_points=50, repetition_cycles=2)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Aejaz_SW1():
    # https://www.sciencedirect.com/science/article/pii/S1350630713002768
    global name
    name = 'Aejaz_SW1'
    # Wall Geometry
    tw = 102 * mm  # Wall thickness
    hw = 3.600 * m  # Wall height
    lw = 1.25 * m  # Wall length
    lbe = 125 * mm  # Boundary element length
    lweb = lw - (2 * lbe)
    tb = tw  # Wall thickness

    # Material proprieties
    fc = 35 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 540 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 540 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fx = fyw

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    YbeNum = 5  # BE long reinforcement diameter (mm)
    YbeDiam = 10  # BE long reinforcement diameter (mm)
    YwebNum = 4  # Web long reinforcement diameter (mm)
    YwebDiam = 8  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary        0.0188496
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web             0.00376992
    print('rouYb', rouYb)
    print('rouYw', rouYw)
    rouXb = 0.0188496
    rouXw = 0.00376992

    loadF = 0.105

    # displacement_step = generate_cyclic_load(duration=7, sampling_rate=100, max_displacement=86)
    displacement_step = generate_cyclic_loading(num_cycles=7, initial_displacement=10, max_displacement=105, num_points=100, repetition_cycles=1)
    displacement_step = generate_cyclic_loading_linear(num_cycles=7, max_displacement=100, num_points=50, repetition_cycles=1)
    # displacement_step = generate_cyclic_loading_exponential(num_cycles=6, initial_displacement=8, max_displacement=105, num_points=50, repetition_cycles=2)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Alarcon_W1():
    # http://dx.doi.org/10.1016/j.engstruct.2014.04.047
    global name
    name = 'Alarcon_W1'

    # Wall Geometry
    tw = 100 * mm  # Wall thickness
    hw = 1.6 * m  # Wall height
    lw = 0.7 * m  # Wall length
    lbe = 70 * mm  # Boundary element length
    lweb = lw - (2 * lbe)
    tb = tw  # Wall thickness

    # Material proprieties
    fc = 27.0 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 469 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 445 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fx = fyw

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    YbeNum = 4  # BE long reinforcement diameter (mm)
    YbeDiam = 10  # BE long reinforcement diameter (mm)
    YwebNum = 6  # Web long reinforcement diameter (mm)
    YwebDiam = 8  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary        0.0188496
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web             0.00376992
    print('rouYb', rouYb)
    print('rouYw', rouYw)

    loadF = 0.17

    # displacement_step = generate_cyclic_load(duration=7, sampling_rate=100, max_displacement=86)
    displacement_step = generate_cyclic_loading(num_cycles=6, initial_displacement=2, max_displacement=39, num_points=50, repetition_cycles=2)
    # displacement_step = generate_cyclic_loading_with_repetition(num_cycles=6, max_displacement=32, num_points=37, repetition_cycles=2)
    # displacement_step = generate_cyclic_loading_exponential(num_cycles=6, initial_displacement=4, max_displacement=37, num_points=50, repetition_cycles=2)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Farhad_RWB():
    global name
    name = 'Farhad_RWB'
    # Wall Geometry
    tw = 125 * mm  # Wall thickness
    hw = 5.0 * m  # Wall height
    lw = 2.0 * m  # Wall length
    lbe = 350 * mm  # Boundary element length
    lweb = lw - (2 * lbe)
    tb = tw  # Wall thickness

    # Material proprieties
    fc = 41.3 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 334 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 330 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fx = fyw

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    YbeNum = 10  # BE long reinforcement diameter (mm)
    YbeDiam = 12  # BE long reinforcement diameter (mm)
    YwebNum = 12  # Web long reinforcement diameter (mm)
    YwebDiam = 10  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary        0.026
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web             0.0059
    print('rouYb', rouYb)
    print('rouYw', rouYw)

    loadF = 0.042 / 0.85

    # displacement_step = generate_cyclic_load(duration=7, sampling_rate=100, max_displacement=86)
    displacement_step = generate_cyclic_loading(num_cycles=6, initial_displacement=8, max_displacement=42, num_points=50, repetition_cycles=2)
    # displacement_step = generate_cyclic_loading_with_repetition(num_cycles=6, max_displacement=32, num_points=37, repetition_cycles=2)
    # displacement_step = generate_cyclic_loading_exponential(num_cycles=6, initial_displacement=2, max_displacement=40, num_points=50, repetition_cycles=2)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Baek_NS2L():
    # fTESTS ON SLENDER DUCTILE STRUCTURAL WALLS
    # DESIGNED ACCORDING TO NEW ZEALAND STANDARD
    global name
    name = 'Baek_NS2L'
    # Wall Geometry
    #                            (tw,    hw,     lw,    lbe,   fc,   fyb,  fyw,   rouYb,  rouYw, loadF)

    # 102.0, 4572.0, 1905.0, 140.0, 45.6, 463.7, 463.7, 0.0435, 0.0031, 0.08
    tw = 200 * mm  # Wall thickness
    hw = 3.0 * m  # Wall height
    lw = 1.5 * m  # Wall length
    lbe = 300 * mm  # Boundary element length
    lweb = lw - (2 * lbe)
    tb = tw  # Wall thickness

    # Material proprieties
    fc = 36.5 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 617 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 470 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fx = fyw

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    YbeNum = 6  # BE long reinforcement diameter (mm)
    YbeDiam = 36  # BE long reinforcement diameter (mm)
    YwebNum = 6  # Web long reinforcement diameter (mm)
    YwebDiam = 16  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary        0.026
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web             0.0059
    print('rouYb', rouYb)
    print('rouYw', rouYw)

    loadF = 0.07 / 0.85

    # displacement_step = generate_cyclic_load(duration=7, sampling_rate=100, max_displacement=86)
    displacement_step = generate_cyclic_loading(num_cycles=6, initial_displacement=8, max_displacement=60, num_points=50, repetition_cycles=2)
    # displacement_step = generate_cyclic_loading_with_repetition(num_cycles=6, max_displacement=32, num_points=37, repetition_cycles=2)
    #displacement_step = generate_cyclic_loading_exponential(num_cycles=6, initial_displacement=2, max_displacement=40, num_points=50, repetition_cycles=2)

    # displacement_step = generate_cyclic_load(duration=24, sampling_rate=50, max_displacement=50)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Hube_W6():
    global name
    name = 'Hube_W6'
    # Wall Geometry
    tw = 100 * mm  # Wall thickness
    hw = 1.6 * m  # Wall height
    lw = 0.7 * m  # Wall length
    lbe = 70 * mm  # Boundary element length
    lweb = lw - (2 * lbe)
    tb = tw  # Wall thickness

    # Material proprieties
    fc = 27.5 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 470 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 469 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fx = fyw

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    YbeNum = 4  # BE long reinforcement diameter (mm)
    YbeDiam = 10  # BE long reinforcement diameter (mm)
    YwebNum = 6  # Web long reinforcement diameter (mm)
    YwebDiam = 8  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary        0.026
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web             0.0059
    print('rouYb', rouYb)
    print('rouYw', rouYw)

    loadF = 0.18

    # displacement_step = generate_cyclic_load(duration=7, sampling_rate=100, max_displacement=86)
    displacement_step = generate_cyclic_loading(num_cycles=6, initial_displacement=8, max_displacement=60, num_points=50, repetition_cycles=2)
    # displacement_step = generate_cyclic_loading_with_repetition(num_cycles=6, max_displacement=32, num_points=37, repetition_cycles=2)
    # displacement_step = generate_cyclic_loading_exponential(num_cycles=6, initial_displacement=2, max_displacement=40, num_points=50, repetition_cycles=2)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def AR2_8():
    # TESTS ON SLENDER DUCTILE STRUCTURAL WALLS DESIGNED ACCORDING TO NEW ZEALAND STANDARD
    global name
    name = 'AR2_8'
    # Wall Geometry
    # 102.0, 4572.0, 1905.0, 140.0, 45.6, 463.7, 463.7, 0.0435, 0.0031, 0.08
    tw = 304 * mm  # Wall thickness
    hw = 4.87 * m  # Wall height
    lw = 2.43 * m  # Wall length
    lbe = 450 * mm  # Boundary element length
    lweb = lw - (2 * lbe)
    tb = tw  # Wall thickness

    # Material proprieties
    fc = 41.36 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 503.94 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 503.94 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fx = fyw

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    YbeNum = 9  # BE long reinforcement diameter (mm)
    YbeDiam = 19.1  # BE long reinforcement diameter (mm)
    YwebNum = 14  # Web long reinforcement diameter (mm)
    YwebDiam = 19  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary        0.026
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web             0.0059
    print('rouYb', rouYb)
    print('rouYw', rouYw)

    loadF = 0.080 / 0.85

    # displacement_step = generate_cyclic_load(duration=7, sampling_rate=100, max_displacement=86)
    displacement_step = generate_cyclic_loading(num_cycles=6, initial_displacement=20, max_displacement=140, num_points=50, repetition_cycles=2)
    # displacement_step = generate_cyclic_loading_with_repetition(num_cycles=6, max_displacement=32, num_points=37, repetition_cycles=2)
    #displacement_step = generate_cyclic_loading_exponential(num_cycles=6, initial_displacement=2, max_displacement=40, num_points=50, repetition_cycles=2)

    # displacement_step = generate_cyclic_load(duration=24, sampling_rate=50, max_displacement=50)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Mosoarca_SW1():
    # https://www.sciencedirect.com/science/article/pii/S1350630713001908
    global name
    name = 'Mosoarca_SW1'
    # Wall Geometry
    tw = 80 * mm  # Wall thickness
    hw = 2.60 * m  # Wall height
    lw = 1.25 * m  # Wall length
    lbe = 100 * mm  # Boundary element length
    lweb = lw - (2 * lbe)
    tb = tw  # Wall thickness

    # Material proprieties
    fc = 50 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 400 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 400 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fx = fyw

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    YbeNum = 6  # BE long reinforcement diameter (mm)
    YbeDiam = 4  # BE long reinforcement diameter (mm)
    YwebNum = 20  # Web long reinforcement diameter (mm)
    YwebDiam = 7  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary        0.026
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web             0.0059
    rouYb = 0.0090
    rouYw = 0.0090
    print('rouYb', rouYb)
    print('rouYw', rouYw)
    rouXb = 0.0090
    rouXw = 0.0090
    loadF = 60 / (0.85 * tw * lw * fc) * 1000

    displacement_step = generate_cyclic_loading(num_cycles=7, initial_displacement=2, max_displacement=27, num_points=50, repetition_cycles=2)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Altin_S1():
    # https://www.sciencedirect.com/science/article/pii/S1359836812003344
    global name
    name = 'Altin_S1'
    # Wall Geometry
    tw = 100 * mm  # Wall thickness
    hw = 1.50 * m  # Wall height
    lw = 1.00 * m  # Wall length
    lbe = 10 * mm  # Boundary element length
    lweb = lw - (2 * lbe)
    tb = tw  # Wall thickness

    # Material proprieties
    fc = 15.5 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 425 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 320 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fx = fyw
    fx = fyw

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    YbeNum = 5  # BE long reinforcement diameter (mm)
    YbeDiam = 10  # BE long reinforcement diameter (mm)
    YwebNum = 4  # Web long reinforcement diameter (mm)
    YwebDiam = 6  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary        0.026
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web             0.0059
    rouYb = 0.0000
    rouYw = 0.0182
    print('rouYb', rouYb)
    print('rouYw', rouYw)
    loadF = 0.005

    displacement_step = generate_cyclic_loading(num_cycles=7, initial_displacement=2, max_displacement=12, num_points=50, repetition_cycles=2)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Rao_1():
    # https://sci-hub.hkvisa.net/10.1061/(asce)cf.1943-5509.0000724
    global name
    name = 'Rao_1'
    # Wall Geometry
    tw = 200 * mm  # Wall thickness
    hw = 3.25 * m  # Wall height
    lw = 1.56 * m  # Wall length
    lbe = 200 * mm  # Boundary element length
    lweb = lw - (2 * lbe)
    tb = tw  # Wall thickness

    # Material proprieties
    fc = 30 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 415 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 415 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fx = fyw

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    YbeNum = 4  # BE long reinforcement diameter (mm)
    YbeDiam = 10  # BE long reinforcement diameter (mm)
    YwebNum = 8  # Web long reinforcement diameter (mm)
    YwebDiam = 10  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary        0.026
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web             0.0059
    # rouYb = 0.0000
    # rouYw = 0.0182
    print('rouYb', rouYb)
    print('rouYw', rouYw)
    loadF = 0.020

    displacement_step = generate_cyclic_loading(num_cycles=7, initial_displacement=2, max_displacement=70, num_points=100, repetition_cycles=2)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Bismarck():
    # https://sci-hub.st/10.1061/(asce)0733-9445(2004)130:4(618)
    global name
    name = 'Bismarck'
    # Wall Geometry
    # 102.0, 4572.0, 1905.0, 140.0, 45.6, 463.7, 463.7, 0.0435, 0.0031, 0.08
    tw = 203 * mm  # Wall thickness
    hw = 2.90 * m  # Wall height
    lw = 3.048 * m  # Wall length
    lbe = 380 * mm  # Boundary element length
    lweb = lw - (2 * lbe)
    tb = tw  # Wall thickness

    # Material proprieties
    fc = 24.8 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 462.7 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 462.9 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fx = fyw

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    YbeNum = 8  # BE long reinforcement diameter (mm)
    YbeDiam = 11.5  # BE long reinforcement diameter (mm)
    YwebNum = 8  # Web long reinforcement diameter (mm)
    YwebDiam = 8.5  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary        0.0188496
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web             0.00376992
    print('rouYb', rouYb)
    print('rouYw', rouYw)
    rouYb = 0.0067
    rouYw = 0.0067

    loadF = 0.001
    displacement_step = [3.29E-01, 7.47E-01, 2.10E+00, 2.79E+00, 3.16E+00, 4.84E+00, 6.85E+00, 6.89E+00, 7.91E+00, 8.60E+00, 9.28E+00, 1.06E+01, 1.23E+01, 1.33E+01, 1.46E+01, 1.49E+01, 1.32E+01, 1.22E+01, 1.15E+01, 1.05E+01, 8.13E+00, 5.46E+00, 4.75E+00, 3.73E+00, 9.71E-01, 1.34E+00, 6.10E-01,
                        -1.08E+00, -2.44E+00, -3.79E+00, -4.17E+00, -5.18E+00, -5.89E+00, -8.22E+00, -1.02E+01, -1.09E+01, -1.26E+01, -1.36E+01, -1.43E+01, -1.56E+01, -1.35E+01, -1.19E+01, -9.84E+00, -8.48E+00, -6.80E+00, -6.11E+00, -4.76E+00, -2.74E+00, -1.72E+00, -6.99E-01, 3.18E-01, 2.04E+00,
                        3.74E+00, 5.10E+00, 6.12E+00, 7.15E+00, 7.84E+00, 1.02E+01, 1.16E+01, 1.26E+01, 1.33E+01, 1.49E+01, 1.35E+01, 1.22E+01, 7.82E+00, 5.13E+00, 5.73E+00, 3.06E+00, 2.04E+00, -1.05E+00, -3.41E+00, -3.12E+00, -6.14E+00, -8.50E+00, -8.53E+00, -9.55E+00, -1.06E+01, -1.22E+01,
                        -1.32E+01, -1.52E+01, -1.35E+01, -1.12E+01, -9.16E+00, -7.13E+00, -5.43E+00, -4.39E+00, -2.72E+00, -1.05E+00, -2.00E-02, 6.65E-01, 1.31E+00, 1.68E+00, 3.04E+00, 4.74E+00, 7.11E+00, 9.15E+00, 1.12E+01, 1.22E+01, 1.36E+01, 1.49E+01, 1.66E+01, 1.96E+01, 2.13E+01, 2.36E+01,
                        2.53E+01, 2.69E+01, 2.65E+01, 2.35E+01, 2.18E+01, 2.14E+01, 2.01E+01, 1.91E+01, 1.87E+01, 1.77E+01, 1.54E+01, 1.37E+01, 1.04E+01, 8.37E+00, 7.69E+00, 5.37E+00, 3.71E+00, 2.36E+00, 3.52E-01, 6.43E-01, 2.47E-01, -2.41E+00, -2.78E+00, -4.13E+00, -4.83E+00, -4.20E+00, -5.54E+00,
                        -7.55E+00, -8.24E+00, -9.59E+00, -1.16E+01, -1.29E+01, -1.46E+01, -1.46E+01, -1.39E+01, -1.22E+01, -1.05E+01, -8.81E+00, -7.78E+00, -6.77E+00, -5.73E+00, -4.06E+00, -2.05E+00, -1.36E+00, 3.25E-01, 3.00E+00, 4.06E+00, 5.77E+00, 9.46E+00, 1.18E+01, 1.42E+01, 1.55E+01, 1.79E+01,
                        1.99E+01, 2.22E+01, 2.32E+01, 2.42E+01, 2.79E+01, 2.75E+01, -7.43E+00, 2.42E+01, 2.31E+01, 2.14E+01, 2.08E+01, 1.94E+01, 1.84E+01, 1.77E+01, 1.40E+01, 1.07E+01, 7.68E+00, 5.69E+00, 3.68E+00, 2.65E+00, 3.03E-01, -3.04E+00, -4.74E+00, -4.46E+00, -6.15E+00, -7.49E+00, -7.53E+00,
                        -8.89E+00, -9.58E+00, -1.12E+01, -1.49E+01, -1.32E+01, -1.12E+01, -8.14E+00, -3.71E+00, -3.43E-01, 6.57E-01, -5.92E+00, -3.58E+00, -9.13E-01, 3.07E+00, 4.77E+00, 6.80E+00, 8.16E+00, 9.84E+00, 1.28E+01, 1.52E+01, 1.72E+01, 1.99E+01, 2.09E+01, 2.29E+01, 2.49E+01, 2.66E+01,
                        3.09E+01, 3.42E+01, 3.91E+01, 4.21E+01, 4.50E+01, 4.80E+01, 5.06E+01, 5.19E+01, 5.09E+01, 5.12E+01, 5.01E+01, 4.85E+01, 4.64E+01, 4.41E+01, 4.24E+01, 4.11E+01, 3.90E+01, 3.80E+01, 3.64E+01, 3.40E+01, 3.13E+01, 2.90E+01, 2.70E+01, 2.43E+01, 2.20E+01, 1.87E+01, 1.50E+01,
                        1.10E+01, 8.02E+00, 5.69E+00, 2.04E+00, -9.54E-01, -5.92E+00, -8.59E+00, -1.16E+01, -1.46E+01, -1.89E+01, -2.16E+01, -2.39E+01, -2.85E+01, -3.22E+01, -3.48E+01, -3.84E+01, -4.21E+01, -4.57E+01, -4.96E+01, -5.06E+01, -5.05E+01, -4.98E+01, -4.88E+01, -4.84E+01, -4.67E+01,
                        -4.44E+01, -4.27E+01, -4.00E+01, -3.74E+01, -3.57E+01, -3.33E+01, -3.10E+01, -2.87E+01, -2.67E+01, -2.43E+01, -2.30E+01, -2.00E+01, -1.60E+01, -1.21E+01, -8.74E+00, -6.08E+00, -1.78E+00, 1.21E+00, 5.18E+00, 9.50E+00, 1.51E+01, 2.08E+01, 2.44E+01, 2.84E+01, 3.27E+01, 3.70E+01,
                        4.06E+01, 4.40E+01, 4.73E+01, 5.06E+01, 5.16E+01, 5.09E+01, 5.08E+01, 4.88E+01, 4.61E+01, 4.44E+01, 4.31E+01, 4.11E+01, 3.94E+01, 3.67E+01, 3.40E+01, 3.20E+01, 3.03E+01, 2.73E+01, 2.47E+01, 2.24E+01, 1.87E+01, 1.44E+01, 1.01E+01, 6.78E+00, 4.77E+00, -2.02E-01, -3.57E+01,
                        -6.18E+00, -9.82E+00, -1.31E+01, -1.78E+01, -2.24E+01, -2.44E+01, -2.94E+01, -3.34E+01, -3.54E+01, -3.83E+01, -4.10E+01, -4.53E+01, -4.73E+01, -4.99E+01, -5.09E+01, -4.99E+01, -4.88E+01, -4.84E+01, -4.74E+01, -4.54E+01, -4.27E+01, -4.10E+01, -3.84E+01, -3.67E+01, -3.37E+01,
                        -3.17E+01, -2.93E+01, -2.70E+01, -2.66E+01, -2.13E+01, -1.80E+01, -1.44E+01, -1.10E+01, -8.06E+00, -4.08E+00, -4.26E-01, 3.21E+00, 6.85E+00, 9.51E+00, 1.65E+01, 2.01E+01, 2.44E+01, 2.78E+01, 3.27E+01, 3.64E+01, 4.10E+01, 4.46E+01, 4.73E+01, 5.16E+01, 5.15E+01, 4.95E+01,
                        4.85E+01, 4.64E+01, 4.38E+01, 4.21E+01, 3.94E+01, 3.84E+01, 3.67E+01, 3.27E+01, 3.04E+01, 2.37E+01, 2.00E+01, 1.64E+01, 1.24E+01, 9.09E+00, 2.46E+00, -3.19E+00, -1.31E+01, -1.55E+01, -2.01E+01, -2.47E+01, -2.74E+01, -3.00E+01, -3.34E+01, -3.96E+01, -4.30E+01, -4.53E+01,
                        -4.83E+01, -5.06E+01, -4.88E+01, -4.88E+01, -4.61E+01, -4.34E+01, -4.10E+01, -3.80E+01, -3.40E+01, -3.13E+01, -2.97E+01, -2.70E+01, -2.60E+01, -2.37E+01, -2.17E+01, -1.97E+01, -1.64E+01, -1.31E+01, -9.41E+00, -5.10E+00, -2.44E+00, 8.74E-01, 4.54E+00, 8.84E+00, 1.48E+01,
                        1.84E+01, 2.18E+01, 2.61E+01, 3.37E+01, 3.96E+01, 4.39E+01, 4.69E+01, 4.92E+01, 5.25E+01, 5.62E+01, 6.05E+01, 6.48E+01, 6.80E+01, 7.27E+01, 7.66E+01, 7.79E+01, 7.72E+01, 7.62E+01, 7.55E+01, 7.38E+01, 7.31E+01, 7.18E+01, 6.98E+01, 6.84E+01, 6.64E+01, 6.54E+01, 6.37E+01,
                        6.17E+01, 5.91E+01, 5.61E+01, 5.34E+01, 5.11E+01, 4.81E+01, 4.44E+01, 4.08E+01, 3.81E+01, 3.25E+01, 2.95E+01, 2.46E+01, 2.03E+01, 1.56E+01, 1.10E+01, 5.39E+00, -8.83E-01, -4.86E+00, -7.52E+00, -1.15E+01, -1.64E+01, -2.01E+01, -2.31E+01, -2.74E+01, -2.97E+01, -3.43E+01,
                        -3.73E+01, -4.13E+01, -4.46E+01, -4.89E+01, -5.06E+01, -5.05E+01, -5.32E+01, -5.52E+01, -5.85E+01, -6.24E+01, -6.54E+01, -6.87E+01, -6.90E+01, -7.13E+01, -7.37E+01, -7.56E+01, -7.69E+01, -7.69E+01, -7.62E+01, -7.51E+01, -7.35E+01, -7.14E+01, -6.97E+01, -6.74E+01, -6.60E+01,
                        -6.37E+01, -6.04E+01, -5.77E+01, -5.53E+01, -5.30E+01, -4.80E+01, -4.57E+01, -4.34E+01, -3.81E+01, -3.25E+01, -2.75E+01, -2.22E+01, -1.70E+01, -1.23E+01, -5.39E+00, -9.73E-02, 5.54E+00, 1.21E+01, 1.78E+01, 2.08E+01, 2.97E+01, 3.60E+01, 4.16E+01, 4.69E+01, 5.22E+01, 5.68E+01,
                        6.11E+01, 6.64E+01, 7.10E+01, 7.39E+01, 7.72E+01, 7.69E+01, 7.51E+01, 7.25E+01, 7.05E+01, 6.91E+01, 6.64E+01, 6.38E+01, 6.04E+01, 5.81E+01, 5.57E+01, 5.20E+01, 5.07E+01, 4.80E+01, 4.44E+01, 4.11E+01, 3.78E+01, 3.28E+01, 2.85E+01, 2.42E+01, 1.96E+01, 1.63E+01, 1.33E+01,
                        8.33E+00, 5.33E+00, 3.73E-01, -7.55E+00, -1.28E+01, -1.71E+01, -2.47E+01, -3.00E+01, -3.53E+01, -4.09E+01, -4.52E+01, -4.92E+01, -5.38E+01, -5.91E+01, -6.30E+01, -6.64E+01, -6.93E+01, -7.26E+01, -7.63E+01, -7.55E+01, -7.52E+01, -7.35E+01, -7.18E+01, -6.94E+01, -6.84E+01,
                        -6.51E+01, -6.10E+01, -5.87E+01, -5.54E+01, -5.30E+01, -4.94E+01, -4.64E+01, -4.34E+01, -4.27E+01, -3.61E+01, -3.05E+01, -2.32E+01, -1.70E+01, -1.17E+01, -5.72E+00, -1.74E+00, 5.19E+00, 9.83E+00, 1.35E+01, 1.71E+01, 2.31E+01, 2.97E+01, 3.59E+01, 3.93E+01, 4.65E+01, 5.05E+01,
                        5.11E+01, 5.14E+01, 5.28E+01, 5.54E+01, 5.81E+01, 6.30E+01, 6.93E+01, 7.59E+01, 7.75E+01, 7.95E+01, 8.32E+01, 8.71E+01, 9.17E+01, 9.57E+01, 1.02E+02, 1.03E+02, 1.03E+02, 1.03E+02, 1.01E+02, 1.00E+02, 9.94E+01, 9.74E+01, 9.64E+01, 9.41E+01, 9.24E+01, 9.17E+01, 8.87E+01,
                        8.64E+01, 8.27E+01, 7.91E+01, 7.71E+01, 7.14E+01, 7.08E+01, 6.71E+01, 6.38E+01, 6.02E+01, 5.68E+01, 4.43E+01, 3.64E+01, 2.42E+01, 1.79E+01, 9.38E+00, 5.08E+00, -8.65E-01, -4.51E+00, -7.82E+00, -1.35E+01, -1.97E+01, -2.44E+01, -3.00E+01, -3.59E+01, -4.09E+01, -4.49E+01,
                        -4.82E+01, -5.41E+01, -6.20E+01, -6.67E+01, -7.19E+01, -7.62E+01, -7.85E+01, -8.15E+01, -8.61E+01, -9.24E+01, -9.77E+01, -1.02E+02, -1.02E+02, -1.02E+02, -1.01E+02, -9.95E+01, -9.74E+01, -9.48E+01, -9.31E+01, -9.01E+01, -8.67E+01, -8.47E+01, -8.14E+01, -7.71E+01, -7.44E+01,
                        -6.78E+01, -6.41E+01, -5.98E+01, -5.49E+01, -4.93E+01, -4.27E+01, -3.61E+01, -3.15E+01, -2.45E+01, -1.93E+01, -1.46E+01, -8.36E+00, -3.07E+00, 2.88E+00, 8.83E+00, 1.18E+01, 1.68E+01, 2.14E+01, 2.83E+01, 3.30E+01, 3.83E+01, 4.35E+01, 4.72E+01, 5.41E+01, 5.84E+01, 6.27E+01,
                        6.66E+01, 7.32E+01, 7.95E+01, 8.51E+01, 8.97E+01, 9.30E+01, 9.73E+01, 1.01E+02, 1.02E+02, 1.02E+02, 9.92E+01, 9.78E+01, 9.71E+01, 9.45E+01, 9.25E+01, 9.08E+01, 8.94E+01, 8.84E+01, 8.58E+01, 8.41E+01, 8.14E+01, 7.81E+01, 7.44E+01, 6.55E+01, 6.15E+01, 5.92E+01, 5.42E+01,
                        4.73E+01, 4.47E+01, 3.77E+01, 2.79E+01, 2.22E+01, 1.60E+01, 9.71E+00, 9.05E+00, 4.75E+00, -1.21E+00, -7.82E+00, -1.34E+01, -1.84E+01, -2.23E+01, -2.56E+01, -3.16E+01, -3.72E+01, -4.31E+01, -4.84E+01, -5.21E+01, -5.60E+01, -5.93E+01, -6.40E+01, -6.83E+01, -7.39E+01, -7.95E+01,
                        -8.71E+01, -9.43E+01, -1.03E+02, -1.01E+02, -1.01E+02, -9.94E+01, -9.77E+01, -9.57E+01, -9.17E+01, -8.87E+01, -8.60E+01, -8.27E+01, -7.90E+01, -7.50E+01, -7.07E+01, -6.61E+01, -6.15E+01, -5.81E+01, -5.19E+01, -4.82E+01, -4.36E+01, -3.74E+01, -3.04E+01, -2.35E+01, -1.69E+01,
                        -1.04E+01, -5.40E+00, -4.50E-01, 2.21E+00, 5.51E+00, 1.54E+01, 2.10E+01, 2.53E+01, 2.50E+01, 2.79E+01, 2.99E+01, 3.49E+01, 4.05E+01, 4.48E+01, 5.01E+01, 5.07E+01, 5.40E+01, 5.80E+01, 6.16E+01, 6.49E+01, 6.79E+01, 7.22E+01, 7.58E+01, 7.71E+01, 7.88E+01, 8.28E+01, 8.64E+01,
                        9.07E+01, 9.56E+01, 1.01E+02, 1.03E+02, 1.03E+02, 1.06E+02, 1.10E+02, 1.15E+02, 1.21E+02, 1.26E+02, 1.28E+02, 1.28E+02, 1.26E+02, 1.25E+02, 1.23E+02, 1.22E+02, 1.20E+02, 1.18E+02, 1.16E+02, 1.14E+02, 1.11E+02, 1.09E+02, 1.07E+02, 1.04E+02, 1.02E+02, 9.91E+01, 9.54E+01,
                        9.21E+01, 8.91E+01, 8.55E+01, 8.02E+01, 7.29E+01, 6.70E+01, 5.62E+01, 4.92E+01, 4.27E+01, 2.88E+01, 2.13E+01, 1.07E+01, 3.45E+00, -3.50E+00, -9.11E+00, -1.51E+01, -2.27E+01, -2.96E+01, -3.62E+01, -4.38E+01, -4.81E+01, -5.04E+01, -5.04E+01, -5.37E+01, -5.57E+01, -5.87E+01,
                        -6.23E+01, -6.63E+01, -7.02E+01, -7.42E+01, -7.65E+01, -7.68E+01, -7.81E+01, -8.08E+01, -8.54E+01, -8.94E+01, -9.40E+01, -9.89E+01, -1.02E+02, -9.91E+01, -9.61E+01, -9.41E+01, -9.21E+01, -8.94E+01, -8.67E+01, -8.44E+01, -8.17E+01, -7.87E+01, -7.57E+01, -7.21E+01, -6.81E+01,
                        -6.38E+01, -5.92E+01, -8.87E+01, -8.28E+01, -7.69E+01, -6.99E+01, -6.34E+01, -5.71E+01, -5.22E+01, -4.56E+01, -3.84E+01, -3.11E+01, -2.42E+01, -1.60E+01, -9.73E+00, -3.14E+00, 3.11E+00, 1.07E+01, 1.63E+01, 2.12E+01, 2.81E+01, 3.44E+01, 4.03E+01, 4.76E+01, 5.15E+01, 5.35E+01,
                        5.91E+01, 6.31E+01, 6.77E+01, 7.40E+01, 8.19E+01, 8.82E+01, 9.31E+01, 9.80E+01, 1.01E+02, 1.02E+02, 1.05E+02, 1.09E+02, 1.09E+02, 1.10E+02, 1.13E+02, 1.17E+02, 1.23E+02, 1.27E+02, 1.28E+02, 1.31E+02, 1.33E+02, 1.37E+02, 1.42E+02, 1.44E+02, 1.51E+02, 1.53E+02, 1.53E+02,
                        1.53E+02, 1.52E+02, 1.50E+02, 1.48E+02, 1.46E+02, 1.43E+02, 1.40E+02, 1.37E+02, 1.34E+02, 1.30E+02, 1.26E+02, 1.24E+02, 1.20E+02, 1.16E+02, 1.10E+02, 1.04E+02, 9.60E+01, 8.64E+01, 8.02E+01, 6.97E+01, 5.58E+01, 4.47E+01, 3.18E+01, 2.43E+01, 1.54E+01, 8.45E+00, -1.09E+00,
                        -1.16E+01, -2.02E+01, -2.74E+01, -3.83E+01, -4.52E+01, -5.05E+01, -5.21E+01, -5.35E+01, -5.68E+01, -6.07E+01, -6.73E+01, -7.46E+01, -8.05E+01, -8.61E+01, -9.20E+01, -9.63E+01, -1.01E+02, -1.02E+02, -1.04E+02, -1.09E+02, -1.11E+02, -1.12E+02, -1.13E+02, -1.16E+02, -1.22E+02,
                        -1.26E+02, -1.27E+02, -1.28E+02, -1.28E+02, -1.30E+02, -1.33E+02, -1.38E+02, -1.45E+02, -1.51E+02, -1.54E+02, -1.54E+02, -1.52E+02, -1.50E+02, -1.47E+02, -1.44E+02, -1.41E+02, -1.38E+02, -1.34E+02, -1.30E+02, -1.27E+02, -1.22E+02, -1.16E+02, -1.12E+02, -1.09E+02, -1.04E+02,
                        -9.79E+01, -9.13E+01, -8.47E+01, -7.82E+01, -7.16E+01, -6.30E+01, -5.61E+01, -4.92E+01, -4.10E+01, -3.34E+01, -1.66E+01, -7.44E+00, 1.28E-01, 6.71E+00, 1.26E+01, 1.76E+01, 2.35E+01, 2.97E+01, 3.57E+01, 4.13E+01, 4.75E+01, 5.51E+01, 6.33E+01, 6.92E+01, 7.52E+01, 1.01E+02,
                        9.10E+01, 1.08E+02, 1.16E+02, 1.24E+02, 1.32E+02, 1.38E+02, 1.45E+02, 1.51E+02, 1.54E+02, 1.55E+02, 1.55E+02, 1.53E+02, 1.52E+02, 1.49E+02, 1.47E+02, 1.44E+02, 1.42E+02, 1.39E+02, 1.35E+02, 1.29E+02, 1.24E+02, 1.18E+02, 1.08E+02, 9.79E+01, 8.91E+01, 7.72E+01, 6.18E+01,
                        5.62E+01, 4.73E+01, 3.61E+01, 2.69E+01, 1.57E+01, 6.86E+00, -3.76E-01, -7.94E+00, -1.58E+01, -2.21E+01, -3.13E+01, -3.89E+01, -4.74E+01, -5.46E+01, -6.06E+01, -6.62E+01, -7.14E+01, -7.74E+01, -8.33E+01, -8.92E+01, -9.71E+01, -1.03E+02, -1.12E+02, -1.16E+02, -1.16E+02,
                        -1.18E+02, -1.21E+02, -1.26E+02, -1.32E+02, -1.37E+02, -1.43E+02, -1.51E+02, -1.54E+02, -1.54E+02, -1.52E+02, -1.48E+02, -1.45E+02, -1.41E+02, -1.37E+02, -1.32E+02, -1.28E+02, -1.22E+02, -1.17E+02, -1.09E+02, -1.03E+02, -9.43E+01, -8.77E+01, -7.92E+01, -6.01E+01, -5.15E+01,
                        -4.46E+01, -3.54E+01, -2.79E+01, -2.03E+01, -1.47E+01, -9.46E+00, -2.23E+00, 5.67E+00, 1.52E+01, 2.28E+01, 2.97E+01, 3.82E+01, 4.71E+01, 5.50E+01, 6.45E+01, 7.37E+01, 8.13E+01, 8.59E+01, 9.05E+01, 9.78E+01, 1.05E+02, 1.12E+02, 1.19E+02, 1.25E+02, 1.30E+02, 1.36E+02, 1.38E+02,
                        1.37E+02, 1.38E+02, 1.38E+02, 1.40E+02, 1.44E+02, 1.47E+02, 1.50E+02, 1.54E+02, 1.57E+02, 1.55E+02, 1.52E+02, 1.48E+02, 1.44E+02, 1.40E+02, 1.34E+02, 1.24E+02, 1.15E+02, 1.05E+02, 9.17E+01, 7.66E+01, 6.44E+01, 4.86E+01, 3.91E+01, 2.86E+01, 1.77E+01, 7.87E+00, -6.79E-01,
                        -1.12E+01, -1.88E+01, -2.53E+01, -3.39E+01, -4.28E+01, -5.23E+01, -5.99E+01, -6.74E+01, -7.53E+01, -8.48E+01, -9.14E+01, -1.01E+02, -1.11E+02, -1.21E+02, -1.31E+02, -1.42E+02, -1.48E+02, -1.52E+02, -1.55E+02, -1.53E+02, -1.49E+02, -1.43E+02, -1.36E+02, -1.31E+02, -1.27E+02,
                        -1.22E+02]

    # displacement_step = [0.03896, 0.35013, 0.58328, 0.81715, 1.05071, 1.44133, 2.06725, 2.92427, 0.19562, 0.04141, -0.34748, -0.5023, -0.89211, -1.2039, -1.59462, -1.28355, -1.12924, -0.81847, -0.5073, -0.03927, 0.42785, 0.89507, 1.20665, 1.59656, 1.98708, 1.67621, 1.13128, 0.82041, 0.19715,
    # -0.3482, -0.738, -0.50159, -1.2041, -1.67244, -2.21901, -0.3533, -2.76537, -2.76721, -2.45665, -1.83338, -1.28783, -0.74208, -0.7429, 0.50597, 1.20696, 1.59615, 2.29907, 2.61157, 2.37913, 1.36535, 0.97717, 0.27588, -0.19042, -0.73647, -1.67295, -2.68755, -2.68898, -2.37842, -1.44347, -0.89864, 2.14445, 1.90957, 3.39251, 4.09533, 4.72094, 4.33215, 3.62984, 2.84962, 2.22543, 1.7576, 0.11963, -0.66018, -1.12669, -1.90681, -2.92182, -3.31163, -3.85871, -3.93867, -3.62852, -2.77108, -1.83563, -1.21185, 0.03692, 1.36423, 3.6277, 4.40803, 5.50178, 5.8924, 6.20571, 5.50412, 4.64587, 3.94397, 3.3201, 3.08705, 2.30621, 1.60411, 1.05795, 0.43346, -0.50302, -1.12638, -2.06296, -2.99995, -3.62434, -4.32756, -4.87474, -4.79876, -4.64536, -4.33398, -3.71021, 3.31714, -1.91487, 0.89588, 4.01873, 3.94132, 4.72196, 5.5028, 5.97154, 4.95755, 4.49054, 3.55447, 2.69653, 2.07255, 1.13668, 0.27803, -0.97064, -2.29795, -3.23483, -4.17233, -4.79753, -4.95378, -4.79998, -4.64587, -4.02251, -3.24177, -2.22717, -1.05621, 0.27089, 3.08215, 5.5028, 5.97144, 6.43989, 7.29966, 7.6141, 6.91231, 5.97644, 5.35246, 4.41497, 3.2433, 2.30652, 1.29253, -0.58777, -1.59707, -2.53344, -3.31337, -4.25086, -5.0317, -5.42192, -6.20327, -6.28313, -5.89505, -5.27128, -4.49105, -2.77384, -1.60319, -0.66671, 0.89486, 2.14415, 3.62862, 5.03435, 6.28476, 6.90955, 7.3784, 7.30232, 6.44437, 5.19519, 4.41497, 3.24371, 2.15027, 1.21369, 0.66855, -0.65876, -1.90824, -3.00168, -3.86105, -4.6422, -5.34542, -5.8922, -6.36074, -6.05089, -5.42732, -4.96, -4.02312, -3.00821, -2.22757, -1.36912, -0.19817, 1.44194, 2.53538, 3.86309, 5.19132, 6.36278, 7.45653, 8.08152, 8.86328, 9.17588, 9.17833, 7.69467, 6.68038, 5.97828, 5.11931, 4.18192, 3.40098, 2.77649, 1.99514, 1.05795, -0.34799, -1.28528, -2.45624, -3.6276, -4.79876, -5.50137, -6.20439, -6.75116, -7.14148, -7.61033, -8.15781, -8.15914, -7.9267, -7.14688, -5.81968, -4.49248, -2.85216, -1.44663, -0.11953, 1.91089, 4.02036, 5.42671, 9.41138, 8.08285, 8.78597, 9.25503, 8.86583, 8.00728, 7.46112, 6.36798, 5.74431, 4.49452, 3.32316, 1.99504, 0.82347, -0.19154, -1.44092, -2.61269, -3.62801, -4.40895, -5.18958, -6.04896, -6.59573, -7.37728, -8.15894, -7.77035, -7.06815, -6.13147, -4.88218, -3.55447, -2.46175, -1.44704, -0.19807, 1.52007, 4.56673, 5.81693, 6.75473, 8.23971, 9.95815, 10.4271, 10.7396, 10.81956, 10.82119, 10.19671, 8.94742, 8.16669, 6.99502, 5.82335, 4.96408, 3.47961, 2.22951, 0.66702, -0.19154, -1.51915, -3.23759, -4.40895, -5.34624, -6.28333, -6.90812, -7.92415, -8.62728, -9.40893, -9.95631, -9.87952, -9.4126, -8.78913, -7.53975, -6.21204, -4.88382, -3.71205, -2.69724, -1.36912, 0.81776, 2.77037, 4.64506, 5.6617, 0.50546, 8.39657, 9.56855, 10.50625, 11.05322, 10.35163, 9.96233, 9.18159, 8.32273, 6.99451, 6.13606, 4.96429, 3.87023, 3.01076, 2.07398, 0.74545, -0.19164, -1.44143, -3.00372, -4.25392, -5.89454, -6.67538, -7.53475, -8.15955, -8.70652, -9.33172, -9.8789, -9.80251, -9.10072, -8.24257, -6.68058, -5.35226, -3.94683, -2.85349, -1.68172, 0.2715, 2.45807, 4.09818, 7.14617, 8.47419, 10.42782, 11.52166, 12.61653, 12.69639, 12.15084, 11.37072, 0.98013, 8.87113, 7.30884, 6.13697, 4.49605, 2.93315, 1.76127, 0.51199, -2.06653, -3.62903, -5.1134, -6.28506, -7.30048, -8.316, -9.01882, -9.95662, -10.73838, -11.20753, -11.13104, -10.97612, -10.27422, -9.41576, -8.16597, -7.15045, -6.05701, -4.57234, -3.1663, -1.44755, 3.86462, 7.14688, 8.55343, 9.72541, 10.89748, 11.83549, 12.4609, 12.7737, 12.697, 12.07343, 11.2928, 10.43404, 9.26227, 8.16822, 6.29281, 4.9649, 3.55814, 1.99544, -0.03488, -1.83236, -3.47257, -5.26965, -6.6762, -7.76974, -8.70744, -9.72347, -10.7396, -11.20845, -10.97642, -10.43016, -9.25941, -8.47857, -7.15035, -6.13473, -5.11931, -3.79089, -2.30621, 1.13087, 2.53681, 4.48993, 6.05263, 7.85001, 9.02218, 10.27228, 11.36644, 12.30434, 13.08589, 14.024, 14.57159, 14.88552, 14.73049, 14.26266, -2.22309, 12.31005, 11.37276, 10.35734, 9.34172, 8.24787, 6.76299, 5.90352, 4.10604, 3.16854, 1.91844, -1.36341, -3.31663, -5.50371, -7.37932, -8.47286, -10.03607, -10.89575, -11.28627, -12.06782, -12.77166, -13.00756, -12.61867, -11.91678, -10.90228, -9.7304, -8.55853, 4.56867, -5.98042, -4.49574, -3.32397, -1.99555, -0.43224, 5.03721, 9.33519, 11.5234, 13.71211, 14.41565, 14.88501, 14.96435, 14.49663, 14.10661, 13.404, 12.46661, 11.13808, 10.20099, 9.2637, 8.09142, 6.45008, 5.66904, 4.49676, 2.85614, 1.91875, 0.1998, -1.05071, -3.94255, -6.83275, -8.31743, -9.72459, -10.9752, -11.67822, -12.45988, -13.16361, -12.77431, -12.38481, -11.13594, -9.72969, -8.32385, -7.38666, -5.90229, -4.26147, 7.85133, -1.5268, 0.42663, 2.38056, 8.71019, 11.99306, 13.39972, 14.49408, 15.43208, 16.05759, 16.52715, 16.21619, 15.98293, 15.12417, 13.9522, 13.0147, 11.60887, 10.437, 8.63992, 7.85857, 6.45161, 5.04506, 3.40342, 1.99677, 1.05927, -0.58104, -2.61279, -5.34777, -7.37993, -8.55211, -9.80292, -10.81864, -12.38216, -13.78912, -14.41473, -14.41605, -14.57414, -13.63756, -12.31005, -10.9037, -9.41933, -7.93507, -6.21622, -4.73124, -3.0898, -1.5269, 0.34962, 1.52098, 3.08399, 5.2724, 7.46071, 9.80537, 12.15044, 13.94792, 15.1203, 15.98028, 16.37121, 16.37254, 15.51439, 14.2649, 13.09324, 11.68699, 9.65514, 7.38901, 5.82672, 3.09082, 0.8248, -1.12853, -3.55131, -5.03619, -6.99012, -8.55323, -10.11695, -11.44538, -12.4612, -13.0862, -13.86806, -14.49367, -14.72988, -14.1061, -13.09109, -12.07598, -10.90381, -9.57569, -8.79495, -7.23194, -5.90362, -4.41864, -3.0898, -1.91712, -0.19745, 1.13118, 2.85012, 4.80375, 6.5227, 8.16403, 9.72714, 11.52503, 13.63542, 15.1205, 16.05851, 16.76214, 17.46567, 17.77848, 18.17032, 18.17175, 17.62569, 16.84496, 16.14204, 15.36079, 14.18892, 13.09497, 12.2358, 11.06342, 9.81332, 8.25042, 6.60909, 4.57672, 3.09164, 1.4502, 0.04386, -1.3629, -2.9255, -4.41048, -6.52097, -8.16281, -9.64789, -10.82017, -12.38318, -13.55566, -14.49367, -15.1972, -16.21404, -16.21568, -15.98263, -15.28042, -14.10876, -12.85866, -11.53074, -10.35877, -9.03024, -7.62359, -5.82641, -3.9504, -2.54344, -1.68397, -0.19858, 1.52078, 2.92723, 5.81968, 6.60123, 8.32079, 10.58764, 12.54218, 14.80933, 16.52868, 17.38857, 17.85752, 17.93738, 17.07913, 16.2988, 14.89245, 13.79871, 12.15768, 10.36081, 8.64104, 6.9221, 4.96786, 3.24799, 1.21562, -0.34728, -2.53579, -4.17682, -5.81784, -7.77198, -9.41342, -11.05547, -12.30597, -13.40013, -14.65084, -15.43269, -16.05861, -15.98212, -15.35794, -14.65563, -13.17105, -11.76501, -10.12429, -8.79587, -7.07641, -4.73175, -2.93437, -0.98064, 1.44245, 3.86544, 6.75769, 8.86818, 10.66607, 12.3077, 17.54543, 18.79614, 19.5781, 19.89111, 20.20524, 19.89356, 18.87814, 17.55073, 16.53521, 14.73783, 13.33128, 11.5338, 9.81414, 8.17311, 6.21928, 4.49962, 2.85788, 1.13821, -0.26875, -1.83134, -4.7242, -6.52178, -8.39708, -10.586, -13.08752, -14.72906, -16.13643, -17.30932, -17.54502, -17.31258, -17.0011, -15.67309, -14.65787, -13.09538, -11.84508, -10.20374, -8.48459, -6.92159, -4.88943, -3.63882, -1.99697, -0.74667, 0.97299, 3.1616, 5.2722, 7.14821, 8.6335, 10.04046, 11.60387, 16.29441, 18.32698, 19.8905, 20.28296, 19.81564, 19.19084, 18.01917, 16.76918, 15.98824, 14.89419, 13.48733, 11.29922, 9.57987, 7.07896, 5.20294, 3.87462, 1.92018, 0.27854, -1.9882, -5.66221, -7.53812, -9.023, -10.42975, -11.99347, -14.1827, -15.35518, -16.68453, -17.62325, -17.54706, -16.84506, -15.59496, -14.03257, -12.70486, -11.37633, -9.65677, -6.29628, -4.73307, -3.24799, -1.68488, 1.28539, 4.17784, 7.46112, 9.96254, 11.60377, 13.47998, 15.35651, 17.07637, 18.56166, 19.81268, 20.51631, 20.98557, 21.53316, 22.2376, 21.92674, 20.99046, 19.66224, 18.64672, 17.24038, 15.91174, 14.19208, 12.62969, 11.22273, 9.26859, 7.93986, 6.37645, 5.12594, 3.09327, 1.29518, -1.0502, -3.39537, -5.50565, -7.61614, -11.05536, -13.08783, -14.57353, -16.2937, -17.31014, -18.48303, -19.50028, -19.11108, -18.48701, -17.54981, -16.37835, -14.81545, -13.56555, -12.00306, -10.51798, -8.25124, -6.45365, -4.49931, -3.01392, -0.1996, 4.49095, 6.36706, 8.24338, 9.80659, 11.13563, 12.62112, 14.10661, 15.43575, 16.53011, 17.7028, 18.64101, 19.34444, 20.1264, 21.06482, 21.84698, 22.16101, 21.30256, 20.83503, 18.95953, 17.70974, 16.61579, 14.89612, 13.33342, 10.91023, 9.73754, 8.17423, 5.36001, 3.64055, 1.45153, -1.0502, -3.08297, -4.7243, -6.67875, -8.78944, -10.58753, -11.9948, -13.40227, -15.20016, -16.21649, -18.01459, -19.57871, -19.34658, -18.56635, -17.70698, -16.61324, -15.44116, -14.03512, -12.70659, -10.59641, -8.87685, -7.15698, -5.90627, -3.95183, -0.35533, 4.56928, 6.4456, 7.85266, 9.25941, 10.66658, 12.30832, 14.18474, 15.67043, 17.0778, 18.40715, 19.42338, 20.67439, 22.00405, 22.16193, 20.99057, 19.35005, 17.86598, 16.6936, 15.52153, 13.95873, 11.92647, 10.36315, 9.19057, 6.61113, 3.71837, 0.98156, -1.0506, -3.23942, -5.74135, -7.93007, -9.96264, -12.07384, -12.93393, -14.18443, -15.5919, -16.60793, -17.38969, -18.3281, -19.57994, -18.87814, -17.4721, -16.22271, -14.50387, -12.70618, -11.22181, -8.79872, -6.6099]
    # displacement_step = generate_cyclic_load(duration=7, sampling_rate=100, max_displacement=86)
    # displacement_step = generate_cyclic_loading(num_cycles=10, initial_displacement=5, max_displacement=86, num_points=50, repetition_cycles=2)
    # displacement_step = generate_cyclic_loading_with_repetition(num_cycles=12, max_displacement=21, num_points=36, repetition_cycles=3)

    displacement_step = generate_cyclic_loading_exponential(num_cycles=7, initial_displacement=20, max_displacement=29, num_points=50, repetition_cycles=2)

    # displacement_step = generate_cyclic_load(duration=24, sampling_rate=50, max_displacement=23)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Kong_1():
    # https://sci-hub.st/10.1061/(asce)0733-9445(2004)130:4(618)
    global name
    name = 'Kong_1'
    # Wall Geometry
    # 102.0, 4572.0, 1905.0, 140.0, 45.6, 463.7, 463.7, 0.0435, 0.0031, 0.08
    tw = 130 * mm  # Wall thickness
    hw = 1.60 * m  # Wall height
    lw = 2.00 * m  # Wall length
    lbe = 250 * mm  # Boundary element length
    lweb = lw - (2 * lbe)
    tb = tw  # Wall thickness

    # Material proprieties
    fc = 28.8 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 400.7 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 400.9 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fx = fyw

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    YbeNum = 4  # BE long reinforcement diameter (mm)
    YbeDiam = 8  # BE long reinforcement diameter (mm)
    YwebNum = 8  # Web long reinforcement diameter (mm)
    YwebDiam = 8  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary        0.0188496
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web             0.00376992
    print('rouYb', rouYb)
    print('rouYw', rouYw)
    # rouYb = 0.0067
    # rouYw = 0.0067

    loadF = 0.1
    # displacement_step = [3.29E-01, 7.47E-01, 2.10E+00, 2.79E+00, 3.16E+00, 4.84E+00, 6.85E+00, 6.89E+00, 7.91E+00, 8.60E+00, 9.28E+00, 1.06E+01, 1.23E+01, 1.33E+01, 1.46E+01, 1.49E+01, 1.32E+01, 1.22E+01, 1.15E+01, 1.05E+01, 8.13E+00, 5.46E+00, 4.75E+00, 3.73E+00, 9.71E-01, 1.34E+00, 6.10E-01,
    # -1.08E+00, -2.44E+00, -3.79E+00, -4.17E+00, -5.18E+00, -5.89E+00, -8.22E+00, -1.02E+01, -1.09E+01, -1.26E+01, -1.36E+01, -1.43E+01, -1.56E+01, -1.35E+01, -1.19E+01, -9.84E+00, -8.48E+00, -6.80E+00, -6.11E+00, -4.76E+00, -2.74E+00, -1.72E+00, -6.99E-01, 3.18E-01, 2.04E+00, 3.74E+00, 5.10E+00, 6.12E+00, 7.15E+00, 7.84E+00, 1.02E+01, 1.16E+01, 1.26E+01, 1.33E+01, 1.49E+01, 1.35E+01, 1.22E+01, 7.82E+00, 5.13E+00, 5.73E+00, 3.06E+00, 2.04E+00, -1.05E+00, -3.41E+00, -3.12E+00, -6.14E+00, -8.50E+00, -8.53E+00, -9.55E+00, -1.06E+01, -1.22E+01, -1.32E+01, -1.52E+01, -1.35E+01, -1.12E+01, -9.16E+00, -7.13E+00, -5.43E+00, -4.39E+00, -2.72E+00, -1.05E+00, -2.00E-02, 6.65E-01, 1.31E+00, 1.68E+00, 3.04E+00, 4.74E+00, 7.11E+00, 9.15E+00, 1.12E+01, 1.22E+01, 1.36E+01, 1.49E+01, 1.66E+01, 1.96E+01, 2.13E+01, 2.36E+01, 2.53E+01, 2.69E+01, 2.65E+01, 2.35E+01, 2.18E+01, 2.14E+01, 2.01E+01, 1.91E+01, 1.87E+01, 1.77E+01, 1.54E+01, 1.37E+01, 1.04E+01, 8.37E+00, 7.69E+00, 5.37E+00, 3.71E+00, 2.36E+00, 3.52E-01, 6.43E-01, 2.47E-01, -2.41E+00, -2.78E+00, -4.13E+00, -4.83E+00, -4.20E+00, -5.54E+00, -7.55E+00, -8.24E+00, -9.59E+00, -1.16E+01, -1.29E+01, -1.46E+01, -1.46E+01, -1.39E+01, -1.22E+01, -1.05E+01, -8.81E+00, -7.78E+00, -6.77E+00, -5.73E+00, -4.06E+00, -2.05E+00, -1.36E+00, 3.25E-01, 3.00E+00, 4.06E+00, 5.77E+00, 9.46E+00, 1.18E+01, 1.42E+01, 1.55E+01, 1.79E+01, 1.99E+01, 2.22E+01, 2.32E+01, 2.42E+01, 2.79E+01, 2.75E+01, -7.43E+00, 2.42E+01, 2.31E+01, 2.14E+01, 2.08E+01, 1.94E+01, 1.84E+01, 1.77E+01, 1.40E+01, 1.07E+01, 7.68E+00, 5.69E+00, 3.68E+00, 2.65E+00, 3.03E-01, -3.04E+00, -4.74E+00, -4.46E+00, -6.15E+00, -7.49E+00, -7.53E+00, -8.89E+00, -9.58E+00, -1.12E+01, -1.49E+01, -1.32E+01, -1.12E+01, -8.14E+00, -3.71E+00, -3.43E-01, 6.57E-01, -5.92E+00, -3.58E+00, -9.13E-01, 3.07E+00, 4.77E+00, 6.80E+00, 8.16E+00, 9.84E+00, 1.28E+01, 1.52E+01, 1.72E+01, 1.99E+01, 2.09E+01, 2.29E+01, 2.49E+01, 2.66E+01, 3.09E+01, 3.42E+01, 3.91E+01, 4.21E+01, 4.50E+01, 4.80E+01, 5.06E+01, 5.19E+01, 5.09E+01, 5.12E+01, 5.01E+01, 4.85E+01, 4.64E+01, 4.41E+01, 4.24E+01, 4.11E+01, 3.90E+01, 3.80E+01, 3.64E+01, 3.40E+01, 3.13E+01, 2.90E+01, 2.70E+01, 2.43E+01, 2.20E+01, 1.87E+01, 1.50E+01, 1.10E+01, 8.02E+00, 5.69E+00, 2.04E+00, -9.54E-01, -5.92E+00, -8.59E+00, -1.16E+01, -1.46E+01, -1.89E+01, -2.16E+01, -2.39E+01, -2.85E+01, -3.22E+01, -3.48E+01, -3.84E+01, -4.21E+01, -4.57E+01, -4.96E+01, -5.06E+01, -5.05E+01, -4.98E+01, -4.88E+01, -4.84E+01, -4.67E+01, -4.44E+01, -4.27E+01, -4.00E+01, -3.74E+01, -3.57E+01, -3.33E+01, -3.10E+01, -2.87E+01, -2.67E+01, -2.43E+01, -2.30E+01, -2.00E+01, -1.60E+01, -1.21E+01, -8.74E+00, -6.08E+00, -1.78E+00, 1.21E+00, 5.18E+00, 9.50E+00, 1.51E+01, 2.08E+01, 2.44E+01, 2.84E+01, 3.27E+01, 3.70E+01, 4.06E+01, 4.40E+01, 4.73E+01, 5.06E+01, 5.16E+01, 5.09E+01, 5.08E+01, 4.88E+01, 4.61E+01, 4.44E+01, 4.31E+01, 4.11E+01, 3.94E+01, 3.67E+01, 3.40E+01, 3.20E+01, 3.03E+01, 2.73E+01, 2.47E+01, 2.24E+01, 1.87E+01, 1.44E+01, 1.01E+01, 6.78E+00, 4.77E+00, -2.02E-01, -3.57E+01, -6.18E+00, -9.82E+00, -1.31E+01, -1.78E+01, -2.24E+01, -2.44E+01, -2.94E+01, -3.34E+01, -3.54E+01, -3.83E+01, -4.10E+01, -4.53E+01, -4.73E+01, -4.99E+01, -5.09E+01, -4.99E+01, -4.88E+01, -4.84E+01, -4.74E+01, -4.54E+01, -4.27E+01, -4.10E+01, -3.84E+01, -3.67E+01, -3.37E+01, -3.17E+01, -2.93E+01, -2.70E+01, -2.66E+01, -2.13E+01, -1.80E+01, -1.44E+01, -1.10E+01, -8.06E+00, -4.08E+00, -4.26E-01, 3.21E+00, 6.85E+00, 9.51E+00, 1.65E+01, 2.01E+01, 2.44E+01, 2.78E+01, 3.27E+01, 3.64E+01, 4.10E+01, 4.46E+01, 4.73E+01, 5.16E+01, 5.15E+01, 4.95E+01, 4.85E+01, 4.64E+01, 4.38E+01, 4.21E+01, 3.94E+01, 3.84E+01, 3.67E+01, 3.27E+01, 3.04E+01, 2.37E+01, 2.00E+01, 1.64E+01, 1.24E+01, 9.09E+00, 2.46E+00, -3.19E+00, -1.31E+01, -1.55E+01, -2.01E+01, -2.47E+01, -2.74E+01, -3.00E+01, -3.34E+01, -3.96E+01, -4.30E+01, -4.53E+01, -4.83E+01, -5.06E+01, -4.88E+01, -4.88E+01, -4.61E+01, -4.34E+01, -4.10E+01, -3.80E+01, -3.40E+01, -3.13E+01, -2.97E+01, -2.70E+01, -2.60E+01, -2.37E+01, -2.17E+01, -1.97E+01, -1.64E+01, -1.31E+01, -9.41E+00, -5.10E+00, -2.44E+00, 8.74E-01, 4.54E+00, 8.84E+00, 1.48E+01, 1.84E+01, 2.18E+01, 2.61E+01, 3.37E+01, 3.96E+01, 4.39E+01, 4.69E+01, 4.92E+01, 5.25E+01, 5.62E+01, 6.05E+01, 6.48E+01, 6.80E+01, 7.27E+01, 7.66E+01, 7.79E+01, 7.72E+01, 7.62E+01, 7.55E+01, 7.38E+01, 7.31E+01, 7.18E+01, 6.98E+01, 6.84E+01, 6.64E+01, 6.54E+01, 6.37E+01, 6.17E+01, 5.91E+01, 5.61E+01, 5.34E+01, 5.11E+01, 4.81E+01, 4.44E+01, 4.08E+01, 3.81E+01, 3.25E+01, 2.95E+01, 2.46E+01, 2.03E+01, 1.56E+01, 1.10E+01, 5.39E+00, -8.83E-01, -4.86E+00, -7.52E+00, -1.15E+01, -1.64E+01, -2.01E+01, -2.31E+01, -2.74E+01, -2.97E+01, -3.43E+01, -3.73E+01, -4.13E+01, -4.46E+01, -4.89E+01, -5.06E+01, -5.05E+01, -5.32E+01, -5.52E+01, -5.85E+01, -6.24E+01, -6.54E+01, -6.87E+01, -6.90E+01, -7.13E+01, -7.37E+01, -7.56E+01, -7.69E+01, -7.69E+01, -7.62E+01, -7.51E+01, -7.35E+01, -7.14E+01, -6.97E+01, -6.74E+01, -6.60E+01, -6.37E+01, -6.04E+01, -5.77E+01, -5.53E+01, -5.30E+01, -4.80E+01, -4.57E+01, -4.34E+01, -3.81E+01, -3.25E+01, -2.75E+01, -2.22E+01, -1.70E+01, -1.23E+01, -5.39E+00, -9.73E-02, 5.54E+00, 1.21E+01, 1.78E+01, 2.08E+01, 2.97E+01, 3.60E+01, 4.16E+01, 4.69E+01, 5.22E+01, 5.68E+01, 6.11E+01, 6.64E+01, 7.10E+01, 7.39E+01, 7.72E+01, 7.69E+01, 7.51E+01, 7.25E+01, 7.05E+01, 6.91E+01, 6.64E+01, 6.38E+01, 6.04E+01, 5.81E+01, 5.57E+01, 5.20E+01, 5.07E+01, 4.80E+01, 4.44E+01, 4.11E+01, 3.78E+01, 3.28E+01, 2.85E+01, 2.42E+01, 1.96E+01, 1.63E+01, 1.33E+01, 8.33E+00, 5.33E+00, 3.73E-01, -7.55E+00, -1.28E+01, -1.71E+01, -2.47E+01, -3.00E+01, -3.53E+01, -4.09E+01, -4.52E+01, -4.92E+01, -5.38E+01, -5.91E+01, -6.30E+01, -6.64E+01, -6.93E+01, -7.26E+01, -7.63E+01, -7.55E+01, -7.52E+01, -7.35E+01, -7.18E+01, -6.94E+01, -6.84E+01, -6.51E+01, -6.10E+01, -5.87E+01, -5.54E+01, -5.30E+01, -4.94E+01, -4.64E+01, -4.34E+01, -4.27E+01, -3.61E+01, -3.05E+01, -2.32E+01, -1.70E+01, -1.17E+01, -5.72E+00, -1.74E+00, 5.19E+00, 9.83E+00, 1.35E+01, 1.71E+01, 2.31E+01, 2.97E+01, 3.59E+01, 3.93E+01, 4.65E+01, 5.05E+01, 5.11E+01, 5.14E+01, 5.28E+01, 5.54E+01, 5.81E+01, 6.30E+01, 6.93E+01, 7.59E+01, 7.75E+01, 7.95E+01, 8.32E+01, 8.71E+01, 9.17E+01, 9.57E+01, 1.02E+02, 1.03E+02, 1.03E+02, 1.03E+02, 1.01E+02, 1.00E+02, 9.94E+01, 9.74E+01, 9.64E+01, 9.41E+01, 9.24E+01, 9.17E+01, 8.87E+01, 8.64E+01, 8.27E+01, 7.91E+01, 7.71E+01, 7.14E+01, 7.08E+01, 6.71E+01, 6.38E+01, 6.02E+01, 5.68E+01, 4.43E+01, 3.64E+01, 2.42E+01, 1.79E+01, 9.38E+00, 5.08E+00, -8.65E-01, -4.51E+00, -7.82E+00, -1.35E+01, -1.97E+01, -2.44E+01, -3.00E+01, -3.59E+01, -4.09E+01, -4.49E+01, -4.82E+01, -5.41E+01, -6.20E+01, -6.67E+01, -7.19E+01, -7.62E+01, -7.85E+01, -8.15E+01, -8.61E+01, -9.24E+01, -9.77E+01, -1.02E+02, -1.02E+02, -1.02E+02, -1.01E+02, -9.95E+01, -9.74E+01, -9.48E+01, -9.31E+01, -9.01E+01, -8.67E+01, -8.47E+01, -8.14E+01, -7.71E+01, -7.44E+01, -6.78E+01, -6.41E+01, -5.98E+01, -5.49E+01, -4.93E+01, -4.27E+01, -3.61E+01, -3.15E+01, -2.45E+01, -1.93E+01, -1.46E+01, -8.36E+00, -3.07E+00, 2.88E+00, 8.83E+00, 1.18E+01, 1.68E+01, 2.14E+01, 2.83E+01, 3.30E+01, 3.83E+01, 4.35E+01, 4.72E+01, 5.41E+01, 5.84E+01, 6.27E+01, 6.66E+01, 7.32E+01, 7.95E+01, 8.51E+01, 8.97E+01, 9.30E+01, 9.73E+01, 1.01E+02, 1.02E+02, 1.02E+02, 9.92E+01, 9.78E+01, 9.71E+01, 9.45E+01, 9.25E+01, 9.08E+01, 8.94E+01, 8.84E+01, 8.58E+01, 8.41E+01, 8.14E+01, 7.81E+01, 7.44E+01, 6.55E+01, 6.15E+01, 5.92E+01, 5.42E+01, 4.73E+01, 4.47E+01, 3.77E+01, 2.79E+01, 2.22E+01, 1.60E+01, 9.71E+00, 9.05E+00, 4.75E+00, -1.21E+00, -7.82E+00, -1.34E+01, -1.84E+01, -2.23E+01, -2.56E+01, -3.16E+01, -3.72E+01, -4.31E+01, -4.84E+01, -5.21E+01, -5.60E+01, -5.93E+01, -6.40E+01, -6.83E+01, -7.39E+01, -7.95E+01, -8.71E+01, -9.43E+01, -1.03E+02, -1.01E+02, -1.01E+02, -9.94E+01, -9.77E+01, -9.57E+01, -9.17E+01, -8.87E+01, -8.60E+01, -8.27E+01, -7.90E+01, -7.50E+01, -7.07E+01, -6.61E+01, -6.15E+01, -5.81E+01, -5.19E+01, -4.82E+01, -4.36E+01, -3.74E+01, -3.04E+01, -2.35E+01, -1.69E+01, -1.04E+01, -5.40E+00, -4.50E-01, 2.21E+00, 5.51E+00, 1.54E+01, 2.10E+01, 2.53E+01, 2.50E+01, 2.79E+01, 2.99E+01, 3.49E+01, 4.05E+01, 4.48E+01, 5.01E+01, 5.07E+01, 5.40E+01, 5.80E+01, 6.16E+01, 6.49E+01, 6.79E+01, 7.22E+01, 7.58E+01, 7.71E+01, 7.88E+01, 8.28E+01, 8.64E+01, 9.07E+01, 9.56E+01, 1.01E+02, 1.03E+02, 1.03E+02, 1.06E+02, 1.10E+02, 1.15E+02, 1.21E+02, 1.26E+02, 1.28E+02, 1.28E+02, 1.26E+02, 1.25E+02, 1.23E+02, 1.22E+02, 1.20E+02, 1.18E+02, 1.16E+02, 1.14E+02, 1.11E+02, 1.09E+02, 1.07E+02, 1.04E+02, 1.02E+02, 9.91E+01, 9.54E+01, 9.21E+01, 8.91E+01, 8.55E+01, 8.02E+01, 7.29E+01, 6.70E+01, 5.62E+01, 4.92E+01, 4.27E+01, 2.88E+01, 2.13E+01, 1.07E+01, 3.45E+00, -3.50E+00, -9.11E+00, -1.51E+01, -2.27E+01, -2.96E+01, -3.62E+01, -4.38E+01, -4.81E+01, -5.04E+01, -5.04E+01, -5.37E+01, -5.57E+01, -5.87E+01, -6.23E+01, -6.63E+01, -7.02E+01, -7.42E+01, -7.65E+01, -7.68E+01, -7.81E+01, -8.08E+01, -8.54E+01, -8.94E+01, -9.40E+01, -9.89E+01, -1.02E+02, -9.91E+01, -9.61E+01, -9.41E+01, -9.21E+01, -8.94E+01, -8.67E+01, -8.44E+01, -8.17E+01, -7.87E+01, -7.57E+01, -7.21E+01, -6.81E+01, -6.38E+01, -5.92E+01, -8.87E+01, -8.28E+01, -7.69E+01, -6.99E+01, -6.34E+01, -5.71E+01, -5.22E+01, -4.56E+01, -3.84E+01, -3.11E+01, -2.42E+01, -1.60E+01, -9.73E+00, -3.14E+00, 3.11E+00, 1.07E+01, 1.63E+01, 2.12E+01, 2.81E+01, 3.44E+01, 4.03E+01, 4.76E+01, 5.15E+01, 5.35E+01, 5.91E+01, 6.31E+01, 6.77E+01, 7.40E+01, 8.19E+01, 8.82E+01, 9.31E+01, 9.80E+01, 1.01E+02, 1.02E+02, 1.05E+02, 1.09E+02, 1.09E+02, 1.10E+02, 1.13E+02, 1.17E+02, 1.23E+02, 1.27E+02, 1.28E+02, 1.31E+02, 1.33E+02, 1.37E+02, 1.42E+02, 1.44E+02, 1.51E+02, 1.53E+02, 1.53E+02, 1.53E+02, 1.52E+02, 1.50E+02, 1.48E+02, 1.46E+02, 1.43E+02, 1.40E+02, 1.37E+02, 1.34E+02, 1.30E+02, 1.26E+02, 1.24E+02, 1.20E+02, 1.16E+02, 1.10E+02, 1.04E+02, 9.60E+01, 8.64E+01, 8.02E+01, 6.97E+01, 5.58E+01, 4.47E+01, 3.18E+01, 2.43E+01, 1.54E+01, 8.45E+00, -1.09E+00, -1.16E+01, -2.02E+01, -2.74E+01, -3.83E+01, -4.52E+01, -5.05E+01, -5.21E+01, -5.35E+01, -5.68E+01, -6.07E+01, -6.73E+01, -7.46E+01, -8.05E+01, -8.61E+01, -9.20E+01, -9.63E+01, -1.01E+02, -1.02E+02, -1.04E+02, -1.09E+02, -1.11E+02, -1.12E+02, -1.13E+02, -1.16E+02, -1.22E+02, -1.26E+02, -1.27E+02, -1.28E+02, -1.28E+02, -1.30E+02, -1.33E+02, -1.38E+02, -1.45E+02, -1.51E+02, -1.54E+02, -1.54E+02, -1.52E+02, -1.50E+02, -1.47E+02, -1.44E+02, -1.41E+02, -1.38E+02, -1.34E+02, -1.30E+02, -1.27E+02, -1.22E+02, -1.16E+02, -1.12E+02, -1.09E+02, -1.04E+02, -9.79E+01, -9.13E+01, -8.47E+01, -7.82E+01, -7.16E+01, -6.30E+01, -5.61E+01, -4.92E+01, -4.10E+01, -3.34E+01, -1.66E+01, -7.44E+00, 1.28E-01, 6.71E+00, 1.26E+01, 1.76E+01, 2.35E+01, 2.97E+01, 3.57E+01, 4.13E+01, 4.75E+01, 5.51E+01, 6.33E+01, 6.92E+01, 7.52E+01, 1.01E+02, 9.10E+01, 1.08E+02, 1.16E+02, 1.24E+02, 1.32E+02, 1.38E+02, 1.45E+02, 1.51E+02, 1.54E+02, 1.55E+02, 1.55E+02, 1.53E+02, 1.52E+02, 1.49E+02, 1.47E+02, 1.44E+02, 1.42E+02, 1.39E+02, 1.35E+02, 1.29E+02, 1.24E+02, 1.18E+02, 1.08E+02, 9.79E+01, 8.91E+01, 7.72E+01, 6.18E+01, 5.62E+01, 4.73E+01, 3.61E+01, 2.69E+01, 1.57E+01, 6.86E+00, -3.76E-01, -7.94E+00, -1.58E+01, -2.21E+01, -3.13E+01, -3.89E+01, -4.74E+01, -5.46E+01, -6.06E+01, -6.62E+01, -7.14E+01, -7.74E+01, -8.33E+01, -8.92E+01, -9.71E+01, -1.03E+02, -1.12E+02, -1.16E+02, -1.16E+02, -1.18E+02, -1.21E+02, -1.26E+02, -1.32E+02, -1.37E+02, -1.43E+02, -1.51E+02, -1.54E+02, -1.54E+02, -1.52E+02, -1.48E+02, -1.45E+02, -1.41E+02, -1.37E+02, -1.32E+02, -1.28E+02, -1.22E+02, -1.17E+02, -1.09E+02, -1.03E+02, -9.43E+01, -8.77E+01, -7.92E+01, -6.01E+01, -5.15E+01, -4.46E+01, -3.54E+01, -2.79E+01, -2.03E+01, -1.47E+01, -9.46E+00, -2.23E+00, 5.67E+00, 1.52E+01, 2.28E+01, 2.97E+01, 3.82E+01, 4.71E+01, 5.50E+01, 6.45E+01, 7.37E+01, 8.13E+01, 8.59E+01, 9.05E+01, 9.78E+01, 1.05E+02, 1.12E+02, 1.19E+02, 1.25E+02, 1.30E+02, 1.36E+02, 1.38E+02, 1.37E+02, 1.38E+02, 1.38E+02, 1.40E+02, 1.44E+02, 1.47E+02, 1.50E+02, 1.54E+02, 1.57E+02, 1.55E+02, 1.52E+02, 1.48E+02, 1.44E+02, 1.40E+02, 1.34E+02, 1.24E+02, 1.15E+02, 1.05E+02, 9.17E+01, 7.66E+01, 6.44E+01, 4.86E+01, 3.91E+01, 2.86E+01, 1.77E+01, 7.87E+00, -6.79E-01, -1.12E+01, -1.88E+01, -2.53E+01, -3.39E+01, -4.28E+01, -5.23E+01, -5.99E+01, -6.74E+01, -7.53E+01, -8.48E+01, -9.14E+01, -1.01E+02, -1.11E+02, -1.21E+02, -1.31E+02, -1.42E+02, -1.48E+02, -1.52E+02, -1.55E+02, -1.53E+02, -1.49E+02, -1.43E+02, -1.36E+02, -1.31E+02, -1.27E+02, -1.22E+02]

    # displacement_step = [0.03896, 0.35013, 0.58328, 0.81715, 1.05071, 1.44133, 2.06725, 2.92427, 0.19562, 0.04141, -0.34748, -0.5023, -0.89211, -1.2039, -1.59462, -1.28355, -1.12924, -0.81847, -0.5073, -0.03927, 0.42785, 0.89507, 1.20665, 1.59656, 1.98708, 1.67621, 1.13128, 0.82041, 0.19715,
    # -0.3482, -0.738, -0.50159, -1.2041, -1.67244, -2.21901, -0.3533, -2.76537, -2.76721, -2.45665, -1.83338, -1.28783, -0.74208, -0.7429, 0.50597, 1.20696, 1.59615, 2.29907, 2.61157, 2.37913, 1.36535, 0.97717, 0.27588, -0.19042, -0.73647, -1.67295, -2.68755, -2.68898, -2.37842, -1.44347, -0.89864, 2.14445, 1.90957, 3.39251, 4.09533, 4.72094, 4.33215, 3.62984, 2.84962, 2.22543, 1.7576, 0.11963, -0.66018, -1.12669, -1.90681, -2.92182, -3.31163, -3.85871, -3.93867, -3.62852, -2.77108, -1.83563, -1.21185, 0.03692, 1.36423, 3.6277, 4.40803, 5.50178, 5.8924, 6.20571, 5.50412, 4.64587, 3.94397, 3.3201, 3.08705, 2.30621, 1.60411, 1.05795, 0.43346, -0.50302, -1.12638, -2.06296, -2.99995, -3.62434, -4.32756, -4.87474, -4.79876, -4.64536, -4.33398, -3.71021, 3.31714, -1.91487, 0.89588, 4.01873, 3.94132, 4.72196, 5.5028, 5.97154, 4.95755, 4.49054, 3.55447, 2.69653, 2.07255, 1.13668, 0.27803, -0.97064, -2.29795, -3.23483, -4.17233, -4.79753, -4.95378, -4.79998, -4.64587, -4.02251, -3.24177, -2.22717, -1.05621, 0.27089, 3.08215, 5.5028, 5.97144, 6.43989, 7.29966, 7.6141, 6.91231, 5.97644, 5.35246, 4.41497, 3.2433, 2.30652, 1.29253, -0.58777, -1.59707, -2.53344, -3.31337, -4.25086, -5.0317, -5.42192, -6.20327, -6.28313, -5.89505, -5.27128, -4.49105, -2.77384, -1.60319, -0.66671, 0.89486, 2.14415, 3.62862, 5.03435, 6.28476, 6.90955, 7.3784, 7.30232, 6.44437, 5.19519, 4.41497, 3.24371, 2.15027, 1.21369, 0.66855, -0.65876, -1.90824, -3.00168, -3.86105, -4.6422, -5.34542, -5.8922, -6.36074, -6.05089, -5.42732, -4.96, -4.02312, -3.00821, -2.22757, -1.36912, -0.19817, 1.44194, 2.53538, 3.86309, 5.19132, 6.36278, 7.45653, 8.08152, 8.86328, 9.17588, 9.17833, 7.69467, 6.68038, 5.97828, 5.11931, 4.18192, 3.40098, 2.77649, 1.99514, 1.05795, -0.34799, -1.28528, -2.45624, -3.6276, -4.79876, -5.50137, -6.20439, -6.75116, -7.14148, -7.61033, -8.15781, -8.15914, -7.9267, -7.14688, -5.81968, -4.49248, -2.85216, -1.44663, -0.11953, 1.91089, 4.02036, 5.42671, 9.41138, 8.08285, 8.78597, 9.25503, 8.86583, 8.00728, 7.46112, 6.36798, 5.74431, 4.49452, 3.32316, 1.99504, 0.82347, -0.19154, -1.44092, -2.61269, -3.62801, -4.40895, -5.18958, -6.04896, -6.59573, -7.37728, -8.15894, -7.77035, -7.06815, -6.13147, -4.88218, -3.55447, -2.46175, -1.44704, -0.19807, 1.52007, 4.56673, 5.81693, 6.75473, 8.23971, 9.95815, 10.4271, 10.7396, 10.81956, 10.82119, 10.19671, 8.94742, 8.16669, 6.99502, 5.82335, 4.96408, 3.47961, 2.22951, 0.66702, -0.19154, -1.51915, -3.23759, -4.40895, -5.34624, -6.28333, -6.90812, -7.92415, -8.62728, -9.40893, -9.95631, -9.87952, -9.4126, -8.78913, -7.53975, -6.21204, -4.88382, -3.71205, -2.69724, -1.36912, 0.81776, 2.77037, 4.64506, 5.6617, 0.50546, 8.39657, 9.56855, 10.50625, 11.05322, 10.35163, 9.96233, 9.18159, 8.32273, 6.99451, 6.13606, 4.96429, 3.87023, 3.01076, 2.07398, 0.74545, -0.19164, -1.44143, -3.00372, -4.25392, -5.89454, -6.67538, -7.53475, -8.15955, -8.70652, -9.33172, -9.8789, -9.80251, -9.10072, -8.24257, -6.68058, -5.35226, -3.94683, -2.85349, -1.68172, 0.2715, 2.45807, 4.09818, 7.14617, 8.47419, 10.42782, 11.52166, 12.61653, 12.69639, 12.15084, 11.37072, 0.98013, 8.87113, 7.30884, 6.13697, 4.49605, 2.93315, 1.76127, 0.51199, -2.06653, -3.62903, -5.1134, -6.28506, -7.30048, -8.316, -9.01882, -9.95662, -10.73838, -11.20753, -11.13104, -10.97612, -10.27422, -9.41576, -8.16597, -7.15045, -6.05701, -4.57234, -3.1663, -1.44755, 3.86462, 7.14688, 8.55343, 9.72541, 10.89748, 11.83549, 12.4609, 12.7737, 12.697, 12.07343, 11.2928, 10.43404, 9.26227, 8.16822, 6.29281, 4.9649, 3.55814, 1.99544, -0.03488, -1.83236, -3.47257, -5.26965, -6.6762, -7.76974, -8.70744, -9.72347, -10.7396, -11.20845, -10.97642, -10.43016, -9.25941, -8.47857, -7.15035, -6.13473, -5.11931, -3.79089, -2.30621, 1.13087, 2.53681, 4.48993, 6.05263, 7.85001, 9.02218, 10.27228, 11.36644, 12.30434, 13.08589, 14.024, 14.57159, 14.88552, 14.73049, 14.26266, -2.22309, 12.31005, 11.37276, 10.35734, 9.34172, 8.24787, 6.76299, 5.90352, 4.10604, 3.16854, 1.91844, -1.36341, -3.31663, -5.50371, -7.37932, -8.47286, -10.03607, -10.89575, -11.28627, -12.06782, -12.77166, -13.00756, -12.61867, -11.91678, -10.90228, -9.7304, -8.55853, 4.56867, -5.98042, -4.49574, -3.32397, -1.99555, -0.43224, 5.03721, 9.33519, 11.5234, 13.71211, 14.41565, 14.88501, 14.96435, 14.49663, 14.10661, 13.404, 12.46661, 11.13808, 10.20099, 9.2637, 8.09142, 6.45008, 5.66904, 4.49676, 2.85614, 1.91875, 0.1998, -1.05071, -3.94255, -6.83275, -8.31743, -9.72459, -10.9752, -11.67822, -12.45988, -13.16361, -12.77431, -12.38481, -11.13594, -9.72969, -8.32385, -7.38666, -5.90229, -4.26147, 7.85133, -1.5268, 0.42663, 2.38056, 8.71019, 11.99306, 13.39972, 14.49408, 15.43208, 16.05759, 16.52715, 16.21619, 15.98293, 15.12417, 13.9522, 13.0147, 11.60887, 10.437, 8.63992, 7.85857, 6.45161, 5.04506, 3.40342, 1.99677, 1.05927, -0.58104, -2.61279, -5.34777, -7.37993, -8.55211, -9.80292, -10.81864, -12.38216, -13.78912, -14.41473, -14.41605, -14.57414, -13.63756, -12.31005, -10.9037, -9.41933, -7.93507, -6.21622, -4.73124, -3.0898, -1.5269, 0.34962, 1.52098, 3.08399, 5.2724, 7.46071, 9.80537, 12.15044, 13.94792, 15.1203, 15.98028, 16.37121, 16.37254, 15.51439, 14.2649, 13.09324, 11.68699, 9.65514, 7.38901, 5.82672, 3.09082, 0.8248, -1.12853, -3.55131, -5.03619, -6.99012, -8.55323, -10.11695, -11.44538, -12.4612, -13.0862, -13.86806, -14.49367, -14.72988, -14.1061, -13.09109, -12.07598, -10.90381, -9.57569, -8.79495, -7.23194, -5.90362, -4.41864, -3.0898, -1.91712, -0.19745, 1.13118, 2.85012, 4.80375, 6.5227, 8.16403, 9.72714, 11.52503, 13.63542, 15.1205, 16.05851, 16.76214, 17.46567, 17.77848, 18.17032, 18.17175, 17.62569, 16.84496, 16.14204, 15.36079, 14.18892, 13.09497, 12.2358, 11.06342, 9.81332, 8.25042, 6.60909, 4.57672, 3.09164, 1.4502, 0.04386, -1.3629, -2.9255, -4.41048, -6.52097, -8.16281, -9.64789, -10.82017, -12.38318, -13.55566, -14.49367, -15.1972, -16.21404, -16.21568, -15.98263, -15.28042, -14.10876, -12.85866, -11.53074, -10.35877, -9.03024, -7.62359, -5.82641, -3.9504, -2.54344, -1.68397, -0.19858, 1.52078, 2.92723, 5.81968, 6.60123, 8.32079, 10.58764, 12.54218, 14.80933, 16.52868, 17.38857, 17.85752, 17.93738, 17.07913, 16.2988, 14.89245, 13.79871, 12.15768, 10.36081, 8.64104, 6.9221, 4.96786, 3.24799, 1.21562, -0.34728, -2.53579, -4.17682, -5.81784, -7.77198, -9.41342, -11.05547, -12.30597, -13.40013, -14.65084, -15.43269, -16.05861, -15.98212, -15.35794, -14.65563, -13.17105, -11.76501, -10.12429, -8.79587, -7.07641, -4.73175, -2.93437, -0.98064, 1.44245, 3.86544, 6.75769, 8.86818, 10.66607, 12.3077, 17.54543, 18.79614, 19.5781, 19.89111, 20.20524, 19.89356, 18.87814, 17.55073, 16.53521, 14.73783, 13.33128, 11.5338, 9.81414, 8.17311, 6.21928, 4.49962, 2.85788, 1.13821, -0.26875, -1.83134, -4.7242, -6.52178, -8.39708, -10.586, -13.08752, -14.72906, -16.13643, -17.30932, -17.54502, -17.31258, -17.0011, -15.67309, -14.65787, -13.09538, -11.84508, -10.20374, -8.48459, -6.92159, -4.88943, -3.63882, -1.99697, -0.74667, 0.97299, 3.1616, 5.2722, 7.14821, 8.6335, 10.04046, 11.60387, 16.29441, 18.32698, 19.8905, 20.28296, 19.81564, 19.19084, 18.01917, 16.76918, 15.98824, 14.89419, 13.48733, 11.29922, 9.57987, 7.07896, 5.20294, 3.87462, 1.92018, 0.27854, -1.9882, -5.66221, -7.53812, -9.023, -10.42975, -11.99347, -14.1827, -15.35518, -16.68453, -17.62325, -17.54706, -16.84506, -15.59496, -14.03257, -12.70486, -11.37633, -9.65677, -6.29628, -4.73307, -3.24799, -1.68488, 1.28539, 4.17784, 7.46112, 9.96254, 11.60377, 13.47998, 15.35651, 17.07637, 18.56166, 19.81268, 20.51631, 20.98557, 21.53316, 22.2376, 21.92674, 20.99046, 19.66224, 18.64672, 17.24038, 15.91174, 14.19208, 12.62969, 11.22273, 9.26859, 7.93986, 6.37645, 5.12594, 3.09327, 1.29518, -1.0502, -3.39537, -5.50565, -7.61614, -11.05536, -13.08783, -14.57353, -16.2937, -17.31014, -18.48303, -19.50028, -19.11108, -18.48701, -17.54981, -16.37835, -14.81545, -13.56555, -12.00306, -10.51798, -8.25124, -6.45365, -4.49931, -3.01392, -0.1996, 4.49095, 6.36706, 8.24338, 9.80659, 11.13563, 12.62112, 14.10661, 15.43575, 16.53011, 17.7028, 18.64101, 19.34444, 20.1264, 21.06482, 21.84698, 22.16101, 21.30256, 20.83503, 18.95953, 17.70974, 16.61579, 14.89612, 13.33342, 10.91023, 9.73754, 8.17423, 5.36001, 3.64055, 1.45153, -1.0502, -3.08297, -4.7243, -6.67875, -8.78944, -10.58753, -11.9948, -13.40227, -15.20016, -16.21649, -18.01459, -19.57871, -19.34658, -18.56635, -17.70698, -16.61324, -15.44116, -14.03512, -12.70659, -10.59641, -8.87685, -7.15698, -5.90627, -3.95183, -0.35533, 4.56928, 6.4456, 7.85266, 9.25941, 10.66658, 12.30832, 14.18474, 15.67043, 17.0778, 18.40715, 19.42338, 20.67439, 22.00405, 22.16193, 20.99057, 19.35005, 17.86598, 16.6936, 15.52153, 13.95873, 11.92647, 10.36315, 9.19057, 6.61113, 3.71837, 0.98156, -1.0506, -3.23942, -5.74135, -7.93007, -9.96264, -12.07384, -12.93393, -14.18443, -15.5919, -16.60793, -17.38969, -18.3281, -19.57994, -18.87814, -17.4721, -16.22271, -14.50387, -12.70618, -11.22181, -8.79872, -6.6099]
    # displacement_step = generate_cyclic_load(duration=7, sampling_rate=100, max_displacement=86)
    # displacement_step = generate_cyclic_loading(num_cycles=10, initial_displacement=5, max_displacement=86, num_points=50, repetition_cycles=2)
    # displacement_step = generate_cyclic_loading_with_repetition(num_cycles=12, max_displacement=21, num_points=36, repetition_cycles=3)

    displacement_step = generate_cyclic_loading_exponential(num_cycles=7, initial_displacement=20, max_displacement=30, num_points=50, repetition_cycles=2)

    # displacement_step = generate_cyclic_load(duration=24, sampling_rate=50, max_displacement=23)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Lefas_SW11():
    # https://www.sciencedirect.com/science/article/pii/S0141029618326890?via%3Dihub
    global name
    name = 'Lefas_SW11'
    # Wall Geometry
    tw = 70 * mm  # Wall thickness
    tb = tw
    hw = 825 * mm  # Wall height
    lw = 750 * mm  # Wall length
    lbe = 140 * mm  # Boundary element length
    lweb = lw - (2 * lbe)

    # Material proprieties
    fc = 0.8 * 52.9 * MPa  # Concrete peak compressive stress (+Tension, -Compression)
    fyb = 480 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fyw = 480 * MPa  # Steel tension yield strength (+Tension, -Compression)
    fx = 520 * MPa

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    rouYb = 0.0315
    rouYw = 0.0245
    rouXb = 0.0125
    rouXw = 0.0115

    loadF = 0.0000

    displacement_step = generate_cyclic_loading_linear(num_cycles=10, max_displacement=10, num_points=50, repetition_cycles=1)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Oesterle_B7():
    global name
    name = 'Oesterle_B7'
    # Wall Geometry
    tw = 102 * mm  # Wall thickness
    tb = 305 * mm  # Wall thickness
    hw = 4.572 * m  # Wall height
    lw = 1.905 * m  # Wall length
    lbe = 305 * mm  # Boundary element length
    lweb = lw - (2 * lbe)
    # Material proprieties
    fc = 50 * MPa
    fyb = 455 * MPa
    fyw = 480 * MPa
    fx = 495 * MPa

    rouYb = 0.0367
    rouYw = 0.0029
    rouXb = 0.0135
    rouXw = 0.0063

    loadF = 0.095
    displacement_step = generate_cyclic_loading_linear(num_cycles=6, max_displacement=125, num_points=100, repetition_cycles=2)
    displacement_step = [0.30, 0.52, 1.34, 2.76, 2.63, 3.15, 4.60, 5.58, 5.69, 4.58, 3.19, 1.19, 0.12, -1.86, -2.11, -4.18, -5.34, -4.57, -3.16, -1.46, 1.40, 2.07, 3.44, 4.86, 5.98, 8.02, 9.75, 11.51, 13.32, 14.57, 13.12, 12.29, 11.13, 10.31, 8.60, 7.18, 3.37, 1.74, 0.03, -0.16, -1.23, -3.22,
                         -4.03, -4.55, -5.69,
     -6.84, -8.02, -11.61, -12.82, -12.29, -10.28, -8.86, -6.53, -4.81, -1.93, -0.26, 3.43, 6.88, 5.58, 4.57, 6.00, 7.74, 10.06, 11.24, 10.43, 9.64, 8.82, 7.16, 3.70, 2.06, -0.54, -2.20, -2.69, -5.30, -7.03, -7.84, -8.10, -8.34, -10.11, -13.13, -12.28, -10.85, -8.53, -6.50, -4.49, -2.23, -0.54,
     2.86, 5.44, 8.31, 12.01, 12.81, 15.13, 17.76, 19.80, 22.14, 24.19, 27.48, 29.58, 28.73, 27.28, 26.12, 24.09, 22.35, 20.62, 17.37, 14.46, 13.03, 11.61, 9.62, 8.48, 6.17, 3.86, 1.57, -0.45, -5.07, -5.86, -6.67, -8.12, -8.62, -10.65, -12.09, -14.15, -16.18, -18.85, -21.24, -23.33, -23.09, -21.97,
     -20.26, -16.77, -14.18, -12.17, -10.45, -6.93, -4.91, -1.11, 0.25, 3.13, 5.13, 6.86, 9.74, 12.62, 14.95, 17.53, 19.84, 24.23, 26.88, 29.27, 28.47, 25.88, 22.94, 19.75, 16.54, 13.65, 10.73, 8.46, 6.14, 5.31, 1.56, -1.33, -4.18, -7.66, -10.27, -11.70, -14.01, -15.73, -17.77, -19.18, -20.33,
     -23.36, -22.27, -19.69, -16.20, -12.75, -10.15, -8.99, -5.19, 0.92, -0.01, 3.17, 5.44, 8.33, 12.01, 16.27, 21.54, 25.92, 29.77, 33.35, 34.83, 37.24, 37.58, 38.20, 39.95, 44.46, 49.28, 50.23, 51.23, 50.12, -0.46, 46.67, 44.92, 42.28, 39.37, 37.04, 34.40, 31.19, 27.37, 24.44, 22.41, 19.19, 16.55,
     12.41, 9.77, 6.85, 3.63, 0.70, -3.73, -6.71, -8.97, -10.91, -15.63, -20.04, -21.79, -23.84, -25.59, -27.95, -30.33, -31.51, -34.24, -35.18, -36.05, -40.25, -44.47, -47.16, -51.40, -50.88, -50.35, -48.33, -46.32, -43.43, -39.38, -35.00, 46.10, -27.71, -24.20, -19.79, -15.94, -12.09, -8.55,
     -4.41, 0.64, 5.39, 8.31, 10.97, 18.09, 22.19, 25.68, 30.70, 35.13, 39.28, 44.61, 47.57, 49.65, 51.17, 52.13, 49.83, 46.90, 44.64, 40.84, 38.19, 34.98, 31.77, 27.94, 26.22, 22.70, 20.37, 16.84, 14.20, 9.48, 4.81, -3.10, -12.36, -19.42, -22.68, -25.32, -27.68, -31.24, -35.09, -37.73, -40.98,
     -45.75, -49.66, -50.32, -47.47, -44.32, -39.95, -35.85, -31.79, -29.47, -24.48, -21.56, -17.12, -13.60, -9.16, -4.72, 3.00, 8.03, 14.51, 20.70, 25.99, 29.81, 33.35, 37.50, 41.34, 49.09, 51.51, 51.28, 48.37, 45.48, 41.40, 38.20, 35.57, 31.44, 29.13, 24.71, 20.35, 15.35, 11.83, 8.02, 4.24, -1.67,
     5.51, -9.67, -14.71, -17.38, -19.14, -22.97, -26.81, -31.54, -35.97, -40.71, -45.77, -48.47, -49.70, -48.62, -46.03, -44.05, -41.15, -36.15, -32.08, -29.76, -24.18, -18.60, -13.89, -9.44, -4.70, -0.55, 6.86, 13.95, 19.83, 27.22, 31.35, 37.26, 42.60, 47.05, 51.52, 56.01, 59.60, 60.24, 60.56,
     61.43, 64.12, 68.63, 72.54, 76.47, 77.73, 77.79, 77.28, 74.35, 71.73, 68.49, 65.30, 62.96, 59.14, 55.03, 51.50, 48.27, 44.74, 40.60, 37.05, 32.61, 29.64, 25.46, 18.01, 13.54, 9.07, 4.32, -8.49, -17.96, -21.50, -23.84, -28.28, -33.31, -39.50, -44.87, -50.55, -54.45, -61.07, -67.69, -71.61,
     -74.31, -77.04, -77.15, -74.84, -71.67, -69.94, -66.17, -62.96, -58.28, -54.79, -50.69, -44.77, -38.84, -32.30, -26.33, -21.54, -15.87, -9.57, -2.71, 1.47, 12.78, 18.70, 24.62, 29.36, 34.72, 41.57, 46.92, 53.17, 59.44, 65.44, 72.03, 75.33, 78.37, 76.97, 73.76, 71.44, 67.02, 64.70, 60.01, 55.60,
     52.38, 47.96, 43.84, 41.77, 38.54, 35.27, 27.55, 21.28, 14.38, 9.59, 5.42, -0.25, -7.10, -12.11, -17.77, -21.63, -24.89, -27.83, -31.98, -36.12, -41.18, -45.33, -48.92, -53.70, -60.29, -65.06, -70.16, -74.06, -77.10, -75.42, -73.14, -69.92, -67.91, -64.13, -60.34, -57.73, -53.06, -49.53,
     -41.82, -35.29, -24.85, -19.20, -10.80, -3.64, 5.92, 11.84, 18.42, 25.25, 30.58, 35.95, 41.30, 47.85, 52.63, 58.31, 64.87, 69.67, 75.05, 77.16, 76.97, 74.32, 71.45, 67.62, 65.00, 60.90, 57.07, 54.45, 51.80, 47.08, 43.84, 38.82, 18.58, 12.60, 3.93, -6.14, -15.07, -19.54, -24.91, -30.28, -35.00,
     -39.17, -43.04, -45.08, -50.16, -56.43, -60.60, -68.41, -72.30, -76.21, -75.99, -72.52, -68.19, -65.91, -61.22, -57.43, -53.07, -48.64, -40.91, -29.34, -12.90, -3.04, 3.84, 8.00, 22.01, 27.63, 33.00, 38.34, 46.69, 53.83, 58.89, 65.49, 69.97, 74.45, 78.35, 83.17, 90.39, 93.70, 98.22, 100.96,
     101.63, 99.92, 98.18, 94.66, 92.37, 89.46, 87.12, 84.18, 80.65, 76.84, 73.62, 67.98, 64.47, 57.61, 53.48, 48.09, 41.52, 32.79, 24.06, 18.07, 11.78, -2.54, -9.67, -18.34, -25.19, -34.16, -39.16, -48.09, -55.54, -62.11, -66.60, -71.69, -77.39, -82.49, -88.81, -92.72, -98.15, -101.78, -100.97,
     -99.91, -97.89, -94.69, -89.41, -84.44, -79.74, -74.14, -69.73, -65.30, -60.28, -42.39, -49.26, -43.28, -35.16, -28.55, -22.54, -18.05, -9.94, -3.96, 3.82, 14.57, 23.49, 31.23, 36.59, 43.15, 49.11, 55.70, 62.27, 68.84, 77.53, 81.73, 91.05, 96.78, 101.62, 103.47, 101.43, 99.12, 97.09, 93.88,
     89.22, 84.49, 81.84, 77.72, 75.09, 72.16, 67.71, 62.66, 58.21, 52.30, 48.12, 40.63, 32.83, 23.21, 17.83, 13.64, 7.64, 1.96, -4.61, -13.57, -22.55, -28.19, -34.17, -38.34, -44.90, -50.28, -53.54, -59.22, -64.30, -68.79, -72.07, -77.78, -84.37, -90.68, -96.09, -100.60, -101.30, -100.20, -96.44,
     -92.65, -87.65, -84.15, -80.91, -77.10, -71.50, -65.88, -61.45, -56.43, -48.38, -36.07, -27.96, -15.93, -8.74, -0.96, 5.33, 15.76, 22.63, 27.68, 37.53, 42.88, 48.57, 53.95, 59.92, 64.69, 69.79, 75.77, 83.28, 88.38, 91.69, 96.80, 101.32, 102.59, 98.81, 94.42, 91.22, 89.51, 85.98, 80.70, 75.39,
     69.77, 62.67, 35.24, 22.03, 4.66, -15.06, -24.05, -30.94, -35.71, -45.53, -52.09, -59.24, -66.72, -78.40, -87.09, -95.81, -99.42, -101.25, -100.76, -99.06, -95.87, -90.32, -87.09, -83.58, -78.28, -75.04, -71.18, -67.34, -61.45, -55.24, -48.96, -35.76, -25.54, -6.94, 5.92, 16.94, 30.08, 44.44,
     52.20, 59.65, 66.53, 72.82, 75.21, 77.36, 78.53, 81.21, 86.92, 93.22, 101.93, 108.55, 115.46, 121.80, 127.54, 127.33, 126.22, 124.51, 121.86, 119.55, 116.04, 113.11, 109.00, 105.77, 100.47, 94.57, 89.53, 84.46, 77.32, 71.64, 65.66, 55.42, 47.90, 41.88, 32.55, 18.44, 3.17, -7.59, -16.56, -30.60,
     -40.16, -47.30, -60.15, -67.02, -76.31, -87.11, -97.03, -104.26, -112.69, -119.92, -125.04, -128.08, -127.57, -124.39, -121.48, -116.81, -112.09, -106.84, -101.83, -94.75, -87.97, -82.34, -78.49, -72.52, -66.22, -59.00, -50.57, -39.40, -26.47, -18.99, -13.00, -5.81, 3.49, 2.60, 14.27, 23.53,
     33.99, 40.59, 46.57, 52.85, 59.42, 63.30, 67.50, 69.34, 69.59, 72.89, 78.00, 84.30, 90.61, 96.91, 104.41, 112.23, 119.45, 126.37, 126.77, 125.07, 121.30, 118.69, 114.59, 110.75, 106.94, 102.24, 96.63, 91.60, 84.77, 80.32, 74.04, 53.33, 38.27, 20.54, 9.16, -3.69, -18.41, -26.47, -33.04, -39.90,
     -45.88, -50.34, -58.40, -66.21, -71.28, -78.78, -86.88, -95.30, -99.79, -108.52, -114.84, -122.67, -127.82, -127.00, -125.26, -122.94, -119.17, -115.09, -109.50, -103.62, -96.82, -90.94, -83.52, -77.59, -65.93, -58.41, -48.47, -37.03, -30.12, -22.91, -15.39, -5.53, 2.25, 22.65, 32.24, 37.32,
     43.33, 48.12, 50.52, 51.45, 52.94, 55.29, 59.76, 66.35, 74.45, 81.06, 86.45, 91.85, 98.18, 101.78, 101.83, 103.60, 107.19, 110.78, 115.28, 118.60, 123.45, 124.75, 125.42, 127.02, 128.00, 128.99, 126.35, 123.44, 119.92, 117.28, 111.67, 105.78, 103.12, 97.75, 91.81, 83.75, 74.75, 61.53, 47.06,
     34.99, 18.75, -6.76, -14.85, -19.62, -25.61, -31.29, -37.25, -42.94, -46.52, -48.92, -50.76, -54.92, -58.19, -65.06, -68.04, -71.63, -74.63, -76.20, -78.56, -86.06, -90.85, -95.95, -99.26, -99.91, -102.87, -109.18, -114.60, -120.92, -125.45, -127.61, -130.28, -134.17, -140.81, -143.23, -143.58,
     -144.87, -146.79, -148.43, -149.16, -149.90, -149.09, -146.48, -143.85, -141.20, -137.35, -132.90, -127.83, -123.66, -119.49, -114.40, -110.81, -107.82]
    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Oesterle_B4():
    global name
    name = 'Oesterle_B4'
    # Wall Geometry
    tw = 102 * mm  # Wall thickness
    tb = 305 * mm  # Wall thickness
    hw = 4.572 * m  # Wall height
    lw = 1.905 * m  # Wall length
    lbe = 305 * mm  # Boundary element length
    lweb = lw - (2 * lbe)
    # Material proprieties
    fc = 45 * MPa
    fyb = 450.2 * MPa
    fyw = 480 * MPa
    fx = 495 * MPa

    rouYb = 0.0121
    rouYw = 0.0029
    rouXb = 0.0128
    rouXw = 0.0031

    loadF = 0.001
    displacement_step = generate_cyclic_loading_linear(num_cycles=6, max_displacement=240, num_points=100, repetition_cycles=2)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Xiangyu_SW_N():
    global name
    name = 'Xiangyu_SW_N'
    # https://linkinghub.elsevier.com/retrieve/pii/S2352710222005642
    # Wall Geometry
    tw = 150 * mm  # Wall thickness
    tb = 150 * mm  # Wall thickness
    hw = 1.600 * m  # Wall height
    lw = 0.800 * m  # Wall length
    lbe = 135 * mm  # Boundary element length
    lweb = lw - (2 * lbe)

    # Material proprieties
    fc = 68.50 * MPa
    fyb = 613 * MPa
    fyw = 602 * MPa
    fx = 430 * MPa

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    YbeNum = 4  # BE long reinforcement diameter (mm)
    YbeDiam = 10  # BE long reinforcement diameter (mm)
    YwebNum = 10  # Web long reinforcement diameter (mm)
    YwebDiam = 8  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary        0.0188496
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web             0.00376992

    # ---- Steel in X direction (BE + Web) -------------------------------------------
    XbeNum = 32 * 2  # BE long reinforcement diameter (mm)
    XbeDiam = 8  # BE long reinforcement diameter (mm)
    XwebNum = 16 * 2  # Web long reinforcement diameter (mm)
    XwebDiam = 8  # Web long reinforcement diameter (mm)
    rouXb = (rebarArea(XbeDiam) * XbeNum) / (hw * tw)  # Y boundary        0.01
    rouXw = (rebarArea(XwebDiam) * XwebNum) / (hw * tw)  # Y web          0.0033

    loadF = 0.210
    displacement_step = generate_cyclic_loading_linear(num_cycles=8, max_displacement=30, num_points=30, repetition_cycles=1)
    displacement_step = generate_cyclic_loading(num_cycles=8, initial_displacement=10, max_displacement=30, num_points=50, repetition_cycles=1)
    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Guoshan_SW():
    global name
    name = 'Guoshan_SW'
    # http://dx.doi.org/10.1016/j.engstruct.2017.06.026
    # Wall Geometry
    tw = 180 * mm  # Wall thickness
    tb = 180 * mm  # Wall thickness
    hw = 3.00 * m  # Wall height
    lw = 1.54 * m  # Wall length
    lbe = 400 * mm  # Boundary element length
    lweb = lw - (2 * lbe)

    # Material proprieties
    fc = 32 * MPa
    fyb = 455 * MPa
    fyw = 427 * MPa
    fx = 410 * MPa

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    YbeNum = 8  # BE long reinforcement diameter (mm)
    YbeDiam = 16  # BE long reinforcement diameter (mm)
    YwebNum = 8  # Web long reinforcement diameter (mm)
    YwebDiam = 10  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary        0.0188496
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web             0.00376992
    print('rouYb', rouYb)
    print('rouYw', rouYw)

    # ---- Steel in X direction (BE + Web) -------------------------------------------
    XbeNum = 24 * 2  # BE long reinforcement diameter (mm)
    XbeDiam = 8  # BE long reinforcement diameter (mm)
    XwebNum = 15 * 2  # Web long reinforcement diameter (mm)
    XwebDiam = 8  # Web long reinforcement diameter (mm)
    rouXb = (rebarArea(XbeDiam) * XbeNum) / (hw * tw)  # Y boundary        0.01
    rouXw = (rebarArea(XwebDiam) * XwebNum) / (hw * tw)  # Y web          0.0033
    print('rouXb', rouXb)
    print('rouXw', rouXw)
    # rouYb = 0.0121
    # rouYw = 0.0029
    # rouXb = 0.0228
    # rouXw = 0.0030

    loadF = 0.15
    displacement_step = generate_cyclic_loading_linear(num_cycles=6, max_displacement=60, num_points=100, repetition_cycles=2)
    displacement_step = generate_cyclic_loading(num_cycles=11, initial_displacement=2, max_displacement=60, num_points=40, repetition_cycles=2)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Yi_USWB():
    global name
    name = 'Yi_USWB'
    # https://www.sciencedirect.com/science/article/pii/S2214509524002109
    # Wall Geometry
    tw = 100 * mm  # Wall thickness
    tb = 200 * mm  # Wall thickness
    hw = 2.40 * m  # Wall height
    lw = 1.20 * m  # Wall length
    lbe = 200 * mm  # Boundary element length
    lweb = lw - (2 * lbe)

    # Material proprieties
    fc = 135*0.7 * MPa
    fyb = 402 * MPa
    fyw = 410 * MPa
    fx = 425 * MPa

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    YbeNum = 10  # BE long reinforcement diameter (mm)
    YbeDiam = 12  # BE long reinforcement diameter (mm)
    YwebNum = 12  # Web long reinforcement diameter (mm)
    YwebDiam = 8  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary        0.0188496
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web             0.00376992

    # ---- Steel in X direction (BE + Web) -------------------------------------------
    XbeNum = 18 * 2  # BE long reinforcement diameter (mm)
    XbeDiam = 10  # BE long reinforcement diameter (mm)
    XwebNum = 24 * 2  # Web long reinforcement diameter (mm)
    XwebDiam = 10  # Web long reinforcement diameter (mm)
    rouXb = (rebarArea(XbeDiam) * XbeNum) / (hw * tw)  # Y boundary        0.01
    rouXw = (rebarArea(XwebDiam) * XwebNum) / (hw * tw)  # Y web          0.0033

    rouYb = 0.0276
    rouYw = 0.0084
    rouXb = 0.0179
    rouXw = 0.0157
    loadF = 0.21
    displacement_step = generate_cyclic_loading_linear(num_cycles=9, max_displacement=40, num_points=100, repetition_cycles=3)
    # displacement_step = generate_cyclic_loading(num_cycles=9, initial_displacement=1, max_displacement=30, num_points=40, repetition_cycles=3)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step


def Tao_LW():
    global name
    name = 'Tao_LW'
    # https://www.sciencedirect.com/science/article/pii/S0141029619317213#b0175
    # Wall Geometry
    tw = 120 * mm  # Wall thickness
    tb = 200 * mm  # Wall thickness
    hw = 1.00 * m  # Wall height
    lw = 0.80 * m  # Wall length
    lbe = 100 * mm  # Boundary element length
    lweb = lw - (2 * lbe)

    # Material proprieties
    fc = 25.5 * MPa
    fyb = 543 * MPa
    fyw = 543 * MPa
    fx = 505 * MPa

    # ---- Steel in Y direction (BE + Web) -------------------------------------------
    YbeNum = 8  # BE long reinforcement diameter (mm)
    YbeDiam = 10  # BE long reinforcement diameter (mm)
    YwebNum = 12  # Web long reinforcement diameter (mm)
    YwebDiam = 6  # Web long reinforcement diameter (mm)
    rouYb = (rebarArea(YbeDiam) * YbeNum) / (lbe * tw)  # Y boundary        0.0188496
    rouYw = (rebarArea(YwebDiam) * YwebNum) / (lweb * tw)  # Y web             0.00376992

    # ---- Steel in X direction (BE + Web) -------------------------------------------
    XbeNum = 20 * 2  # BE long reinforcement diameter (mm)
    XbeDiam = 6  # BE long reinforcement diameter (mm)
    XwebNum = 10 * 2  # Web long reinforcement diameter (mm)
    XwebDiam = 6  # Web long reinforcement diameter (mm)
    rouXb = (rebarArea(XbeDiam) * XbeNum) / (hw * tw)  # Y boundary        0.01
    rouXw = (rebarArea(XwebDiam) * XwebNum) / (hw * tw)  # Y web          0.0033

    # rouYb = 0.0245
    # rouYw = 0.0470
    # rouXb = 0.0089
    # rouXw = 0.0047
    loadF = 0.23
    displacement_step = generate_cyclic_loading_linear(num_cycles=7, max_displacement=20, num_points=30, repetition_cycles=2)
    displacement_step = generate_cyclic_loading(num_cycles=7, initial_displacement=1, max_displacement=20, num_points=30, repetition_cycles=2)

    return tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step



# ------- Select Model for Validation -----------------------------------------------------------------------------------------------
validation_model = Thomsen_and_Wallace_RW2()
# validation_model = Thomsen_and_Wallace_RW1()
# validation_model = Tran_and_Wallace_A15P10S78()
# validation_model = Tran_and_Wallace_A20P10S38()
# validation_model = Dazio_WSH2()
# validation_model = Dazio_WSH3()
# validation_model = Greifenhagen_M3()
# validation_model = Lu_SW11()
# validation_model = Lefas_SW22()
# validation_model = Test()
# validation_model = Zhang_SW12()
# validation_model = Oesterle_R2()
# validation_model = Aejaz_SW1()
# validation_model = Alarcon_W1()
# validation_model = Farhad_RWB()
# validation_model = Baek_NS2L()
# validation_model = Hube_W6()
# validation_model = AR2_8()
# validation_model = Mosoarca_SW1()
# validation_model = Altin_S1()
# validation_model = Rao_1()
# validation_model = Bismarck()
# validation_model = Kong_1()

# VALIDATION FOR PAPER =====================================

# Monotonic
validation_model = Oesterle_B4()
validation_model = Lefas_SW11()
validation_model = Zhang_SW12()

# Cyclic
# validation_model = Tran_and_Wallace_A20P10S63()
# validation_model = SW-N-N()
validation_model = Oesterle_B7()
# validation_model = Thomsen_and_Wallace_RW2()
# validation_model = Greifenhagen_M3()
# validation_model = Greifenhagen_M4()

# Crack Validation
# validation_model = Tao_LW()
# validation_model = Yi_USWB()
# validation_model = Xiangyu_SW_N()
# validation_model = Tran_and_Wallace_A20P10S63()
# validation_model = Guoshan_SW()

tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, displacement_step = validation_model

#  ---------------- RUN CYCLIC ANALYSIS ---------------------------------------------------------------
eleH, eleL = 14, 12
rcmodel.build_model(tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, eleH, eleL, printProgression=True)
rcmodel.run_gravity(printProgression=False)
x, y, c1, a1, c2, a2 = rcmodel.run_analysis(displacement_step, analysis='cyclic', printProgression=True, enablePlotting=True)
rcmodel.reset_analysis()
plotting(x, y, 'Displacement (mm)', 'Base Shear (kN)', f'{name}', save_fig=True, plotValidation=True, plot_envelope=True)
plot_max_panel_response(eleH, eleL, c1, a1, c2, a2, f'{name}', hw/lw, save_fig=True)

# ---------------- RUN PUSHOVER ANALYSIS ---------------------------------------------------------------
# rcmodel.build_model(tw, tb, hw, lw, lbe, fc, fyb, fyw, fx, rouYb, rouYw, rouXb, rouXw, loadF, printProgression=True)
# rcmodel.run_gravity(printProgression=False)
# [x, y] = rcmodel.run_analysis(displacement_step, analysis='pushover', printProgression=False)
# rcmodel.reset_analysis()
# plotting(x, y, 'Displacement (mm)', 'Base Shear (kN)', f'{name}', save_fig=False, plotValidation=True)

# Find the index of the maximum y value
max_y_index = np.argmax(y)
max_x_value = x[max_y_index]  # Get the corresponding x value
print('Maximum Base Shear:', np.max(y))
print('Corresponding Displacement (x):', max_x_value)
print('Aspect Ratio = ', hw/lw)
